<?xml version="1.0" encoding="UTF-8"?>
<project name="project" default="zip_all_examples">

	<property name="source_folder" location="projects" />
	<property name="pom_template_folder" location="target/example-pom-template" />
	<property name="archive_folder" location="target/example-archives" />
	<property name="target_folder" location="contents" />
	<property name="relative_path_to_pom_template" value="io/sarl/eclipse/wizards/newproject/pom_template.xml" />
	<property name="relative_path_to_source_folder_of_pom_template" value="/home/sgalland/git/sarl.dsl/sarl-eclipse/plugins/io.sarl.eclipse.examples/../io.sarl.eclipse/src" />

	<target name="zip_all_examples" depends="retrieve_pom_template">
		<mkdir dir="${target_folder}" />
		<delete includeEmptyDirs="true">
			<fileset dir="${target_folder}" includes="**/*" />
		</delete>
		<!--zip_example name="name-examples" excludes="**/*._trace,.antlr-generator*.jar"/>-->
		<!-- run task "generate_self" to compose this list (only on linux) -->
		<zip_example name="io-sarl-demos-basic-helloworld" />
		<zip_example name="io-sarl-demos-basic-behaviors" />
		<zip_example name="io-sarl-demos-basic-behaviorinheritance" />
		<zip_example name="io-sarl-demos-basic-countdown" />
		<zip_example name="io-sarl-demos-basic-holarchy" />
		<zip_example name="io-sarl-demos-counter" />
		<zip_example name="io-sarl-demos-factorial" />
		<zip_example name="io-sarl-tutorials-holonicauction" />
		<zip_example name="io-sarl-tutorials-pingpong" />
		<zip_example name="io-sarl-tutorials-pingpongspace" />
		<zip_example name="io-sarl-tutorials-gametgob" />
		<zip_example name="io-sarl-demos-fireworks" />
		<zip_example name="io-sarl-demos-sierpinskifractals" />
		<zip_example name="io-sarl-demos-gameoflife" />
		<zip_example name="io-sarl-demos-boids-awt" />
		<zip_example name="io-sarl-templates-javafx" />
	</target>

	<macrodef name="zip_example">
		<attribute name="name" default="default" />
		<attribute name="group" default="io.sarl.examples.projects" />
		<attribute name="target" default="${target_folder}" />
		<attribute name="source" default="${source_folder}" />
		<attribute name="archive" default="${archive_folder}" />
		<attribute name="pomtemplate" default="${pom_template_folder}/${relative_path_to_pom_template}" />
		<attribute name="excludes" default="bin,bin/**,**/*._trace,.antlr-generator*.jar,component.def,${specific_pom_config}" />
		<sequential>
			<mkdir dir="@{archive}/@{name}" />
			<copy todir="@{archive}/@{name}" overwrite="true" force="true" encoding="UTF-8">
				<fileset dir="@{source}/@{name}" />
				<filterset>
					<filter token="GROUP_ID" value="@{group}"/>
					<filter token="PROJECT_NAME" value="@{name}"/>
					<filter token="PROJECT_VERSION" value="0.13.0"/>
					<filter token="SARL_VERSION" value="0.13.0"/>
					<filter token="AFC_VERSION" value="17.0"/>
					<filter token="FILE_ENCODING" value="UTF-8"/>
					<filter token="JAVA_VERSION" value="17"/>
					<filter token="RELEASE_YEAR" value="2023"/>
					<filter token="MAVEN_COMPILER_VERSION" value="3.11.0"/>
					<filter token="OPENJFX_VERSION" value="17.0.7-ea+1"/>
				</filterset>
			</copy>
			<copy file="@{pomtemplate}" tofile="@{archive}/@{name}/pom.xml" overwrite="false"
			      force="true" encoding="UTF-8">
				<filterset>
					<filter token="GROUP_ID" value="@{group}"/>
					<filter token="PROJECT_NAME" value="@{name}"/>
					<filter token="PROJECT_VERSION" value="0.13.0"/>
					<filter token="SARL_VERSION" value="0.13.0"/>
					<filter token="AFC_VERSION" value="17.0"/>
					<filter token="FILE_ENCODING" value="UTF-8"/>
					<filter token="JAVA_VERSION" value="17"/>
					<filter token="RELEASE_YEAR" value="2023"/>
					<filter token="MAVEN_COMPILER_VERSION" value="3.11.0"/>
					<filter token="OPENJFX_VERSION" value="17.0.7-ea+1"/>
				</filterset>
			</copy>
			<mkdir dir="@{target}" />
			<delete file="@{target}/@{name}.zip" />
			<zip destfile="@{target}/@{name}.zip" basedir="@{archive}/@{name}" excludes="@{excludes}" />
		</sequential>
	</macrodef>

	<target name="retrieve_pom_template">
	        <mkdir dir="${pom_template_folder}" />
		<copy file="${relative_path_to_source_folder_of_pom_template}/${relative_path_to_pom_template}"
		      tofile="${pom_template_folder}/${relative_path_to_pom_template}"
		      overwrite="true" force="true" encoding="UTF-8" />
	</target>

	<target name="generate_self">
		<exec executable="bash">
			<arg value="-c" />
			<arg value="for i in `ls ${source_folder}`; do echo &quot;&lt;zip_example name=\&quot;$i\&quot; /&gt;&quot;; done" />
		</exec>
	</target>

</project>
