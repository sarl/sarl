/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.examples.pingpong

import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Initialize
import io.sarl.api.core.Schedules
import io.sarl.api.core.Logging

/**
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 */
agent PingAgent {

	uses DefaultContextInteractions, Schedules, Logging

	on Pong {
		info("Receiving Pong #" + occurrence.index)
		info("Sending Ping #" + (occurrence.index + 1))
		emit(new Ping( occurrence.index + 1 )) [it == occurrence.source]
	}

	on Initialize {
		info("Waiting for Pong Agent")
		val taskVar = task("waiting_for_partner")
		
		taskVar.every(1000) [
			if (defaultSpace.numberOfStrongParticipants > 1) {
				info("Pong Agent detected.")
				info("Sending Ping #0")
				emit( new Ping(0) )
				taskVar.cancel
			}
		]
	}

}
