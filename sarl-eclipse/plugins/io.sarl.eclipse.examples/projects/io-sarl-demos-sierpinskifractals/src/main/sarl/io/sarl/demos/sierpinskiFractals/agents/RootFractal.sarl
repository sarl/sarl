/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.sierpinskiFractals.agents

import io.sarl.api.core.Behaviors
import io.sarl.api.core.ExternalContextAccess
import io.sarl.api.core.Initialize
import io.sarl.api.javafx.FXBehavior
import io.sarl.demos.sierpinskiFractals.events.Refresh
import io.sarl.demos.sierpinskiFractals.gui.SierpinskiFractalsFxViewerController

/**
 * Root fractal agent.
 * Can communicate with the GUI if not contained in an other agent.
 * Contains other Fractal agent in its inner context.
 *
 * @author <a href="https://github.com/klmp200">Antoine Bartuccio</a>
 * @author <a href="http://www.ciad-lab.fr/nicolas_gaud">Nicolas Gaud</a>
 */
agent RootFractal extends AbstractFractal {

	uses Behaviors, ExternalContextAccess

	var javafxBehavior : FXBehavior

	/* 
	 * Initialization step for the root fractal
	 */
	on Initialize {
		var fxcontroller = occurrence.parameters.get(0) as SierpinskiFractalsFxViewerController

		positions = fxcontroller.positions
		screenSurface = fxcontroller.square
		screenWidth = screenSurface.width

		// The agent learns how to use the UI with a new behavior.
		// This new behavior needs to have a reference to the JavaFX controller
		this.javafxBehavior = new FXBehavior(this, fxcontroller)
		this.javafxBehavior.registerBehavior

		// You could use the JavaFX controller
		// fxcontroller.doSomething
		generatePoints
		doRefresh
	}
	
	def doRefresh {
		this.javafxBehavior.UISpace.emit(new Refresh())
	}

}
