/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.sierpinskiFractals.objects

/**
 * Square object used to simulate a screen to print Triangle on.
 *
 * @author <a href="https://github.com/klmp200">Antoine Bartuccio</a>
 * @author <a href="http://www.ciad-lab.fr/nicolas_gaud">Nicolas Gaud</a>
 */
class Square {

	var bottomLeft : Vector2D
	var topLeft : Vector2D
	var bottomRight : Vector2D
	var topRight : Vector2D

	new {
		bottomLeft = new Vector2D
		topLeft = new Vector2D
		bottomRight = new Vector2D
		topRight = new Vector2D
	}

	new (bottomLeft : Vector2D, length: double){
		this.bottomLeft = bottomLeft
		this.bottomRight = new Vector2D(bottomLeft.x + length, bottomLeft.y)
		this.topRight = new Vector2D(bottomRight.x, bottomRight.y + length)
		this.topLeft = new Vector2D(bottomLeft.x, bottomLeft.y + length)
	}

	def getBottomLeft : Vector2D {
		this.bottomLeft
	}

	def getBottomRight : Vector2D {
		this.bottomRight
	}

	def getTopLeft : Vector2D {
		this.topLeft
	}

	def getTopRight : Vector2D {
		this.topRight
	}

	def setBottomLeft(v : Vector2D) {
		bottomLeft = v
	}

	def setBottomRight(v : Vector2D) {
		bottomRight = v
	}

	def setTopLeft(v : Vector2D) {
		topLeft = v
	}

	def setTopRight(v : Vector2D) {
		topRight = v
	}

	def getWidth : double {
		bottomRight.x - bottomLeft.x
	}

	def toString : String {
		bottomLeft + " " + topLeft + " " + topRight + " " + bottomLeft
	}

}
