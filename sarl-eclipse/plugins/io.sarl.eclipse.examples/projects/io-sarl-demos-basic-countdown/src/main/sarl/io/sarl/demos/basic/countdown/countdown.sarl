/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.basic.countdown

import io.sarl.api.core.Destroy
import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.api.core.Logging
import io.sarl.api.core.Schedules
import java.util.concurrent.atomic.AtomicInteger

/**
 * @author <a href="http://www.ciad-lab.fr/nicolas_gaud">Nicolas Gaud</a>
 */
event Element

/**
 * @author <a href="http://www.ciad-lab.fr/nicolas_gaud">Nicolas Gaud</a>
 */
agent CountDownAgent {
	uses Lifecycle, Schedules, Logging

	val counter = new AtomicInteger(5)

	on Initialize {
		info("Initialize")

		every(2000) [ /* Decrement counter every 2 sec until v = 0, then kill itself*/
			var v = counter.decrementAndGet;
			info("Counter=" + v)
			if (v <= 0) {
				killMe
			}
		]

	
	}

	on Destroy {
		info("Goodbye World!")
	}

}
