/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.gameoflife.gui

import javafx.scene.Parent
import javafx.scene.paint.Color
import javafx.scene.shape.Rectangle

/**
 * The type GridSquare.
 *
 * @author <a href="https://github.com/pinam45">Maxime Pinard</a>
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 */
class GridSquare extends Parent {

	static val SQUARE_SIZE = 16
	static val ON_COLOR = Color::RED
	static val OFF_COLOR = Color::BLACK

	val rectangle : Rectangle
	val xPosition : int
	val yPosition : int
	var activated : boolean

	/**
	 * Instantiates a new GridSquare.
	 *
	 * @param xPosition the x position
	 * @param yPosition the y position
	 * @param activated the activated
	 */
	new (xPosition : int, yPosition : int, activated : boolean) {
		this.xPosition = xPosition
		this.yPosition = yPosition
		this.activated = activated
		this.rectangle = new Rectangle(this.xPosition * SQUARE_SIZE, this.yPosition * SQUARE_SIZE, SQUARE_SIZE, SQUARE_SIZE)
		this.rectangle.fill = if (this.activated) ON_COLOR else OFF_COLOR
		children.add(this.rectangle)
	}

	/**
	 * Gets square size.
	 *
	 * @return the square size
	 */
	static def getSquareSize : int {
		SQUARE_SIZE
	}

	/**
	 * Sets the square activated or not.
	 * Color of the square depend of is activation.
	 *
	 * @param activated the activated
	 */
	def setActivated(activated : boolean) {
		if(activated != this.activated) {
			this.activated = activated
			this.rectangle.fill = if (this.activated) ON_COLOR else OFF_COLOR
		}
	}

}

