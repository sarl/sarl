/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.gameoflife.game;

import java.util.UUID
import org.arakhne.afc.math.geometry.d2.i.Point2i
import org.arakhne.afc.vmutil.json.JsonBuffer

/** 
 * @author <a href="https://github.com/Lomadriel">J&eacute;r&ocirc;me Boulmier</a>
 */
class Action {

	/** 
	 * @author <a href="https://github.com/Lomadriel">J&eacute;r&ocirc;me Boulmier</a>
	 */
	enum Type {
		CREATE,
		DESTROY
	}

	val emitter : UUID;
	val position : Point2i;
	val type : Type;

	new(emitter : UUID, position : Point2i, type : Type) {
		this.emitter = emitter;
		this.position = position;
		this.type = type;
	}

	/**
	 * Replies the emitter.
	 *
	 * @return the emitter
	 */
	 def getEmitter : UUID {
		return this.emitter;
	}

	/**
	 * Replies the position of the emitter.
	 *
	 * @return the emitter position
	 */
	def getPosition : Point2i {
		return this.position;
	}

	/**
	 * Replies the type of the event.
	 *
	 * @return the event type
	 */
	def getType : Type {
		return type;
	}

	override toString() : String {
		return JsonBuffer.toString("position", position, "type", type)
	}

}

