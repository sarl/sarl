/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-@RELEASE_YEAR@ the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.gameoflife.gui

import javafx.beans.NamedArg
import javafx.scene.control.TextField

/**
 * The type RestrictedNumberTextField.
 *
 * @author <a href="https://github.com/pinam45">Maxime Pinard</a>
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 */
class RestrictedNumberTextField extends TextField {

	val minValue : int
	val maxValue : int

	new (@NamedArg("defaultValue") defaultValue : int, @NamedArg("minValue") minValue : int,
		@NamedArg("maxValue") maxValue : int) {
		super(Integer.toString(defaultValue))
		this.minValue = minValue
		this.maxValue = maxValue
		textProperty.addListener [observable, oldValue, newValue |
				if (!newValue.isNullOrEmpty) {
					if(newValue.matches("[0-9]*") && validateValue(Integer.parseInt(newValue))) {
						setText(newValue)
					} else {
						setText(oldValue)
					}
				} else {
					setText(newValue)
				}
			]
	}

	private def validateValue(value : int) : boolean {
		value >= this.minValue && value <= this.maxValue
	}

}
