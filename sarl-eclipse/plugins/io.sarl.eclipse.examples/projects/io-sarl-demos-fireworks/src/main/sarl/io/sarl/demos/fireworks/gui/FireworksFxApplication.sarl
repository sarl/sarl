/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.demos.fireworks.gui

import io.sarl.api.javafx.FxApplication
import java.util.ResourceBundle
import javafx.fxml.FXMLLoader
import javafx.fxml.JavaFXBuilderFactory
import javafx.scene.Parent
import javafx.scene.Scene
import javafx.stage.Stage

/** JavaFX application for fireworks.
 *
 * @author <a href="https://github.com/klmp200">Antoine Bartuccio</a>
 * @author <a href="http://www.ciad-lab.fr/nicolas_gaud">Nicolas Gaud</a>
 */
class FireworksFxApplication extends FxApplication {

	def doApplicationStart(stage : Stage) : FXMLLoader {
		var simpleName = typeof(FireworksFxApplication).simpleName
		val bundle = ResourceBundle::getBundle(
			typeof(FireworksFxApplication).package.name.replaceAll("\\.", "/") + "/"
			+ simpleName)

		var location = class.getResource(simpleName + ".fxml")
		var loader = new FXMLLoader
		loader.location = location
		loader.builderFactory = new JavaFXBuilderFactory
		loader.resources = bundle
		var root : Parent = loader.load(location.openStream)
		var scene = new Scene(root)
		scene.stylesheets.add(class.getResource("ViewerController.css").toExternalForm)
		stage.title = bundle.getString("TITLE")
		stage.scene = scene
		stage.centerOnScreen
		return loader
	}

}
