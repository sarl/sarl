/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.examples.pingpongspace

import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import java.util.UUID

/** 
 * Boot agent launching two other agents Ping and Pong 
 * @author $Author: sgalland$
 * @author $Author: ngaud$
 */
agent BootAgent {

	uses Lifecycle

	/** 
	 * Number of iterations before stopping this demo and killing all agents
	 */
	val MAX_ITERATION = 30000;

	on Initialize {
		var spaceId = UUID::randomUUID
		typeof(PingAgent).spawn(spaceId, MAX_ITERATION)
		typeof(PongAgent).spawn(spaceId, MAX_ITERATION)
		killMe
	}

}
