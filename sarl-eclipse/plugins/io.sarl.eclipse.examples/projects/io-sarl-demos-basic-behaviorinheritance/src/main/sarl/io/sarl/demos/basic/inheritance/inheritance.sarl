/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.demos.basic.inheritance

import io.sarl.api.core.AgentKilled
import io.sarl.api.core.AgentSpawned
import io.sarl.api.core.ContextJoined
import io.sarl.api.core.ContextLeft
import io.sarl.api.core.Destroy
import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.api.core.Logging
import io.sarl.api.core.MemberJoined
import io.sarl.api.core.MemberLeft
import io.sarl.api.core.Schedules

/** 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @author <a href="http://www.ciad-lab.fr/nicolas_gaud">Nicolas Gaud</a>
 */
agent AbstractAgent {

	uses Logging

	protected var i : int = 0;

	on Initialize {
		info("1: Hello World in the super agent!")
	}

	on Initialize [i < 0] {
		info("This message must not be displayed")
		i++
	}
	
	/* A disjoint condition from the previous
	 */
	on Initialize [i >= 0] {
		info("2:[i>=0]Parent: This message should be displayed")
		i--
	}

	def sayGoodBye : void {
		info("Parent: Goodbye World!")
	}

	on Destroy {
		sayGoodBye
	}

}

/** 
 * A "Hello World" Agent inherited from AbstractAgent and demonstrating how to overload event behaviors.
 * 
 * @author Stephane Galland
 * @author Nicolas Gaud
 */
agent HelloChildAgent extends AbstractAgent {

	uses Logging, Lifecycle, Schedules

	/* Print "Hello World" when spawned and wait 2 seconds before kill itself
	 */
	on Initialize {
		info("5: Hello World in the child agent!")

		in(200)[killMe]
			// killMe
	}

	/* No condition, it is always executed
	 */
	on Initialize {
		info(
			"4: Child: Discouraged method to have two Initialize behavior within the same agent but it works like a charm. Even if you killed an agent within one of its Initialize Behaviors, all of them will be executed prior to anything")

	}

	/* Complete parent behavior for i>0, the parent behavior is also executed
	 */
	on Initialize [i >= 0] {
		info("3: [i>=0] Child: This message should be displayed too.")
	}

	override sayGoodBye {
		info("Child: Goodbye World from the child!")
	}

	/* Print "Goodbye World" before dying
	 */
	on Destroy {
		sayGoodBye
	}

	on ContextJoined {
		info("ContextJoined, contextID:" + occurrence.holonContextID + " SpaceID: " + occurrence.defaultSpaceID)
	}

	on ContextLeft {
		info("ContextLeft, contextID:" + occurrence.holonContextID)
	}

	on MemberJoined {
		info("MemberJoined, agentID:" + occurrence.agentID)
	}

	on MemberLeft {
		info("MemberLeft, agentID:" + occurrence.agentID)
	}

	on AgentSpawned {
		info("AgentSpawned, agentID:" + occurrence.agentID + " AgentType: " + occurrence.agentType)
	}

	on AgentKilled {
		info("AgentKilled, agentID:" + occurrence.source.ID)
	}
	
}
