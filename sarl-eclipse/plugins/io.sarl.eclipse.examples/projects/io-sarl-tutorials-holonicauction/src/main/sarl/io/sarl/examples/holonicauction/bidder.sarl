/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.examples.holonicauction

import com.google.common.util.concurrent.AtomicDouble
import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.api.core.Logging
import java.util.Random

/**
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 */
agent Bidder {
	
	uses DefaultContextInteractions, Lifecycle, Logging

	val random = new Random
	var maxPrice = new AtomicDouble
	var myLastBid = new AtomicDouble

	on Initialize {
		loggingName = "Bidder"

		info("Bidder created")
		this.maxPrice.set(this.random.nextDouble * 1000.0 + 100.0)
		info(this.maxPrice.get)
	}

	on Price {
		if(occurrence.price == this.myLastBid.get) {
			info("I do not bet, I am the winner with :" + myLastBid)
		} else {
			if(occurrence.price < this.maxPrice.get) {
				info("Receiving the price: " + occurrence.price)
				var priceIncrease = this.random.nextDouble() * 50.0
				if(priceIncrease > 0) {
					var newPrice = occurrence.price + priceIncrease

					info("My new price is: " + newPrice)
					if(newPrice <= this.maxPrice.get) {
						info("Send my bid: " + newPrice)
						emit(new Bid(newPrice)) [it.ID == defaultContext.getID]
						this.myLastBid.set(newPrice)
					} else {
						info(" I give up, this is beyond my resources : " + this.myLastBid.get)
					}
				}
			}
			else {
				info("I dropped to " + this.myLastBid.get)
			}
		}
	}

	on StopAuction {
		info("Auctioneer wants to kill me")
		killMe
	}

}

