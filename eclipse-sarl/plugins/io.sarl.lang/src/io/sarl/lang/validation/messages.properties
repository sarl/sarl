SARLValidator_0=The statement ''{0}'' is not yet supported by the SARL compiler.
SARLValidator_1=The ''{0}'' declaration is not used by the SARL compiler yet.
SARLValidator_10=definition of {0} in {1}
SARLValidator_25=Nested classes must be static
SARLValidator_28=Nested agents are not allowed inside {0}.
SARLValidator_29=Nested behaviors are not allowed inside {0}.
SARLValidator_3=SARL compiler couldn''t be executed on the JDK version {0}. Please use the JDK {1} or higher.
SARLValidator_30=Nested capacities are not allowed inside {0}.
SARLValidator_31=Nested skills are not allowed inside {0}.
SARLValidator_32=Nested events are not allowed inside {0}.
SARLValidator_33=Undefined default constructor in the super-type.
SARLValidator_35=Forbidden call to the exit function. The killing feature of the agent must be used.
SARLValidator_36=Forbidden feature call: {0}.
SARLValidator_37=Discouraged feature call: {0}. You should use the dedicated language keyword, or an agent''s capacity in place of this feature call.
SARLValidator_38=Type mismatch: cannot convert from {0} to {1}
SARLValidator_39=Invalid action name ''{0}''. You must not give to an action a name with reserved characters.
SARLValidator_4=Couldn''t find a valid version of the JDK in the classpath. The generator configuration specifies the version {0}. Please change the configuration in order to use the version {1} or higher.
SARLValidator_41=Invalid attribute name ''{0}''. You must not give to an action a name with reserved characters.
SARLValidator_42=The field ''{0}'' in ''{1}'' is hidding the inherited field ''{2}''.
SARLValidator_43=Attempt to override final method {0}
SARLValidator_44=Cannot reduce the visibility of the overridden method {0}
SARLValidator_45=The return type is incompatible with {0}
SARLValidator_46=Expecting the return type {0}. It is recommended to write the return type, even if it is inferred from the overridden function.
SARLValidator_47=The method {0} of type {1} must use override keyword since it actually overrides a supertype method.
SARLValidator_48=The method {0} of type {1} shadows the method {2} of type {3}, but does not override it.
SARLValidator_49=override
SARLValidator_5=SARL compiler couldn''t be executed on the Xtext version {0}. Please use the Xtext {1} or higher.
SARLValidator_50=Duplicate implemented feature ''{0}''.
SARLValidator_52=The feature ''{0}'' is already implemented by the super-type ''{1}''.
SARLValidator_53=Expression with side effect is not allowed in guards.
SARLValidator_54=Discouraged boolean value. The guard is always true.
SARLValidator_55=Dead code. The guard is always false.
SARLValidator_57=Invalid type: ''{0}''. Only {1} can be used after the keyword ''{2}''.
SARLValidator_58=capacities
SARLValidator_6=Couldn''t find a valid version of the Xtext base library in the classpath. You should add ''org.eclipse.xtext.xbase.lib'', version {0} or higher.
SARLValidator_62=events
SARLValidator_63=Invalid supertype. Expecting {0}.
SARLValidator_64=an interface
SARLValidator_66=a class
SARLValidator_67=Attempt to override final class.
SARLValidator_68=Supertype must be a subtype of ''{0}''.
SARLValidator_69=Supertype must be of type ''{0}''.
SARLValidator_7=SARL library not found on the classpath, or older than 0.3.1.
SARLValidator_70=The inheritance hierarchy of ''{0}'' is inconsistent.
SARLValidator_72=Invalid implemented type: ''{0}''. Only subtypes of ''{1}'' are allowed for ''{2}''.
SARLValidator_73=Invalid implemented type: ''{0}''. Only the type ''{1}'' and one of its subtypes are allowed for ''{2}''.
SARLValidator_74=Missing implemented type ''{0}'' for ''{1}''.
SARLValidator_75=Invalid type: ''{0}''. Only {1} can be used after the keyword ''{2}''.
SARLValidator_77=Discouraged capacity definition. A capacity without actions defined inside is not useful since it cannot be called by an agent or a behavior.
SARLValidator_78=The capacity ''{0}'' is not used.
SARLValidator_79=Redundant use of the capacity ''{0}''.
SARLValidator_8=Incompatible SARL library on the classpath. Actual: {0}. Expected: {1}.
SARLValidator_80=The dispatch method {0} in type {1} must not be abstract.
SARLValidator_81=The 'create'-method {0} in type {1} must not be abstract.
SARLValidator_82=The abstract method {0} in type {1} can only be defined by an abstract class.
SARLValidator_84=The method {0} in type {1} should be declared abstract.
SARLValidator_85='Create'-method {0} is not permitted in an interface.
SARLValidator_86=Abstract methods do not specify a body.
SARLValidator_87=Discouraged use of reserved annotation. @{0} is an annotation that is reserved for the compiler usage.
SARLValidator_9=definition of {0}
