/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.boot

import io.bootique.BQRuntime
import io.bootique.Bootique
import io.bootique.di.BQModule
import io.sarl.lang.core.AgentContext
import io.sarl.lang.core.SREBootstrap
import io.sarl.sre.janus.Kernel

/** Interface that represents a SRE bootstrap that could be launch programmatically.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.13
 */
interface RunnableSREBootstrap extends SREBootstrap {

	/** Replies the factory of the Bootique runtime.
	 *
	 * @return the factory instance.
	 */
	def getBootiqueRuntimeFactory : BQRuntimeFactory

	/** Change the factory of the Bootique runtime.
	 *
	 * @param factory the factory instance.
	 */
	def setBootiqueRuntimeFactory(factory : BQRuntimeFactory)

	/** Replies the Bootique runtime instance.
	 *
	 * @return the Bootique runtime.
	 */
	def getRuntime : BQRuntime

	/** Set the Bootique runtime instance.
	 *
	 * @param runtime the new Bootique runtime.
	 * @return {@code true} if the runtime has been changed.
	 */
	def setRuntime(runtime : BQRuntime) : boolean

	/** Run the SRE.
	 *
	 * <p>This function runs the SRE and exits with the return code.
	 *
	 * @param args the command line arguments.
	 * @return the exit code.
	 */
	def runSRE(args : String*) : int

	/** Start the agent framework without agent.
	 * 
	 * @param asCommandLineApp indicates if the application should be started as a commend-line application.
	 *     If {@code true}, the SRE is started and run directly. Then, the "start agent" functions becomes
	 *     unusable because the SRE has started everything as it is called from the shell command line.
	 *     If {@code false}, the SRE is started in is normal way and all the functions are available according
	 *     to their own specifications.
	 *     If it not recommended to invoke this function with this argument evaluated to {@code true}.
	 * @param bootique the Bootique instance to set up the framework. If it is {@code null},
	 * the default Bootique instance is created.
	 * @param module the injection module to use. If it is {@code null}, the default module is used.
	 */
	def startWithoutAgent(asCommandLineApp : boolean, bootique : Bootique = null, module : Class<? extends BQModule> = null) : AgentContext
	
	/** Start the boot agent if it is specified in the boot configuration.
	 */
	def startBootAgent

	/** Replies the reference to the kernel.
	 *
	 * @return the reference to the kernel.
	 */
	def getKernel : Kernel

}
