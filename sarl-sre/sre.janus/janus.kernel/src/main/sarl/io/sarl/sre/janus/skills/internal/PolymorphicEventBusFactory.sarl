/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.skills.internal

import io.sarl.sre.janus.capacities.InternalSchedules
import io.sarl.sre.janus.internal.Factories
import io.sarl.sre.janus.internal.eventguard.polymorphic.PolymorphicBehaviorGuardEvaluatorRegistry
import java.util.function.Supplier
import javax.inject.Provider

/** 
 * Factory of event bus that is using the polymorphic method for accessing the event handlers.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.14.0 20241106-161408
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.12
 */
class PolymorphicEventBusFactory implements EventBusFactory {

	val factories : Provider<Factories>

	new (factories : Provider<Factories>) {
		this.factories = factories
	}

	override createEventBus(taskSchedulerProvider : Supplier<InternalSchedules>) : EventBus {
		new EventBus(taskSchedulerProvider, new PolymorphicBehaviorGuardEvaluatorRegistry(this.factories), this.factories)
	}

}
