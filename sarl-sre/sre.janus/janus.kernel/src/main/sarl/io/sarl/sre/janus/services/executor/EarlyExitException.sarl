/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.services.executor

import java.util.logging.Logger

import static extension io.sarl.sre.janus.services.executor.Runnables.*

/** 
 * This exception is thrown when a function must never return from the point of view of an agent. It permits to never return from
 * functions such as {@code killMe}.
 * 
 * <p>The executors are supposed to never log this function.
 * 
 * @author $Author: sgalland$
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 */
final class EarlyExitException extends RuntimeException {

	val postCommand : Runnable

	/**
	 * Construct.
	 */
	package new (postCommand : Runnable) {
		this.postCommand = postCommand
	}

	/** Run any post treatment that is associated with the early-exist action.
	 *
	 * @param logger the logger to use for outputing the errors.
	 * @since 0.6.0
	 */
	def runPostTreatment(logger : Logger) {
		if (this.postCommand !== null) {
			this.postCommand.protectRunnable(logger).run
		}
	}

}
