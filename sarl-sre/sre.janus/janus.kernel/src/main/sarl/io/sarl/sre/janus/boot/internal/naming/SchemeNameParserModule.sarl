/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.boot.internal.naming

import io.bootique.BQModuleMetadata
import io.bootique.BQModuleProvider
import io.bootique.di.BQModule
import io.bootique.di.Binder
import io.sarl.api.naming.parser.AgentSchemeNameParser
import io.sarl.api.naming.parser.ArtifactSchemeNameParser
import io.sarl.api.naming.parser.BehaviorSchemeNameParser
import io.sarl.api.naming.parser.ContextSchemeNameParser
import io.sarl.api.naming.parser.ISchemeNameParser
import io.sarl.api.naming.parser.ServiceSchemeNameParser
import io.sarl.api.naming.parser.SkillSchemeNameParser
import io.sarl.api.naming.parser.SpaceSchemeNameParser
import java.lang.annotation.Retention
import java.lang.annotation.Target
import javax.inject.Qualifier

/**
 * Module for the scheme name parsers.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.10
 */
class SchemeNameParserModule implements BQModule {

	@SuppressWarnings("raw_type")
	override configure(binder : Binder) {
		binder.bindSet(typeof(ISchemeNameParser), typeof(SchemeNameParsers)) => [
			it.add(typeof(ServiceSchemeNameParser))
			it.add(typeof(ContextSchemeNameParser))
			it.add(typeof(SpaceSchemeNameParser))
			it.add(typeof(AgentSchemeNameParser))
			it.add(typeof(SkillSchemeNameParser))
			it.add(typeof(BehaviorSchemeNameParser))	
			it.add(typeof(ArtifactSchemeNameParser))
		]	
	}

}

/** 
 * Annotation to mark the set of scheme name parsers.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.10
 */
@Target(PARAMETER, FIELD)
@Retention(RUNTIME)
@Qualifier
annotation SchemeNameParsers {
	//
}

/** Provider of the module for the scheme name parser.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.10
 */
class SchemeNameParserModuleProvider implements BQModuleProvider {

	override module : BQModule {
		return new SchemeNameParserModule
	}

	override moduleBuilder : BQModuleMetadata.Builder {
		return BQModuleMetadata::builder(module).overrides(overrides).providerName(name).configs(configs).description(
			Messages::SchemeNameParserModuleProvider_0);
	}

}

