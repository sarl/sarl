/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.boot

import io.sarl.sre.janus.boot.configs.SreConfig

/** 
 * This is the class that permits to boot programmatically the SRE platform with the Bootique API.
 * 
 * @author $Author: sgalland$
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.7.0
 */
class Boot {

	/** Replies the default name of the program.
	 * 
	 * @return the default name of the program.
	 */
	static def getDefaultSreProgramName : String {
		return SreConfig::DEFAULT_PROGRAM_NAME
	}

	/** Create the instance of the bootique main launcher.
	 * 
	 * @return the main launcher.
	 */
	static def createMainObject : RunnableSREBootstrap {
		var factory = new DynamicClassLoaderRunnableSREBootstrapFactory
		factory.createSreBootstrap
	}

	/** Main program.
	 *
	 * @param args the command line arguments.
	 */
	@SuppressWarnings("discouraged_reference")
	static def main(args : String[]) : void {
		run(args)
	}

	/** Main program.
	 *
	 * @param args the command line arguments.
	 * @return the exit code.
	 */
	static def run(args : String*) : int {
		return createMainObject.runSRE(args)
	}

}
