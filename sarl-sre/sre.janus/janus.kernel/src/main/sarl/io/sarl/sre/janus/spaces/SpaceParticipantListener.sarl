/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.spaces

import io.sarl.lang.core.EventSpace
import java.util.EventListener

/** 
 * A listener for the Java events on spaces.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.14.0 20241106-161408
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.10
 */
interface SpaceParticipantListener extends EventListener {

	/** 
	 * Invoked when a participant has joined a space.
	 * 
	 * @param participant the participant.
	 */
	def participantJoined(participant : Participant)

	/** 
	 * Invoked when a participant has left a space.
	 * 
	 * @param participant the participant.
	 */
	def participantLeft(participant : Participant)

	/** 
	 * Set the default only useful for the first space to be created
	 * 
	 * @param space - the default space of the default context
	 */
	def setDefaultSpace(^space : EventSpace)

}
