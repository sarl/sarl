/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.internal.eventguard.reflect

import io.sarl.lang.core.Event
import org.eclipse.xtend.lib.annotations.Data

/** 
 * Description of a set of guard evaluators with a shared activation guard.
 *
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.14.0 20241106-161408
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.11
 */
@Data
class GuardedEvaluator implements Comparable<GuardedEvaluator> {

	val registrationGuard : (Event)=>Boolean

	val evaluator : ReflectBehaviorGuardEvaluator

	override compareTo(other : GuardedEvaluator) : int {
		if (other === null) {
			return 1
		}
		return this.evaluator <=> other.evaluator
	}

	override equals(obj : Object) : boolean {
		if (obj instanceof GuardedEvaluator) {
			return this.evaluator == obj.evaluator
		}
		return false
	}

	override hashCode : int {
		return this.evaluator.hashCode
	}

}
