/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.services.probing.service

import io.sarl.api.naming.namespace.NamespaceService
import io.sarl.api.naming.parser.INameParser
import io.sarl.api.probing.Probe
import io.sarl.sre.janus.internal.Factories
import java.net.URI
import java.util.Map
import java.util.concurrent.ConcurrentHashMap
import javax.inject.Inject
import javax.inject.Provider

/** 
 * This class is the implementation of a probe service that is updating the values synchronously.
 * Synchronous updates must be explicitly started by invoking {@link #sync()}.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.14.0 20241106-161408
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @since 0.10
 * @see AsynchronousProbeService
 */
class SynchronousProbeService extends AbstractProbeService {

	/** Constructor.
	 * 
	 * @param namespaceService the service that is giving access to the namespaces.
	 * @param nameParser the object that is able to parse resource names.
	 * @param factories the provider of factories tool.
	 */
	@Inject
	new (namespaceService : NamespaceService, nameParser : INameParser, factories : Provider<Factories>) {
		this(new ConcurrentHashMap, namespaceService, nameParser, factories)
	}

	/** Constructor.
	 * 
	 * @param internalStructure is the internal structure for storing the probes.
	 * @param namespaceService the service that is giving access to the namespaces.
	 * @param nameParser the object that is able to parse resource names.
	 * @param factories the provider of factories tool.
	 */
	new (internalStructure : Map<URI, Probe<?>>, namespaceService : NamespaceService, nameParser : INameParser,
		factories : Provider<Factories>) {
		super(internalStructure, namespaceService, nameParser, factories)
	}

}
