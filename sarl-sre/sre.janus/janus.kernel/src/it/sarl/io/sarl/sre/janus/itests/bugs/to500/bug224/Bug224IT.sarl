/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.bugs.to500.bug224

import io.sarl.lang.tests.api.extensions.JavaVersionCheckExtension
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.MyBehavior
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.RegisteredInDestroyAgent
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.RegisteredInHandlerAgent
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.RegisteredInInitializeAgent
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.UnregisteredInDestroyAgent
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.UnregisteredInHandlerAgent
import io.sarl.sre.janus.itests.bugs.to500.bug224.mocks.UnregisteredInInitializeAgent
import io.sarl.sre.test.framework.context.SreRunContext
import io.sarl.sre.test.framework.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.PropertyRestoreExtension
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static org.junit.jupiter.api.Assertions.*

/** 
 * Unit test for the issue #224: Equivalent of Skill.install for the Behavior class.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.15.0 20250909-115749
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @see https://github.com/sarl/sarl/issues/224
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: Bug #224")
@Tag("sre-run")
@Tag("janus")
class Bug224IT {

	@Test
	@DisplayName("Register behavior in on Initialize")
	def registerInInitialize(extension rc : SreRunContext) {
		typeof(RegisteredInInitializeAgent).runSre
		assertEquals(1, getNumberOfResults)
		var beh = getResult(typeof(MyBehavior), 0)
		assertEquals(1, beh.initializeEvaluations.intValue)
		assertEquals(1, beh.destroyEvaluations.intValue)
	}

	@Test
	@DisplayName("Register behavior in on Event")
	def registerInHandler(extension rc : SreRunContext) {
		typeof(RegisteredInHandlerAgent).runSre
		assertEquals(1, getNumberOfResults)
		var beh = getResult(typeof(MyBehavior), 0)
		assertEquals(1, beh.initializeEvaluations.intValue)
		assertEquals(1, beh.destroyEvaluations.intValue)
	}

	@Test
	@DisplayName("Register behavior in on Destroy")
	def registerInDestroy(extension rc : SreRunContext) {
		typeof(RegisteredInDestroyAgent).runSre
		assertEquals(1, getNumberOfResults)
		var beh = getResult(typeof(MyBehavior), 0)
		assertEquals(0, beh.initializeEvaluations.intValue)
		assertEquals(0, beh.destroyEvaluations.intValue)
	}

	@Test
	@DisplayName("Unregister behavior in on Initialize")
	def unregisterInInitialize(extension rc : SreRunContext) {
		typeof(UnregisteredInInitializeAgent).runSre
		assertEquals(1, getNumberOfResults)
		var beh = getResult(typeof(MyBehavior), 0)
		assertEquals(1, beh.initializeEvaluations.intValue)
		assertEquals(1, beh.destroyEvaluations.intValue)
	}

	@Test
	@DisplayName("Unregister behavior in on Event")
	def unregisterInHandler(extension rc : SreRunContext) {
		typeof(UnregisteredInHandlerAgent).runSre
		assertEquals(1, getNumberOfResults)
		var beh = getResult(typeof(MyBehavior), 0)
		assertEquals(1, beh.initializeEvaluations.intValue)
		assertEquals(1, beh.destroyEvaluations.intValue)
	}

	@Test
	@DisplayName("Unregister behavior in on Destroy")
	def unregisterInDestroy(extension rc : SreRunContext) {
		typeof(UnregisteredInDestroyAgent).runSre
		assertEquals(1, getNumberOfResults)
		var beh = getResult(typeof(MyBehavior), 0)
		assertEquals(1, beh.initializeEvaluations.intValue)
		assertEquals(1, beh.destroyEvaluations.intValue)
	}

}
