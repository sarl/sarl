/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.itests.bugs.to1000.bug902.mocks

import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.sre.test.framework.skills.TestingCapacity
import io.sarl.sre.test.framework.skills.TestingSkill
import io.sarl.api.core.Schedules

@SuppressWarnings("raw_type")
agent InnerAgent {

	uses Lifecycle, Schedules

	uses TestingCapacity

	on Initialize {
		setSkill(new TestingSkill(occurrence))
	}

	on SuperGenericEvent {
		"Super:RAW".addResult
	}

	on SuperGenericEvent<Float> {
		"Super:<Float>".addResult
	}

	on SuperGenericEvent<Double> {
		"Super:<Double>".addResult
	}

	on GenericEvent {
		"RAW".addResult
		in(5000) [killMe]
	}

	on GenericEvent<?, ?> {
		"<?,?>".addResult
	}

	on GenericEvent<Number, ?> {
		"<Number,?>".addResult
	}

	on GenericEvent<? extends Number, ?> {
		"<? extends Number,?>".addResult
	}
	
	on GenericEvent<String, ?> {
		"<String,?>/1".addResult
	}

	on GenericEvent<String, ?> {
		"<String,?>/2".addResult
	}

	on GenericEvent<Double, ?> {
		"<Double,?>".addResult
	}

	on GenericEvent<?, Float> {
		"<?,Float>".addResult
	}

	on GenericEvent<String, Float> {
		"<String,Float>".addResult
	}

}
