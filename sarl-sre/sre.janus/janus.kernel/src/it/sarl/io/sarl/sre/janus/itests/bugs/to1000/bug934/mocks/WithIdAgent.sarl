/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.bugs.to1000.bug934.mocks

import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Initialize
import io.sarl.api.core.spaces.OpenEventSpaceSpecification
import io.sarl.sre.test.framework.skills.TestingCapacity
import io.sarl.sre.test.framework.skills.TestingSkill
import java.util.UUID

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @see "https://github.com/sarl/sarl/issues/934"
 */
@SuppressWarnings("all")
agent WithIdAgent {

	uses DefaultContextInteractions

	uses TestingCapacity

	on Initialize {
		setSkill(new TestingSkill(occurrence))
		var ds = defaultSpace
		ds.addResult
		var id1 = UUID::randomUUID
		id1.addResult
		var spc1 = defaultContext.getOrCreateSpaceWithID(typeof(OpenEventSpaceSpecification), id1)
		spc1.addResult
		var id2 = UUID::randomUUID
		id2.addResult
		var spc2 = defaultContext.getOrCreateSpaceWithID(typeof(OpenEventSpaceSpecification), id2)
		spc2.addResult
		killMeSoon
	}

}
