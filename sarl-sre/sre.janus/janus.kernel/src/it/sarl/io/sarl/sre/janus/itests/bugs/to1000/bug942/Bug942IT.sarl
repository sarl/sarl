/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.itests.bugs.to1000.bug942

import io.sarl.lang.tests.api.extensions.JavaVersionCheckExtension
import io.sarl.sre.janus.itests.bugs.to1000.bug942.mocks.AgentBug942
import io.sarl.sre.janus.itests.bugs.to1000.bug942.mocks.Data
import io.sarl.sre.janus.itests.bugs.to1000.bug942.mocks.EventBug942
import io.sarl.sre.test.framework.context.SreRunContext
import io.sarl.sre.test.framework.^extension.PropertyRestoreExtension
import io.sarl.sre.test.framework.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import java.util.UUID
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static io.sarl.sre.test.framework.Constants.*

import static extension org.junit.jupiter.api.Assertions.*

/** Tests for issue #942: Check if the source of an event received in Behavior is correct.
 *
 * <p>See: https://github.com/sarl/sarl/issues/942
 *
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @see "https://github.com/sarl/sarl/issues/942"
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: Bug #942")
@Tag("sre-run")
@Tag("janus")
class Bug942IT {

	@SuppressWarnings("discouraged_reference")
	@Test
	def doTest(extension rc : SreRunContext) : void {
		typeof(AgentBug942).setupTheSreKernel(null, null)

		Thread::sleep(1000)

		val sender = UUID::randomUUID
		val ^space = rootContext.defaultSpace
		
		^space.emit(sender, new EventBug942)

		waitForTheKernel(STANDARD_TIMEOUT)

		2.assertEquals(getNumberOfResults)
		val d1 = typeof(Data).getResult(0)
		val d2 = typeof(Data).getResult(1)

		d1.assertNotNull
		d2.assertNotNull

		if ("ag" == d1.name) {
			"beh".assertEquals(d2.name)
		} else {
			"beh".assertEquals(d1.name)
			"ag".assertEquals(d2.name)
		}

		sender.assertEquals(d1.address.ID)
		sender.assertEquals(d2.address.ID)

		^space.spaceID.assertEquals(d1.address.spaceID)
		^space.spaceID.assertEquals(d2.address.spaceID)
	}

}
