/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.sre.janus.itests.bugs.to1000.bug973.mocks

import io.sarl.api.core.Initialize
import io.sarl.sre.test.framework.skills.TestingCapacity
import io.sarl.sre.test.framework.skills.TestingSkill

agent AgentBug973b {

	uses TestingCapacity

	var theSkill : SkillBug973

	@SuppressWarnings("potential_field_synchronization_problem")
	on Initialize {
		setSkill(new TestingSkill(occurrence))
		// Add a fake skill in order to have at least 2 registered skills
		new FakeSkillBug973().setSkill

		this.theSkill = new SkillBug973
		addResult(this.theSkill)
		this.theSkill.setSkill

		killMeSoon
	}

}
