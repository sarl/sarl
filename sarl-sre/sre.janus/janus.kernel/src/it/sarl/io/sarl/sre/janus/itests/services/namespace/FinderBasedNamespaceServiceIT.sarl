/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.services.namespace

import io.sarl.api.naming.namespace.FieldAccess
import io.sarl.sre.test.framework.context.SreRunContext
import java.util.UUID
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.RepeatedTest
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test

import static extension org.junit.jupiter.api.Assertions.*

/**
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.15.0 20250909-115749
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 */
@Tag("sre-run")
@Tag("janus")
@DisplayName("run: FinderBasedNamespace service test")
class FinderBasedNamespaceServiceIT extends AbstractNamespaceServiceIT {

	@RepeatedTest(5)
	@DisplayName("Unknown agent")
	def accessUnknownAgent(extension rc : SreRunContext) : void {
		var service = rc.startTestingFramework

		val id = UUID::randomUUID

		var namedObject = service.findObject("agent:" + id + "#myfield")
		namedObject.assertNull
	}

//	@RepeatedTest(5)
//	@DisplayName("Get agent field")
//	def accessAgentField(extension rc : SreRunContext) : void {
//		var field = rc.runTestCase(typeof(FieldAccess)) ["agent:" + it + "#myfield"]
//
//		"myfield".assertEquals(field.field.name)
//
//		"int".assertEquals(field.field.type.simpleName)
//
//		24.assertEquals(field.get as Integer)
//	}

	//@RepeatedTest(5)
	@Test
	@DisplayName("Unknown field in known agent")
	def accessAgentUnknownField(extension rc : SreRunContext) : void {
		var x = rc.runTestCase(typeof(FieldAccess), false)["agent:" + it + "#myfield_unknown"]
		x.assertNull
	}

}
