/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.skills.bic.mocks

import io.sarl.lang.core.Agent
import io.sarl.sre.test.framework.events.Bye
import io.sarl.sre.test.framework.skills.TestingCapacity
import java.util.concurrent.atomic.AtomicInteger

/**
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.15.1 20250911-224826
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 */
@SuppressWarnings("potential_field_synchronization_problem")
behavior BehaviorsWakeUpBehavior {

	uses TestingCapacity

	val id : int
	val nb : AtomicInteger

	new (ag : Agent, id : int, nb : AtomicInteger) {
		super(ag)
		this.id = id
		this.nb = nb
	}

	on Bye {
		addResult("wake-up-behavior-" + this.id)
		val n = this.nb.incrementAndGet
		if (n == 2) {
			killMeSoon
		}
	}

}
