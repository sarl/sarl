/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.bugs.to1000.bug543

import io.sarl.lang.core.UnimplementedCapacityException
import io.sarl.lang.tests.api.extensions.JavaVersionCheckExtension
import io.sarl.sre.janus.itests.bugs.to1000.bug543.mocks.C1
import io.sarl.sre.janus.itests.bugs.to1000.bug543.mocks.TAgent1
import io.sarl.sre.janus.itests.bugs.to1000.bug543.mocks.TAgent2
import io.sarl.sre.janus.itests.bugs.to1000.bug543.mocks.TAgent3
import io.sarl.sre.test.framework.context.SreRunContext
import io.sarl.sre.test.framework.^extension.PropertyRestoreExtension
import io.sarl.sre.test.framework.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static io.sarl.sre.test.framework.Constants.*
import static org.junit.jupiter.api.Assertions.*

import static extension io.sarl.tests.api.tools.TestAssertions.*

/**
 * Unit test for the issue #543: Incomplete reset of the hidden buffers to skills.
 * 
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 * @see https://github.com/sarl/sarl/issues/543
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: Bug #543")
@Tag("sre-run")
@Tag("janus")
class Bug543IT {

	@Test
	@DisplayName("Multiple setSkill")
	def setSkill(extension rc : SreRunContext) {
		typeof(TAgent1).runSre
		assertEquals(2, getNumberOfResults())
		assertEquals("1", getResult(typeof(String), 0))
		assertEquals("2", getResult(typeof(String), 1))
	}

	@Test
	@DisplayName("clearSkill after setSkill")
	def clearSkill(extension rc : SreRunContext) : void {
		typeof(UnimplementedCapacityException).whenException [
			typeof(TAgent2).runSre(VERY_SHORT_TIMEOUT);
		].verify [
			assertEquals(typeof(C1), it.unimplementedCapacity)
		]
	}

	@Test
	@DisplayName("two consecutive getSkill")
	def doubleHiddenGetters(extension rc : SreRunContext) {
		typeof(TAgent3).runSre
		assertEquals(1, getNumberOfResults)
		assertEquals(Boolean.TRUE, getResult(typeof(Boolean), 0))
	}

}
