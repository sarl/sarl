/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.internal

import io.sarl.api.core.AgentKilled
import io.sarl.lang.core.SpaceID
import io.sarl.lang.tests.api.extensions.JavaVersionCheckExtension
import io.sarl.sre.janus.itests.internal.mocks.MySpawnedAgent1
import io.sarl.sre.janus.itests.internal.mocks.MyWaiterAgent1
import io.sarl.sre.test.framework.context.SreRunContext
import io.sarl.sre.test.framework.^extension.SreRunExtension
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.PropertyRestoreExtension
import java.util.UUID
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.RepeatedTest
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.^extension.ExtendWith

import static org.junit.jupiter.api.Assertions.*

import static extension io.sarl.tests.api.tools.TestUtils.*

/**
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension),
	typeof(SreRunExtension)
])
@DisplayName("run: on AgentKilled test")
@Tag("sre-run")
@Tag("janus")
class OnAgentKilledIT {

	@RepeatedTest(5)
	@DisplayName("run")
	def run(extension rc : SreRunContext) {
		typeof(MyWaiterAgent1).runSre
		
		var all = allResults
		assertEquals(4, all.size)
		assertEquals("SPAWNER", all.elementAt(typeof(String), 0))
		var ^event = all.elementAt(typeof(AgentKilled), 1)
		var ^space = all.elementAt(typeof(SpaceID), 2)
		var spawnId = all.elementAt(typeof(UUID), 3)

		assertNotNull(^event)
		assertEquals(typeof(MySpawnedAgent1).name, ^event.agentType)
		assertEquals(spawnId, ^event.source.ID)
		assertEquals(^space, ^event.source.spaceID)
		assertEquals(spawnId, ^event.source.ID)
	}

}
