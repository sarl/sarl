/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.itests.bugs.to1500.bug1047.mocks

import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.lang.core.AgentContext
import io.sarl.sre.test.framework.skills.TestingCapacity
import io.sarl.sre.test.framework.skills.TestingSkill
import java.util.concurrent.atomic.AtomicBoolean
import java.util.concurrent.atomic.AtomicReference

/**
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.13.0 20230919-093058
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 */
@SuppressWarnings("all")
agent MyAgent1 {

    uses DefaultContextInteractions, Lifecycle
    uses TestingCapacity

    val uniq = new AtomicBoolean(false)
    val context = new AtomicReference<AgentContext>(null)

    on Initialize {
    	setSkill(new TestingSkill(occurrence))
        var ctx = defaultContext
        assert ctx !== null
        this.context.set(ctx)
    }

    on RendezVous {
        if (!this.uniq.getAndSet(true)) {
             val ctx = this.context.get
             addResult("stored context is not null = " + (ctx !== null))
             emit(new RendezVousAccepted)
             killMe
        }
    }

}