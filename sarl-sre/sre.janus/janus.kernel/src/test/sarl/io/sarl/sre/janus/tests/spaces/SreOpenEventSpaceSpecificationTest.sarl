/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.tests.spaces

import io.bootique.di.Injector
import io.sarl.api.core.spaces.OpenEventSpace
import io.sarl.api.core.spaces.SpaceComponentFactory
import io.sarl.api.core.spaces.SpaceParticipantListenerFactory
import io.sarl.lang.core.EventSpaceSpecification
import io.sarl.lang.core.SpaceID
import io.sarl.lang.tests.api.extensions.JavaVersionCheckExtension
import io.sarl.sre.janus.spaces.SreOpenEventSpaceSpecification
import io.sarl.tests.api.Nullable
import io.sarl.tests.api.extensions.ContextInitExtension
import io.sarl.tests.api.extensions.PropertyRestoreExtension
import java.util.UUID
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Tag
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.mockito.InjectMocks
import org.mockito.Mock

import static org.junit.jupiter.api.Assertions.*

import static extension io.sarl.tests.api.tools.TestMockito.mock
import static extension org.mockito.MockitoAnnotations.openMocks

/**
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janus.kernel 3.0.15.0 20250909-115749
 * @mavengroupid io.sarl.sre.janus
 * @mavenartifactid janus.kernel
 */
@ExtendWith(#[
	typeof(ContextInitExtension),
	typeof(JavaVersionCheckExtension),
	typeof(PropertyRestoreExtension)
])
@DisplayName("unit: SreOpenEventSpaceSpecification test")
@Tag("unit")
@Tag("janus")
@Tag("sre-unit")
class SreOpenEventSpaceSpecificationTest {

	@Nullable
	var spaceId : SpaceID

	@Mock
	var injector : Injector

	@InjectMocks
	var specification : SreOpenEventSpaceSpecification

	@BeforeEach
	def setUp : void {
		this.spaceId = new SpaceID(UUID::randomUUID, UUID::randomUUID, typeof(EventSpaceSpecification))
		this.openMocks
		this.specification = new SreOpenEventSpaceSpecification(this.injector, [typeof(SpaceComponentFactory).mock], [typeof(SpaceParticipantListenerFactory).mock])
		this.specification.setDefaultSpaceProvider [typeof(OpenEventSpace).mock]
	}

	@Test
	def create {
		var ^space = this.specification.create(this.spaceId, "a", "b", "c") //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$
		assertNotNull(^space)
		assertInstanceOf(typeof(OpenEventSpace), ^space)
		assertSame(this.spaceId, ^space.spaceID)
	}

}
