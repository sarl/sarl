/**
 * $Id$
 * 
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.bspl.lang.bspl.util;

import io.sarl.bspl.lang.bspl.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see io.sarl.bspl.lang.bspl.BsplPackage
 * @generated
 */
public class BsplSwitch<T> extends Switch<T>
{
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static BsplPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BsplSwitch()
	{
		if (modelPackage == null)
		{
			modelPackage = BsplPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage)
	{
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject)
	{
		switch (classifierID)
		{
			case BsplPackage.BSPL_PROTOCOL_SPECIFICATION:
			{
				BsplProtocolSpecification bsplProtocolSpecification = (BsplProtocolSpecification)theEObject;
				T result = caseBsplProtocolSpecification(bsplProtocolSpecification);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL:
			{
				BsplProtocol bsplProtocol = (BsplProtocol)theEObject;
				T result = caseBsplProtocol(bsplProtocol);
				if (result == null) result = caseBsplAnnotationTarget(bsplProtocol);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL_MEMBER:
			{
				BsplProtocolMember bsplProtocolMember = (BsplProtocolMember)theEObject;
				T result = caseBsplProtocolMember(bsplProtocolMember);
				if (result == null) result = caseBsplAnnotationTarget(bsplProtocolMember);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL_ARGUMENT:
			{
				BsplProtocolArgument bsplProtocolArgument = (BsplProtocolArgument)theEObject;
				T result = caseBsplProtocolArgument(bsplProtocolArgument);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL_ROLE:
			{
				BsplProtocolRole bsplProtocolRole = (BsplProtocolRole)theEObject;
				T result = caseBsplProtocolRole(bsplProtocolRole);
				if (result == null) result = caseBsplProtocolMember(bsplProtocolRole);
				if (result == null) result = caseBsplAnnotationTarget(bsplProtocolRole);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL_PARAMETER:
			{
				BsplProtocolParameter bsplProtocolParameter = (BsplProtocolParameter)theEObject;
				T result = caseBsplProtocolParameter(bsplProtocolParameter);
				if (result == null) result = caseBsplProtocolMember(bsplProtocolParameter);
				if (result == null) result = caseBsplAnnotationTarget(bsplProtocolParameter);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL_MESSAGE:
			{
				BsplProtocolMessage bsplProtocolMessage = (BsplProtocolMessage)theEObject;
				T result = caseBsplProtocolMessage(bsplProtocolMessage);
				if (result == null) result = caseBsplProtocolMember(bsplProtocolMessage);
				if (result == null) result = caseBsplAnnotationTarget(bsplProtocolMessage);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_PROTOCOL_PROTOCOL_CALL:
			{
				BsplProtocolProtocolCall bsplProtocolProtocolCall = (BsplProtocolProtocolCall)theEObject;
				T result = caseBsplProtocolProtocolCall(bsplProtocolProtocolCall);
				if (result == null) result = caseBsplProtocolMember(bsplProtocolProtocolCall);
				if (result == null) result = caseBsplAnnotationTarget(bsplProtocolProtocolCall);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case BsplPackage.BSPL_ANNOTATION_TARGET:
			{
				BsplAnnotationTarget bsplAnnotationTarget = (BsplAnnotationTarget)theEObject;
				T result = caseBsplAnnotationTarget(bsplAnnotationTarget);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Specification</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Specification</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolSpecification(BsplProtocolSpecification object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocol(BsplProtocol object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Member</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Member</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolMember(BsplProtocolMember object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Argument</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Argument</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolArgument(BsplProtocolArgument object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Role</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Role</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolRole(BsplProtocolRole object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Parameter</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Parameter</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolParameter(BsplProtocolParameter object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Message</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Message</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolMessage(BsplProtocolMessage object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Protocol Protocol Call</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Protocol Protocol Call</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplProtocolProtocolCall(BsplProtocolProtocolCall object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Annotation Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Annotation Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseBsplAnnotationTarget(BsplAnnotationTarget object)
	{
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object)
	{
		return null;
	}

} //BsplSwitch
