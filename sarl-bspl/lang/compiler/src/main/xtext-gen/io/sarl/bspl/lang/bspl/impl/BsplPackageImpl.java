/**
 * $Id$
 * 
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.bspl.lang.bspl.impl;

import io.sarl.bspl.lang.bspl.BsplAnnotationTarget;
import io.sarl.bspl.lang.bspl.BsplFactory;
import io.sarl.bspl.lang.bspl.BsplPackage;
import io.sarl.bspl.lang.bspl.BsplProtocol;
import io.sarl.bspl.lang.bspl.BsplProtocolArgument;
import io.sarl.bspl.lang.bspl.BsplProtocolMember;
import io.sarl.bspl.lang.bspl.BsplProtocolMessage;
import io.sarl.bspl.lang.bspl.BsplProtocolParameter;
import io.sarl.bspl.lang.bspl.BsplProtocolProtocolCall;
import io.sarl.bspl.lang.bspl.BsplProtocolRole;
import io.sarl.bspl.lang.bspl.BsplProtocolSpecification;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EOperation;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

import org.eclipse.xtext.xbase.XbasePackage;

import org.eclipse.xtext.xbase.annotations.xAnnotations.XAnnotationsPackage;

import org.eclipse.xtext.xtype.XtypePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BsplPackageImpl extends EPackageImpl implements BsplPackage
{
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolSpecificationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolMemberEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolArgumentEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolRoleEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolParameterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolMessageEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplProtocolProtocolCallEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bsplAnnotationTargetEClass = null;

	/**
	 * Creates an instance of the model <b>Package</b>, registered with
	 * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
	 * package URI value.
	 * <p>Note: the correct way to create the package is via the static
	 * factory method {@link #init init()}, which also performs
	 * initialization of the package, or returns the registered package,
	 * if one already exists.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.emf.ecore.EPackage.Registry
	 * @see io.sarl.bspl.lang.bspl.BsplPackage#eNS_URI
	 * @see #init()
	 * @generated
	 */
	private BsplPackageImpl()
	{
		super(eNS_URI, BsplFactory.eINSTANCE);
	}
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static boolean isInited = false;

	/**
	 * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
	 *
	 * <p>This method is used to initialize {@link BsplPackage#eINSTANCE} when that field is accessed.
	 * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #eNS_URI
	 * @see #createPackageContents()
	 * @see #initializePackageContents()
	 * @generated
	 */
	public static BsplPackage init()
	{
		if (isInited) return (BsplPackage)EPackage.Registry.INSTANCE.getEPackage(BsplPackage.eNS_URI);

		// Obtain or create and register package
		Object registeredBsplPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
		BsplPackageImpl theBsplPackage = registeredBsplPackage instanceof BsplPackageImpl ? (BsplPackageImpl)registeredBsplPackage : new BsplPackageImpl();

		isInited = true;

		// Initialize simple dependencies
		TypesPackage.eINSTANCE.eClass();
		XAnnotationsPackage.eINSTANCE.eClass();
		XtypePackage.eINSTANCE.eClass();
		XbasePackage.eINSTANCE.eClass();

		// Create package meta-data objects
		theBsplPackage.createPackageContents();

		// Initialize created meta-data
		theBsplPackage.initializePackageContents();

		// Mark meta-data to indicate it can't be changed
		theBsplPackage.freeze();

		// Update the registry and return the package
		EPackage.Registry.INSTANCE.put(BsplPackage.eNS_URI, theBsplPackage);
		return theBsplPackage;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolSpecification()
	{
		return bsplProtocolSpecificationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolSpecification_Package()
	{
		return (EAttribute)bsplProtocolSpecificationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocolSpecification_ImportSection()
	{
		return (EReference)bsplProtocolSpecificationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocolSpecification_BsplProtocols()
	{
		return (EReference)bsplProtocolSpecificationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocol()
	{
		return bsplProtocolEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocol_Annotations()
	{
		return (EReference)bsplProtocolEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocol_Modifiers()
	{
		return (EAttribute)bsplProtocolEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocol_Name()
	{
		return (EAttribute)bsplProtocolEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocol_Members()
	{
		return (EReference)bsplProtocolEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolMember()
	{
		return bsplProtocolMemberEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocolMember_Annotations()
	{
		return (EReference)bsplProtocolMemberEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolMember_Modifiers()
	{
		return (EAttribute)bsplProtocolMemberEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolArgument()
	{
		return bsplProtocolArgumentEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolArgument_Modifiers()
	{
		return (EAttribute)bsplProtocolArgumentEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolArgument_Name()
	{
		return (EAttribute)bsplProtocolArgumentEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolRole()
	{
		return bsplProtocolRoleEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolRole_Name()
	{
		return (EAttribute)bsplProtocolRoleEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolRole_Min()
	{
		return (EAttribute)bsplProtocolRoleEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolRole_Max()
	{
		return (EAttribute)bsplProtocolRoleEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolParameter()
	{
		return bsplProtocolParameterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocolParameter_Type()
	{
		return (EReference)bsplProtocolParameterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolParameter_Name()
	{
		return (EAttribute)bsplProtocolParameterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolMessage()
	{
		return bsplProtocolMessageEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolMessage_To()
	{
		return (EAttribute)bsplProtocolMessageEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocolMessage_Arguments()
	{
		return (EReference)bsplProtocolMessageEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolMessage_From()
	{
		return (EAttribute)bsplProtocolMessageEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolMessage_Message()
	{
		return (EAttribute)bsplProtocolMessageEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplProtocolProtocolCall()
	{
		return bsplProtocolProtocolCallEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolProtocolCall_Roles()
	{
		return (EAttribute)bsplProtocolProtocolCallEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EReference getBsplProtocolProtocolCall_Arguments()
	{
		return (EReference)bsplProtocolProtocolCallEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EAttribute getBsplProtocolProtocolCall_Target()
	{
		return (EAttribute)bsplProtocolProtocolCallEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EClass getBsplAnnotationTarget()
	{
		return bsplAnnotationTargetEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public BsplFactory getBsplFactory()
	{
		return (BsplFactory)getEFactoryInstance();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private boolean isCreated = false;

	/**
	 * Creates the meta-model objects for the package.  This method is
	 * guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void createPackageContents()
	{
		if (isCreated) return;
		isCreated = true;

		// Create classes and their features
		bsplProtocolSpecificationEClass = createEClass(BSPL_PROTOCOL_SPECIFICATION);
		createEAttribute(bsplProtocolSpecificationEClass, BSPL_PROTOCOL_SPECIFICATION__PACKAGE);
		createEReference(bsplProtocolSpecificationEClass, BSPL_PROTOCOL_SPECIFICATION__IMPORT_SECTION);
		createEReference(bsplProtocolSpecificationEClass, BSPL_PROTOCOL_SPECIFICATION__BSPL_PROTOCOLS);

		bsplProtocolEClass = createEClass(BSPL_PROTOCOL);
		createEReference(bsplProtocolEClass, BSPL_PROTOCOL__ANNOTATIONS);
		createEAttribute(bsplProtocolEClass, BSPL_PROTOCOL__MODIFIERS);
		createEAttribute(bsplProtocolEClass, BSPL_PROTOCOL__NAME);
		createEReference(bsplProtocolEClass, BSPL_PROTOCOL__MEMBERS);

		bsplProtocolMemberEClass = createEClass(BSPL_PROTOCOL_MEMBER);
		createEReference(bsplProtocolMemberEClass, BSPL_PROTOCOL_MEMBER__ANNOTATIONS);
		createEAttribute(bsplProtocolMemberEClass, BSPL_PROTOCOL_MEMBER__MODIFIERS);

		bsplProtocolArgumentEClass = createEClass(BSPL_PROTOCOL_ARGUMENT);
		createEAttribute(bsplProtocolArgumentEClass, BSPL_PROTOCOL_ARGUMENT__MODIFIERS);
		createEAttribute(bsplProtocolArgumentEClass, BSPL_PROTOCOL_ARGUMENT__NAME);

		bsplProtocolRoleEClass = createEClass(BSPL_PROTOCOL_ROLE);
		createEAttribute(bsplProtocolRoleEClass, BSPL_PROTOCOL_ROLE__NAME);
		createEAttribute(bsplProtocolRoleEClass, BSPL_PROTOCOL_ROLE__MIN);
		createEAttribute(bsplProtocolRoleEClass, BSPL_PROTOCOL_ROLE__MAX);

		bsplProtocolParameterEClass = createEClass(BSPL_PROTOCOL_PARAMETER);
		createEReference(bsplProtocolParameterEClass, BSPL_PROTOCOL_PARAMETER__TYPE);
		createEAttribute(bsplProtocolParameterEClass, BSPL_PROTOCOL_PARAMETER__NAME);

		bsplProtocolMessageEClass = createEClass(BSPL_PROTOCOL_MESSAGE);
		createEAttribute(bsplProtocolMessageEClass, BSPL_PROTOCOL_MESSAGE__TO);
		createEReference(bsplProtocolMessageEClass, BSPL_PROTOCOL_MESSAGE__ARGUMENTS);
		createEAttribute(bsplProtocolMessageEClass, BSPL_PROTOCOL_MESSAGE__FROM);
		createEAttribute(bsplProtocolMessageEClass, BSPL_PROTOCOL_MESSAGE__MESSAGE);

		bsplProtocolProtocolCallEClass = createEClass(BSPL_PROTOCOL_PROTOCOL_CALL);
		createEAttribute(bsplProtocolProtocolCallEClass, BSPL_PROTOCOL_PROTOCOL_CALL__ROLES);
		createEReference(bsplProtocolProtocolCallEClass, BSPL_PROTOCOL_PROTOCOL_CALL__ARGUMENTS);
		createEAttribute(bsplProtocolProtocolCallEClass, BSPL_PROTOCOL_PROTOCOL_CALL__TARGET);

		bsplAnnotationTargetEClass = createEClass(BSPL_ANNOTATION_TARGET);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private boolean isInitialized = false;

	/**
	 * Complete the initialization of the package and its meta-model.  This
	 * method is guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void initializePackageContents()
	{
		if (isInitialized) return;
		isInitialized = true;

		// Initialize package
		setName(eNAME);
		setNsPrefix(eNS_PREFIX);
		setNsURI(eNS_URI);

		// Obtain other dependent packages
		XtypePackage theXtypePackage = (XtypePackage)EPackage.Registry.INSTANCE.getEPackage(XtypePackage.eNS_URI);
		XAnnotationsPackage theXAnnotationsPackage = (XAnnotationsPackage)EPackage.Registry.INSTANCE.getEPackage(XAnnotationsPackage.eNS_URI);
		TypesPackage theTypesPackage = (TypesPackage)EPackage.Registry.INSTANCE.getEPackage(TypesPackage.eNS_URI);

		// Create type parameters

		// Set bounds for type parameters

		// Add supertypes to classes
		bsplProtocolEClass.getESuperTypes().add(this.getBsplAnnotationTarget());
		bsplProtocolMemberEClass.getESuperTypes().add(this.getBsplAnnotationTarget());
		bsplProtocolRoleEClass.getESuperTypes().add(this.getBsplProtocolMember());
		bsplProtocolParameterEClass.getESuperTypes().add(this.getBsplProtocolMember());
		bsplProtocolMessageEClass.getESuperTypes().add(this.getBsplProtocolMember());
		bsplProtocolProtocolCallEClass.getESuperTypes().add(this.getBsplProtocolMember());

		// Initialize classes and features; add operations and parameters
		initEClass(bsplProtocolSpecificationEClass, BsplProtocolSpecification.class, "BsplProtocolSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBsplProtocolSpecification_Package(), ecorePackage.getEString(), "package", null, 0, 1, BsplProtocolSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBsplProtocolSpecification_ImportSection(), theXtypePackage.getXImportSection(), null, "importSection", null, 0, 1, BsplProtocolSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBsplProtocolSpecification_BsplProtocols(), this.getBsplProtocol(), null, "bsplProtocols", null, 0, -1, BsplProtocolSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(bsplProtocolEClass, BsplProtocol.class, "BsplProtocol", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBsplProtocol_Annotations(), theXAnnotationsPackage.getXAnnotation(), null, "annotations", null, 0, -1, BsplProtocol.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocol_Modifiers(), ecorePackage.getEString(), "modifiers", null, 0, -1, BsplProtocol.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocol_Name(), ecorePackage.getEString(), "name", null, 0, 1, BsplProtocol.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBsplProtocol_Members(), this.getBsplProtocolMember(), null, "members", null, 0, -1, BsplProtocol.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		addEOperation(bsplProtocolEClass, ecorePackage.getEBoolean(), "isPublicVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, ecorePackage.getEBoolean(), "isPackageVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, ecorePackage.getEBoolean(), "isProtectedVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, ecorePackage.getEBoolean(), "isPrivateVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, theTypesPackage.getJvmVisibility(), "getDefaultVisibility", 1, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, this.getBsplProtocolRole(), "getRoles", 0, -1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, this.getBsplProtocolMessage(), "getMessages", 0, -1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, this.getBsplProtocolParameter(), "getParameters", 0, -1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolEClass, this.getBsplProtocolProtocolCall(), "getProtocolCalls", 0, -1, IS_UNIQUE, IS_ORDERED);

		initEClass(bsplProtocolMemberEClass, BsplProtocolMember.class, "BsplProtocolMember", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBsplProtocolMember_Annotations(), theXAnnotationsPackage.getXAnnotation(), null, "annotations", null, 0, -1, BsplProtocolMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolMember_Modifiers(), ecorePackage.getEString(), "modifiers", null, 0, -1, BsplProtocolMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, ecorePackage.getEBoolean(), "isPublicVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, ecorePackage.getEBoolean(), "isPackageVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, ecorePackage.getEBoolean(), "isProtectedVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, ecorePackage.getEBoolean(), "isPrivateVisibility", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, theTypesPackage.getJvmVisibility(), "getDefaultVisibility", 1, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, theTypesPackage.getJvmVisibility(), "getVisibility", 1, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMemberEClass, theTypesPackage.getJvmVisibility(), "getSpecifiedVisibility", 1, 1, IS_UNIQUE, IS_ORDERED);

		initEClass(bsplProtocolArgumentEClass, BsplProtocolArgument.class, "BsplProtocolArgument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBsplProtocolArgument_Modifiers(), ecorePackage.getEString(), "modifiers", null, 0, -1, BsplProtocolArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolArgument_Name(), ecorePackage.getEString(), "name", null, 0, 1, BsplProtocolArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		addEOperation(bsplProtocolArgumentEClass, ecorePackage.getEBoolean(), "isInput", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolArgumentEClass, ecorePackage.getEBoolean(), "isOutput", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolArgumentEClass, ecorePackage.getEBoolean(), "isAny", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolArgumentEClass, ecorePackage.getEBoolean(), "isNil", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolArgumentEClass, ecorePackage.getEBoolean(), "isOptional", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolArgumentEClass, ecorePackage.getEBoolean(), "isKey", 0, 1, IS_UNIQUE, IS_ORDERED);

		initEClass(bsplProtocolRoleEClass, BsplProtocolRole.class, "BsplProtocolRole", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBsplProtocolRole_Name(), ecorePackage.getEString(), "name", null, 0, 1, BsplProtocolRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolRole_Min(), ecorePackage.getEIntegerObject(), "min", null, 0, 1, BsplProtocolRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolRole_Max(), ecorePackage.getEIntegerObject(), "max", null, 0, 1, BsplProtocolRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		EOperation op = addEOperation(bsplProtocolRoleEClass, null, "setMinMax", 0, 1, IS_UNIQUE, IS_ORDERED);
		addEParameter(op, ecorePackage.getEIntegerObject(), "newMin", 0, 1, IS_UNIQUE, IS_ORDERED);
		addEParameter(op, ecorePackage.getEIntegerObject(), "newMax", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolRoleEClass, ecorePackage.getEBoolean(), "isFixedMinMax", 0, 1, IS_UNIQUE, IS_ORDERED);

		initEClass(bsplProtocolParameterEClass, BsplProtocolParameter.class, "BsplProtocolParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBsplProtocolParameter_Type(), theTypesPackage.getJvmTypeReference(), null, "type", null, 0, 1, BsplProtocolParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolParameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, BsplProtocolParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		addEOperation(bsplProtocolParameterEClass, ecorePackage.getEBoolean(), "isInput", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolParameterEClass, ecorePackage.getEBoolean(), "isOutput", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolParameterEClass, ecorePackage.getEBoolean(), "isAny", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolParameterEClass, ecorePackage.getEBoolean(), "isNil", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolParameterEClass, ecorePackage.getEBoolean(), "isOptional", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolParameterEClass, ecorePackage.getEBoolean(), "isKey", 0, 1, IS_UNIQUE, IS_ORDERED);

		initEClass(bsplProtocolMessageEClass, BsplProtocolMessage.class, "BsplProtocolMessage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBsplProtocolMessage_To(), ecorePackage.getEString(), "to", null, 0, 1, BsplProtocolMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBsplProtocolMessage_Arguments(), this.getBsplProtocolArgument(), null, "arguments", null, 0, -1, BsplProtocolMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolMessage_From(), ecorePackage.getEString(), "from", null, 0, 1, BsplProtocolMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolMessage_Message(), ecorePackage.getEString(), "message", null, 0, 1, BsplProtocolMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		addEOperation(bsplProtocolMessageEClass, ecorePackage.getEBoolean(), "isInputTargetRole", 0, 1, IS_UNIQUE, IS_ORDERED);

		addEOperation(bsplProtocolMessageEClass, ecorePackage.getEBoolean(), "isOutputTargetRole", 0, 1, IS_UNIQUE, IS_ORDERED);

		initEClass(bsplProtocolProtocolCallEClass, BsplProtocolProtocolCall.class, "BsplProtocolProtocolCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBsplProtocolProtocolCall_Roles(), ecorePackage.getEString(), "roles", null, 0, -1, BsplProtocolProtocolCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBsplProtocolProtocolCall_Arguments(), this.getBsplProtocolArgument(), null, "arguments", null, 0, -1, BsplProtocolProtocolCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBsplProtocolProtocolCall_Target(), theXtypePackage.getIJvmTypeReferenceProvider(), "target", null, 0, 1, BsplProtocolProtocolCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(bsplAnnotationTargetEClass, BsplAnnotationTarget.class, "BsplAnnotationTarget", IS_ABSTRACT, IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		addEOperation(bsplAnnotationTargetEClass, theXAnnotationsPackage.getXAnnotation(), "getAnnotations", 0, -1, IS_UNIQUE, IS_ORDERED);

		op = addEOperation(bsplAnnotationTargetEClass, null, "setAnnotations", 0, 0, IS_UNIQUE, IS_ORDERED);
		addEParameter(op, theXAnnotationsPackage.getXAnnotation(), "annotations", 0, -1, IS_UNIQUE, IS_ORDERED);

		// Create resource
		createResource(eNS_URI);
	}

} //BsplPackageImpl
