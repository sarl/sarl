/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 */
module io.sarl.bspl.lang.GenerateBSPL

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.xtext.xtext.generator.ui.codemining.*
import org.eclipse.xtext.resource.XtextResourceSet
import org.eclipse.xtext.xtext.generator.validation.ValidatorFragment2
import org.eclipse.xtext.xtext.generator.ui.contentAssist.ContentAssistFragment2 

import io.sarl.bspl.lang.mwe2.*

// Path to the folder that contains all the Xtext project to be updated by MWE2 script, excluding the UI projects
var rootPathForAllXtextProjects = ".."
// Path to the folder that contains all the Xtext UI project to be updated by MWE2 script
var rootPathForAllUiXtextProjects = "${rootPathForAllXtextProjects}/../ui"

// Project that contains the SARL-BSPL compiler
var compilerProjectName = "compiler"
var compilerProjectPath = "${rootPathForAllXtextProjects}/${compilerProjectName}"

// Project for testing the SARL-BSPL compiler
var compilerTestProjectName = "compiler.tests"
var compilerTestProjectPath = "${rootPathForAllXtextProjects}/${compilerTestProjectName}"
var compilerTestProjectSrcGenPath = "${compilerTestProjectPath}/src/main/generated-sources/java"

// Project for the UI that is independent of the framework, i.e., Eclipse and IntelliJ
var genericIdeProjectName = "io.sarl.bspl.lang.ide"
var genericIdeProjectPath = "${rootPathForAllUiXtextProjects}/${genericIdeProjectName}"
var genericIdeProjectMetaInfPath = "${genericIdeProjectPath}/META-INF"
var genericIdeProjectSrcPath = "${genericIdeProjectPath}/src"
var genericIdeProjectSrcGenPath = "${genericIdeProjectPath}/src-gen"

// Project for the UI that is dedicated to the Eclipse framework
var eclipseIdeProjectName = "io.sarl.bspl.lang.ui"
var eclipseIdeProjectPath = "${rootPathForAllUiXtextProjects}/${eclipseIdeProjectName}"
var eclipseIdeProjectMetaInfPath = "${eclipseIdeProjectPath}/META-INF"
var eclipseIdeProjectSrcPath = "${eclipseIdeProjectPath}/src"
var eclipseIdeProjectSrcGenPath = "${eclipseIdeProjectPath}/src-gen"

// Project for the UI tests
var eclipseIdeTestProjectName = "io.sarl.bspl.lang.ui.tests"
var eclipseIdeTestProjectPath = "${rootPathForAllUiXtextProjects}/${eclipseIdeTestProjectName}"
var eclipseIdeTestProjectMetaInfPath = "${eclipseIdeTestProjectPath}/META-INF"
var eclipseIdeTestProjectSrcPath = "${eclipseIdeTestProjectPath}/src"
var eclipseIdeTestProjectSrcGenPath = "${eclipseIdeTestProjectPath}/src-gen"

// File extension for the SARL-BSPL scripts, separated by coma characters, in preferred order
var file.extensions = "bspl,BSPL,Bspl"

// Encoding of the generated source files
var fileEncoding = "UTF-8"

// Line delimiter in the generated source files
var lineDelimiter = "\n"

// Header in the generated source files
var fileHeader = "/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-\${year} SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the \"License\");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an \"AS IS\" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */"
 
Workflow {
  	component = DirectoryCleaner {
		directory = "${compilerProjectPath}/src/main/xtext-gen"
	}
  	component = DirectoryCleaner {
		directory = "${compilerTestProjectPath}/src/main/generated-sources/java"
	}
 	component = DirectoryCleaner {
		directory = "${genericIdeProjectSrcGenPath}"
	}
 	component = DirectoryCleaner {
		directory = "${eclipseIdeProjectSrcGenPath}"
	}
 	component = DirectoryCleaner {
		directory = "${eclipseIdeTestProjectSrcGenPath}"
	}

 	component = XtextGenerator auto-inject {
		// Generation and configuration module for SARL-BSPL
 		configuration = BsplGeneratorModule {
			// Project configuration
			project = StandardProjectConfig auto-inject {
				baseName = compilerProjectName
				rootPath = rootPathForAllXtextProjects
				mavenLayout = true
				createEclipseMetaData = true
				runtime = auto-inject {
					enabled = true
					name = compilerProjectName
					metaInf = compilerProjectPath
				}
				runtimeTest = auto-inject {
					enabled = true
					name = compilerTestProjectName
					root = compilerTestProjectPath
					srcGen = compilerTestProjectSrcGenPath
				}
				genericIde = auto-inject {
					enabled = true
					name = genericIdeProjectName
					root = genericIdeProjectPath
					src = genericIdeProjectSrcPath
					srcGen = genericIdeProjectSrcGenPath
					metaInf = genericIdeProjectMetaInfPath
					overwriteSrc = false
					
				}
				eclipsePlugin = auto-inject {
					enabled = true
					name = eclipseIdeProjectName
					root = eclipseIdeProjectPath
					src = eclipseIdeProjectSrcPath
					srcGen = eclipseIdeProjectSrcGenPath
					metaInf = eclipseIdeProjectMetaInfPath
					overwriteSrc = false
				}
				eclipsePluginTest = auto-inject {
					enabled = true
					name = eclipseIdeTestProjectName
					root = eclipseIdeTestProjectPath
					src = eclipseIdeTestProjectSrcPath
					srcGen = eclipseIdeTestProjectSrcGenPath
					metaInf = eclipseIdeTestProjectMetaInfPath
					overwriteSrc = false
				}
			}
			// Code configuration
			code = auto-inject {
				lineDelimiter = lineDelimiter
				encoding = fileEncoding
				fileHeader = fileHeader
				preferXtendStubs = false
			}
			grammarKeywordAccess = auto-inject {
				dependencyGrammarInheritance = true
				
    			literal = "void"
    			literal = "true"
    			literal = "false"
    			literal = "null"
    			literal = "this"
    			literal = "it"

    			ignoreKeyword = "create"
				ignoreKeyword = 'AFTER'
				ignoreKeyword = 'BEFORE'
				ignoreKeyword = 'ELSE'
				ignoreKeyword = 'ELSEIF'
				ignoreKeyword = 'ENDFOR'
				ignoreKeyword = 'ENDIF'
				ignoreKeyword = 'FOR'
				ignoreKeyword = 'IF'
				ignoreKeyword = 'SEPARATOR'
			}
		}
		
		// Generator for SARL
		language = StandardLanguage auto-inject {
			// Set of resources
			resourceSet = XtextResourceSet : resourceSet {}
			// SARL depends on the Xtend model
			//referencedResource = "platform:/resource/org.eclipse.xtend.core/model/Xtend.genmodel"
			// ID for SARL-BSPL
			name = "io.sarl.bspl.lang.BSPL"
			// Pointer to the SARL-BSPL grammar
			grammarUri = "platform:/resource/${compilerProjectName}/src/main/java/io/sarl/bspl/lang/BSPL.xtext"
			// Definition of the file extensions for SARL-BSPL
			fileExtensions = file.extensions
			// Specification of the injection that is used by MWE2 (not by the SARL compiler)
			guiceModule = BsplLanguageGeneratorModule {}

			// Lexer
			parserGenerator = auto-inject {
				removeBacktrackingGuards = true
				lookaheadThreshold = '5'
				partialParsing = true
				debugGrammar = true
				options = auto-inject {
					//backtrack = true
				}
			}
			
			// EMF Generator
			emfGenerator = auto-inject {
				// Do not update the build.properties in order to avoid the path "model/generated"
				// within the "bin.includes" definition.
				updateBuildProperties = false
			}

			// SARL-BSPL Validator
			validator = ValidatorFragment2 auto-inject {
			}

			// SARL-BSPL serializer
			serializer = auto-inject {
				generateStub = false
			}

			// Refactoring
			renameRefactoring = auto-inject {
				useJdtRefactoring = true
			}

    		// Generates the required bindings only if the grammar inherits from Xbase
			xbaseSupport = auto-inject {
				generateXtendInferrer = false
			}

    		// Testing infrastructure
			junitSupport = auto-inject {
				generateStub = false
				generateXtendStub = false
				junitVersion = "5"
			}
			
			// Content assist - Bug fixed for avoiding compilation error due to an
			// invalid qualified name for the XtendProposalProvider
			contentAssist = ContentAssistFragment2 auto-inject {
			}

			// Formatter - this fragment should be explicitly defined otherwise the BSPLFormatter is not injected. Bug?
			formatter = auto-inject {	
				generateStub = true	
			}

			// Code mining
			fragment = CodeMiningFragment auto-inject {
				generateStub = true
			}

			// ****************************************
			// Fragments that are specific to SARL-BSPL
			// ****************************************

			// Generate an helpful accessors to the grammar keywords.
			fragment = io.sarl.lang.mwe2.keywords.GrammarKeywordAccessFragment2 auto-inject {
			}
		}
 	}
 
   	// SARL-BSPL Ecore generator
   	// Update the GenModel file with the changes applied by this script.
	component = org.eclipse.emf.mwe2.ecore.EcoreGenerator auto-inject {
		resourceSet = resourceSet
		genModel = "platform:/resource/${compilerProjectName}/model/BSPL.genmodel"
		srcPath ="platform:/resource/${compilerProjectName}/src/main/java"
		srcPath ="platform:/resource/org.eclipse.xtext.common.types/src"
		srcPath ="platform:/resource/org.eclipse.xtext.xbase/src"
		lineDelimiter = lineDelimiter
	}

 }