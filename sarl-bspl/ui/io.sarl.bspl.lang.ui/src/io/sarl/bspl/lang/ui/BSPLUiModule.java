/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.bspl.lang.ui;

import com.google.inject.Binder;
import com.google.inject.name.Names;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.ui.views.contentoutline.IContentOutlinePage;
import org.eclipse.xtext.builder.preferences.BuilderConfigurationBlock;
import org.eclipse.xtext.generator.IContextualOutputConfigurationProvider;
import org.eclipse.xtext.ui.editor.IXtextEditorCallback;
import org.eclipse.xtext.ui.editor.XtextEditor;
import org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.IOutlineTreeStructureProvider;
import org.eclipse.xtext.ui.editor.outline.impl.OutlineFilterAndSorter;
import org.eclipse.xtext.ui.editor.preferences.IPreferenceStoreInitializer;

import io.sarl.apputils.uiextensions.outputconfig.IContextualOutputConfigurationProvider3;
import io.sarl.bspl.lang.ui.builder.BSPLEclipseOutputConfigurationProvider;
import io.sarl.bspl.lang.ui.editor.BSPLNatureAddingEditorCallback;
import io.sarl.bspl.lang.ui.editor.BSPLStandardEditor;
import io.sarl.bspl.lang.ui.outline.BSPLOutlineNodeComparator;
import io.sarl.bspl.lang.ui.outline.BSPLOutlinePage;
import io.sarl.bspl.lang.ui.outline.BSPLOutlineTreeProvider;
import io.sarl.bspl.lang.ui.preferences.BSPLBuilderConfigurationBlock;
import io.sarl.bspl.lang.ui.preferences.BSPLPreferenceStoreInitializer;

/**
 * Use this class to register components to be used within the Eclipse IDE.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.15
 */
@SuppressWarnings("restriction")
public class BSPLUiModule extends AbstractBSPLUiModule {

	public BSPLUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	@Override
	public Class<? extends IXtextEditorCallback> bindIXtextEditorCallback() {
		return BSPLNatureAddingEditorCallback.class;
	}

	@Override
	public void configureSmartCaretPreferenceInitializer(Binder binder) {
		binder.bind(IPreferenceStoreInitializer.class).annotatedWith(Names.named("smartCaretPreferenceInitializer")) //$NON-NLS-1$
			.to(BSPLPreferenceStoreInitializer.class);
	}

	@Override
	public void configureIPreferenceStoreInitializer(Binder binder) {
		binder.bind(IPreferenceStoreInitializer.class).annotatedWith(Names.named("RefactoringPreferences")) //$NON-NLS-1$
			.to(BSPLPreferenceStoreInitializer.class);
	}

	@Override
	public Class<? extends IOutlineTreeProvider> bindIOutlineTreeProvider() {
		return BSPLOutlineTreeProvider.class;
	}
	
	@Override
	public Class<? extends IOutlineTreeStructureProvider> bindIOutlineTreeStructureProvider() {
		return BSPLOutlineTreeProvider.class;
	}

	@Override
	public Class<? extends OutlineFilterAndSorter.IComparator> bindOutlineFilterAndSorter$IComparator() {
		return BSPLOutlineNodeComparator.class;
	}

	@Override
	public Class<? extends IContentOutlinePage> bindIContentOutlinePage() {
		return BSPLOutlinePage.class;
	}

	@Override
	public Class<? extends XtextEditor> bindXtextEditor() {
		return BSPLStandardEditor.class;
	}

	@Override
	public Class<? extends BuilderConfigurationBlock> bindBuilderConfigurationBlock() {
		return BSPLBuilderConfigurationBlock.class;
	}

	@Override
	public Class<? extends IContextualOutputConfigurationProvider> bindIContextualOutputConfigurationProvider() {
		return BSPLEclipseOutputConfigurationProvider.class;
	}

	@SuppressWarnings("static-method")
	public void configureIContextualOutputConfigurationProvider3_for_BSPL(Binder binder) {
		binder.bind(IContextualOutputConfigurationProvider3.class)
			.annotatedWith(Names.named("bspl")) //$NON-NLS-1$
			.to(BSPLEclipseOutputConfigurationProvider.class);
	}

}
