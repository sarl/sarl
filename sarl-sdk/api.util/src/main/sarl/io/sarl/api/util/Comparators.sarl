/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.api.util

import java.util.Comparator

/** 
 * Comparators.
 * 
 * @author $Author: sgalland$
 * @version api.util 0.13.0 20230919-093058
 * @mavengroupid io.sarl.sdk
 * @mavenartifactid api.util
 * @since 0.6.0
 */
final class Comparators {

	new {
	}

	/** Comparator of classes.
	 */
	@SuppressWarnings("org.eclipse.xtext.xbase.validation.IssueCodes.raw_type")
	public static val classComparator : Comparator<Class> = [o1, o2 |
		if (o1 === o2) {
			return 0
		}
		if (o1 === null) {
			return Integer::MIN_VALUE
		}
		if (o2 === null) {
			return Integer::MAX_VALUE
		}

		val n1 = o1.canonicalName
		val n2 = o2.canonicalName
		if (n1 === n2) {
			return 0
		}
		if (n1 === null) {
			return Integer::MIN_VALUE
		}
		if (n2 === null) {
			return Integer::MAX_VALUE
		}
		return n1 <=> n2
	]

	/** Comparator of objects.
	 */
	@SuppressWarnings("org.eclipse.xtext.xbase.validation.IssueCodes.raw_type")
	public static val objectComparator : Comparator = [o1 : Object, o2 : Object |
		if (o1 === o2) {
			return 0
		}
		if (o1 === null) {
			return Integer::MIN_VALUE
		}
		if (o2 === null) {
			return Integer::MAX_VALUE
		}

		val id1 = System::identityHashCode(o1)
		val id2 = System::identityHashCode(o2)
		return Integer::compare(id1, id2)
	]

}

