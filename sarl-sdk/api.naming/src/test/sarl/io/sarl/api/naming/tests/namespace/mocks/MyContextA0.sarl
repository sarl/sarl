/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2023 SARL.io, the Original Authors and Main Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.api.naming.tests.namespace.mocks

import io.sarl.lang.core.AgentContext
import io.sarl.lang.core.AgentTrait
import io.sarl.lang.core.EventSpace
import io.sarl.lang.core.Space
import io.sarl.lang.core.SpaceSpecification
import io.sarl.lang.core.util.ConcurrentCollection
import java.util.UUID

/** Mock of an agent context.
 *
 * @author $Author: sgalland$
 * @version api.naming 0.13.0 20230919-093058
 * @mavengroupid io.sarl.sdk
 * @mavenartifactid api.naming
 */
class MyContextA0 extends AgentTrait implements AgentContext {

	@SuppressWarnings("unused_private_member")
	val myfield : int = 34
	
	def createSpace(spec : Class<? extends SpaceSpecification<S>>, spaceUUID : UUID, creationParams : Object*) : S with S extends Space {
		throw new UnsupportedOperationException
	}
	
	def getDefaultSpace : EventSpace {
		throw new UnsupportedOperationException
	}
	
	def getID : UUID {
		throw new UnsupportedOperationException
	}
	
	def getOrCreateSpaceWithID(spec : Class<? extends SpaceSpecification<S>>, spaceUUID : UUID, creationParams : Object*) : S with S extends Space {
		throw new UnsupportedOperationException
	}
	
	def getOrCreateSpaceWithSpec(spec : Class<? extends SpaceSpecification<S>>, spaceUUID : UUID, creationParams : Object*) : S with S extends Space {
		throw new UnsupportedOperationException
	}
	
	def getSpace(spaceUUID : UUID) : S with S extends Space {
		throw new UnsupportedOperationException
	}
	
	def getSpaces : ConcurrentCollection<? extends Space> {
		throw new UnsupportedOperationException
	}
	
	def getSpaces(spec : Class<? extends SpaceSpecification<S>>) : ConcurrentCollection<S> with S extends Space {
		throw new UnsupportedOperationException
	}
	
	def isRootContext : boolean {
		throw new UnsupportedOperationException
	}
	
}
