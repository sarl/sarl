/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.api.core.spaces

import java.lang.ref.WeakReference

/** 
 * Links from an address to another component of the SRE.
 * 
 * <p>This class was introduced for increasing the run-time performances of the SRE.
 * It should not be used directly.
 *
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version api.core 0.15.1 20250911-224825
 * @mavengroupid io.sarl.sdk
 * @mavenartifactid api.core
 * @since 0.15
 */
class AddressLazyLinks {

	var participant : WeakReference<Participant>

	/** Replies the link to the participant.
	 *
	 * @return the link to the participant, {@code null} if none.
	 */
	def getParticipant : Participant {
		this.participant?.get
	}

	/** Change the link to the participant.
	 * 
	 * @param participant the link to the participant, {@code null} if none.
	 */
	def setParticipant(participant : Participant) {
		if (participant === null) {
			this.participant = null;
		} else {
			this.participant = new WeakReference(participant)
		}
	}

	override toString : String {
		var p = getParticipant
		if (p !== null) {
			return p. toString
		}
		return "<?>"
	}

}
