/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.api.game.tgob

import org.eclipse.xtend.lib.annotations.Accessors

/** 
 * Default implementation of a goal in the game time-based goal-oriented behavior.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.13
 */
class BaseGoal extends AbstractGob implements Goal {

	@Accessors(PUBLIC_GETTER)
	var insistence : double

	@Accessors
	var insistenceChangePerTimeUnit : double
	
	/** Constructor.
	 *
	 * @param name the name of the goal.
	 * @param initialInsistence the initial value of insistence that is associated to this goal.
	 * @param timeChange the insistence change per time unit.
	 */
	new(name : String = null, initialInsistence : double = 0.0, timeChange : double = 0.0) {
		setName(name)
		setInsistence(initialInsistence)
		setInsistenceChangePerTimeUnit(timeChange)
	}

	override setInsistence(newInsistence : double) {
		if (newInsistence > 0.0) {
			this.insistence = newInsistence
		} else {
			this.insistence = 0.0
		}
	}

	override toString : String {
		return "Goal: " + getName + "\t=" + getInsistence.formatNumber + "\t" +
					getInsistenceChangePerTimeUnit.formatNumber + "/unit"

	}

}
