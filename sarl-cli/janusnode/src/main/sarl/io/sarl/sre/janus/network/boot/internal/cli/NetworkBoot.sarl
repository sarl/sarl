/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.sre.janus.network.boot.internal.cli

import io.sarl.sre.janus.boot.Boot
import io.sarl.sre.janus.network.boot.configs.SreNetworkConfig
import org.arakhne.afc.bootique.variables.VariableNames

/**
 * Command status Janus with networking feature turned on.
 *
 * @author <a href="http://www.ciad-lab.fr/stephane_galland">St&eacute;phane Galland</a>
 * @version janusnode 3.0.15.1 20250911-224827
 * @mavengroupid io.sarl.cli
 * @mavenartifactid janusnode
 * @since 0.12
 */
class NetworkBoot {

	/** Replies the default name of the program.
	 * 
	 * @return the default name of the program.
	 */
	static def getDefaultSreProgramName : String {
		return SreNetworkConfig::DEFAULT_PROGRAM_NAME
	}

	/** Main program.
	 *
	 * @param args the command line arguments.
	 */
	@SuppressWarnings("discouraged_reference")
	static def main(args : String*) : void {
		// Force the activation of the network if there is no argument provided in the properties.
		val propName = VariableNames::toPropertyName(SreNetworkConfig::ENABLE_NAME)
		val propValue = System::getProperty(propName, null)
		if (propValue.isNullOrEmpty) {
			System::setProperty(propName, Boolean::TRUE.toString)
		}
		Boot::main(args)
	}

}
