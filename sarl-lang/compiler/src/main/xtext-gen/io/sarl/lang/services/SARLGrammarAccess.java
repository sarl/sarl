/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2026 SARL.io, the original authors and main authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.lang.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtend.core.services.XtendGrammarAccess;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.xbase.annotations.services.XbaseWithAnnotationsGrammarAccess;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class SARLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class SarlScriptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.SarlScript");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlScriptAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cPackageKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPackageAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPackageQualifiedNameParserRuleCall_1_1_0 = (RuleCall)cPackageAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cImportSectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportSectionXImportSectionParserRuleCall_2_0 = (RuleCall)cImportSectionAssignment_2.eContents().get(0);
		private final Assignment cXtendTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXtendTypesTypeParserRuleCall_3_0 = (RuleCall)cXtendTypesAssignment_3.eContents().get(0);
		
		//SarlScript returns xtend::XtendFile:
		//    {SarlScript}
		//    ('package' package=QualifiedName ';'?)?
		//    importSection=XImportSection?
		//    xtendTypes+=Type*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlScript}
		//('package' package=QualifiedName ';'?)?
		//importSection=XImportSection?
		//xtendTypes+=Type*
		public Group getGroup() { return cGroup; }
		
		//{SarlScript}
		public Action getSarlScriptAction_0() { return cSarlScriptAction_0; }
		
		//('package' package=QualifiedName ';'?)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'package'
		public Keyword getPackageKeyword_1_0() { return cPackageKeyword_1_0; }
		
		//package=QualifiedName
		public Assignment getPackageAssignment_1_1() { return cPackageAssignment_1_1; }
		
		//QualifiedName
		public RuleCall getPackageQualifiedNameParserRuleCall_1_1_0() { return cPackageQualifiedNameParserRuleCall_1_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_1_2() { return cSemicolonKeyword_1_2; }
		
		//importSection=XImportSection?
		public Assignment getImportSectionAssignment_2() { return cImportSectionAssignment_2; }
		
		//XImportSection
		public RuleCall getImportSectionXImportSectionParserRuleCall_2_0() { return cImportSectionXImportSectionParserRuleCall_2_0; }
		
		//xtendTypes+=Type*
		public Assignment getXtendTypesAssignment_3() { return cXtendTypesAssignment_3; }
		
		//Type
		public RuleCall getXtendTypesTypeParserRuleCall_3_0() { return cXtendTypesTypeParserRuleCall_3_0; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.Type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendTypeDeclarationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cSarlEventAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_1_0 = (RuleCall)cModifiersAssignment_2_0_1.eContents().get(0);
		private final Keyword cEventKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Assignment cNameAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_0_3_0 = (RuleCall)cNameAssignment_2_0_3.eContents().get(0);
		private final Group cGroup_2_0_4 = (Group)cGroup_2_0.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_0_4_0 = (Keyword)cGroup_2_0_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_0_4_1 = (Assignment)cGroup_2_0_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_0_4_1_0 = (RuleCall)cTypeParametersAssignment_2_0_4_1.eContents().get(0);
		private final Group cGroup_2_0_4_2 = (Group)cGroup_2_0_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_0_4_2_0 = (Keyword)cGroup_2_0_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_0_4_2_1 = (Assignment)cGroup_2_0_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_0_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_0_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_0_4_3 = (Keyword)cGroup_2_0_4.eContents().get(3);
		private final Group cGroup_2_0_5 = (Group)cGroup_2_0.eContents().get(5);
		private final Keyword cExtendsKeyword_2_0_5_0 = (Keyword)cGroup_2_0_5.eContents().get(0);
		private final Assignment cExtendsAssignment_2_0_5_1 = (Assignment)cGroup_2_0_5.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_5_1_0 = (RuleCall)cExtendsAssignment_2_0_5_1.eContents().get(0);
		private final Group cGroup_2_0_6 = (Group)cGroup_2_0.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_2_0_6_0 = (Keyword)cGroup_2_0_6.eContents().get(0);
		private final Assignment cMembersAssignment_2_0_6_1 = (Assignment)cGroup_2_0_6.eContents().get(1);
		private final RuleCall cMembersEventMemberParserRuleCall_2_0_6_1_0 = (RuleCall)cMembersAssignment_2_0_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_0_6_2 = (Keyword)cGroup_2_0_6.eContents().get(2);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cSarlCapacityAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_1_1_0 = (RuleCall)cModifiersAssignment_2_1_1.eContents().get(0);
		private final Keyword cCapacityKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Assignment cNameAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_1_3_0 = (RuleCall)cNameAssignment_2_1_3.eContents().get(0);
		private final Group cGroup_2_1_4 = (Group)cGroup_2_1.eContents().get(4);
		private final Keyword cExtendsKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1_4_1 = (Assignment)cGroup_2_1_4.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_1_0 = (RuleCall)cExtendsAssignment_2_1_4_1.eContents().get(0);
		private final Group cGroup_2_1_4_2 = (Group)cGroup_2_1_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_4_2_0 = (Keyword)cGroup_2_1_4_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1_4_2_1 = (Assignment)cGroup_2_1_4_2.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_2_1_0 = (RuleCall)cExtendsAssignment_2_1_4_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1_5 = (Keyword)cGroup_2_1.eContents().get(5);
		private final Assignment cMembersAssignment_2_1_6 = (Assignment)cGroup_2_1.eContents().get(6);
		private final RuleCall cMembersCapacityMemberParserRuleCall_2_1_6_0 = (RuleCall)cMembersAssignment_2_1_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_7 = (Keyword)cGroup_2_1.eContents().get(7);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Action cSarlAgentAnnotationInfoAction_2_2_0 = (Action)cGroup_2_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_2_1_0 = (RuleCall)cModifiersAssignment_2_2_1.eContents().get(0);
		private final Keyword cAgentKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Assignment cNameAssignment_2_2_3 = (Assignment)cGroup_2_2.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_2_3_0 = (RuleCall)cNameAssignment_2_2_3.eContents().get(0);
		private final Group cGroup_2_2_4 = (Group)cGroup_2_2.eContents().get(4);
		private final Keyword cExtendsKeyword_2_2_4_0 = (Keyword)cGroup_2_2_4.eContents().get(0);
		private final Assignment cExtendsAssignment_2_2_4_1 = (Assignment)cGroup_2_2_4.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_4_1_0 = (RuleCall)cExtendsAssignment_2_2_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_2_5 = (Keyword)cGroup_2_2.eContents().get(5);
		private final Assignment cMembersAssignment_2_2_6 = (Assignment)cGroup_2_2.eContents().get(6);
		private final RuleCall cMembersAOPMemberParserRuleCall_2_2_6_0 = (RuleCall)cMembersAssignment_2_2_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2_7 = (Keyword)cGroup_2_2.eContents().get(7);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Action cSarlBehaviorAnnotationInfoAction_2_3_0 = (Action)cGroup_2_3.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_3_1_0 = (RuleCall)cModifiersAssignment_2_3_1.eContents().get(0);
		private final Keyword cBehaviorKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final Assignment cNameAssignment_2_3_3 = (Assignment)cGroup_2_3.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_3_3_0 = (RuleCall)cNameAssignment_2_3_3.eContents().get(0);
		private final Group cGroup_2_3_4 = (Group)cGroup_2_3.eContents().get(4);
		private final Keyword cExtendsKeyword_2_3_4_0 = (Keyword)cGroup_2_3_4.eContents().get(0);
		private final Assignment cExtendsAssignment_2_3_4_1 = (Assignment)cGroup_2_3_4.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_4_1_0 = (RuleCall)cExtendsAssignment_2_3_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_3_5 = (Keyword)cGroup_2_3.eContents().get(5);
		private final Assignment cMembersAssignment_2_3_6 = (Assignment)cGroup_2_3.eContents().get(6);
		private final RuleCall cMembersAOPMemberParserRuleCall_2_3_6_0 = (RuleCall)cMembersAssignment_2_3_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3_7 = (Keyword)cGroup_2_3.eContents().get(7);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Action cSarlSkillAnnotationInfoAction_2_4_0 = (Action)cGroup_2_4.eContents().get(0);
		private final Assignment cModifiersAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_4_1_0 = (RuleCall)cModifiersAssignment_2_4_1.eContents().get(0);
		private final Keyword cSkillKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Assignment cNameAssignment_2_4_3 = (Assignment)cGroup_2_4.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_4_3_0 = (RuleCall)cNameAssignment_2_4_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_4_4 = (UnorderedGroup)cGroup_2_4.eContents().get(4);
		private final Group cGroup_2_4_4_0 = (Group)cUnorderedGroup_2_4_4.eContents().get(0);
		private final Keyword cExtendsKeyword_2_4_4_0_0 = (Keyword)cGroup_2_4_4_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_4_4_0_1 = (Assignment)cGroup_2_4_4_0.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_0_1_0 = (RuleCall)cExtendsAssignment_2_4_4_0_1.eContents().get(0);
		private final Group cGroup_2_4_4_1 = (Group)cUnorderedGroup_2_4_4.eContents().get(1);
		private final Keyword cImplementsKeyword_2_4_4_1_0 = (Keyword)cGroup_2_4_4_1.eContents().get(0);
		private final Assignment cImplementsAssignment_2_4_4_1_1 = (Assignment)cGroup_2_4_4_1.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_1_1_0 = (RuleCall)cImplementsAssignment_2_4_4_1_1.eContents().get(0);
		private final Group cGroup_2_4_4_1_2 = (Group)cGroup_2_4_4_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_4_1_2_0 = (Keyword)cGroup_2_4_4_1_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_4_4_1_2_1 = (Assignment)cGroup_2_4_4_1_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_1_2_1_0 = (RuleCall)cImplementsAssignment_2_4_4_1_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_4_5 = (Keyword)cGroup_2_4.eContents().get(5);
		private final Assignment cMembersAssignment_2_4_6 = (Assignment)cGroup_2_4.eContents().get(6);
		private final RuleCall cMembersAOPMemberParserRuleCall_2_4_6_0 = (RuleCall)cMembersAssignment_2_4_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4_7 = (Keyword)cGroup_2_4.eContents().get(7);
		private final Group cGroup_2_5 = (Group)cAlternatives_2.eContents().get(5);
		private final Action cSarlSpaceAnnotationInfoAction_2_5_0 = (Action)cGroup_2_5.eContents().get(0);
		private final Assignment cModifiersAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_5_1_0 = (RuleCall)cModifiersAssignment_2_5_1.eContents().get(0);
		private final Keyword cSpaceKeyword_2_5_2 = (Keyword)cGroup_2_5.eContents().get(2);
		private final Assignment cNameAssignment_2_5_3 = (Assignment)cGroup_2_5.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_5_3_0 = (RuleCall)cNameAssignment_2_5_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_5_4 = (Keyword)cGroup_2_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_2_5_5 = (Keyword)cGroup_2_5.eContents().get(5);
		private final Group cGroup_2_6 = (Group)cAlternatives_2.eContents().get(6);
		private final Action cSarlArtifactAnnotationInfoAction_2_6_0 = (Action)cGroup_2_6.eContents().get(0);
		private final Assignment cModifiersAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_6_1_0 = (RuleCall)cModifiersAssignment_2_6_1.eContents().get(0);
		private final Keyword cArtifactKeyword_2_6_2 = (Keyword)cGroup_2_6.eContents().get(2);
		private final Assignment cNameAssignment_2_6_3 = (Assignment)cGroup_2_6.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_6_3_0 = (RuleCall)cNameAssignment_2_6_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_6_4 = (Keyword)cGroup_2_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_2_6_5 = (Keyword)cGroup_2_6.eContents().get(5);
		private final Group cGroup_2_7 = (Group)cAlternatives_2.eContents().get(7);
		private final Action cSarlClassAnnotationInfoAction_2_7_0 = (Action)cGroup_2_7.eContents().get(0);
		private final Assignment cModifiersAssignment_2_7_1 = (Assignment)cGroup_2_7.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_7_1_0 = (RuleCall)cModifiersAssignment_2_7_1.eContents().get(0);
		private final Keyword cClassKeyword_2_7_2 = (Keyword)cGroup_2_7.eContents().get(2);
		private final Assignment cNameAssignment_2_7_3 = (Assignment)cGroup_2_7.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_7_3_0 = (RuleCall)cNameAssignment_2_7_3.eContents().get(0);
		private final Group cGroup_2_7_4 = (Group)cGroup_2_7.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_7_4_0 = (Keyword)cGroup_2_7_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_7_4_1 = (Assignment)cGroup_2_7_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0 = (RuleCall)cTypeParametersAssignment_2_7_4_1.eContents().get(0);
		private final Group cGroup_2_7_4_2 = (Group)cGroup_2_7_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_7_4_2_0 = (Keyword)cGroup_2_7_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_7_4_2_1 = (Assignment)cGroup_2_7_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_7_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_7_4_3 = (Keyword)cGroup_2_7_4.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_2_7_5 = (UnorderedGroup)cGroup_2_7.eContents().get(5);
		private final Group cGroup_2_7_5_0 = (Group)cUnorderedGroup_2_7_5.eContents().get(0);
		private final Keyword cExtendsKeyword_2_7_5_0_0 = (Keyword)cGroup_2_7_5_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_7_5_0_1 = (Assignment)cGroup_2_7_5_0.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_0_1_0 = (RuleCall)cExtendsAssignment_2_7_5_0_1.eContents().get(0);
		private final Group cGroup_2_7_5_1 = (Group)cUnorderedGroup_2_7_5.eContents().get(1);
		private final Keyword cImplementsKeyword_2_7_5_1_0 = (Keyword)cGroup_2_7_5_1.eContents().get(0);
		private final Assignment cImplementsAssignment_2_7_5_1_1 = (Assignment)cGroup_2_7_5_1.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_1_0 = (RuleCall)cImplementsAssignment_2_7_5_1_1.eContents().get(0);
		private final Group cGroup_2_7_5_1_2 = (Group)cGroup_2_7_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_7_5_1_2_0 = (Keyword)cGroup_2_7_5_1_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_7_5_1_2_1 = (Assignment)cGroup_2_7_5_1_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_2_1_0 = (RuleCall)cImplementsAssignment_2_7_5_1_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_7_6 = (Keyword)cGroup_2_7.eContents().get(6);
		private final Assignment cMembersAssignment_2_7_7 = (Assignment)cGroup_2_7.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_7_7_0 = (RuleCall)cMembersAssignment_2_7_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_7_8 = (Keyword)cGroup_2_7.eContents().get(8);
		private final Group cGroup_2_8 = (Group)cAlternatives_2.eContents().get(8);
		private final Action cSarlInterfaceAnnotationInfoAction_2_8_0 = (Action)cGroup_2_8.eContents().get(0);
		private final Assignment cModifiersAssignment_2_8_1 = (Assignment)cGroup_2_8.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_8_1_0 = (RuleCall)cModifiersAssignment_2_8_1.eContents().get(0);
		private final Keyword cInterfaceKeyword_2_8_2 = (Keyword)cGroup_2_8.eContents().get(2);
		private final Assignment cNameAssignment_2_8_3 = (Assignment)cGroup_2_8.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_8_3_0 = (RuleCall)cNameAssignment_2_8_3.eContents().get(0);
		private final Group cGroup_2_8_4 = (Group)cGroup_2_8.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_8_4_0 = (Keyword)cGroup_2_8_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_8_4_1 = (Assignment)cGroup_2_8_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_8_4_1_0 = (RuleCall)cTypeParametersAssignment_2_8_4_1.eContents().get(0);
		private final Group cGroup_2_8_4_2 = (Group)cGroup_2_8_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_8_4_2_0 = (Keyword)cGroup_2_8_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_8_4_2_1 = (Assignment)cGroup_2_8_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_8_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_8_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_8_4_3 = (Keyword)cGroup_2_8_4.eContents().get(3);
		private final Group cGroup_2_8_5 = (Group)cGroup_2_8.eContents().get(5);
		private final Keyword cExtendsKeyword_2_8_5_0 = (Keyword)cGroup_2_8_5.eContents().get(0);
		private final Assignment cExtendsAssignment_2_8_5_1 = (Assignment)cGroup_2_8_5.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_8_5_1_0 = (RuleCall)cExtendsAssignment_2_8_5_1.eContents().get(0);
		private final Group cGroup_2_8_5_2 = (Group)cGroup_2_8_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_8_5_2_0 = (Keyword)cGroup_2_8_5_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_8_5_2_1 = (Assignment)cGroup_2_8_5_2.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_8_5_2_1_0 = (RuleCall)cExtendsAssignment_2_8_5_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_8_6 = (Keyword)cGroup_2_8.eContents().get(6);
		private final Assignment cMembersAssignment_2_8_7 = (Assignment)cGroup_2_8.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_8_7_0 = (RuleCall)cMembersAssignment_2_8_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_8_8 = (Keyword)cGroup_2_8.eContents().get(8);
		private final Group cGroup_2_9 = (Group)cAlternatives_2.eContents().get(9);
		private final Action cSarlEnumerationAnnotationInfoAction_2_9_0 = (Action)cGroup_2_9.eContents().get(0);
		private final Assignment cModifiersAssignment_2_9_1 = (Assignment)cGroup_2_9.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_9_1_0 = (RuleCall)cModifiersAssignment_2_9_1.eContents().get(0);
		private final Keyword cEnumKeyword_2_9_2 = (Keyword)cGroup_2_9.eContents().get(2);
		private final Assignment cNameAssignment_2_9_3 = (Assignment)cGroup_2_9.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_9_3_0 = (RuleCall)cNameAssignment_2_9_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_9_4 = (Keyword)cGroup_2_9.eContents().get(4);
		private final Group cGroup_2_9_5 = (Group)cGroup_2_9.eContents().get(5);
		private final Assignment cMembersAssignment_2_9_5_0 = (Assignment)cGroup_2_9_5.eContents().get(0);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_9_5_0_0 = (RuleCall)cMembersAssignment_2_9_5_0.eContents().get(0);
		private final Group cGroup_2_9_5_1 = (Group)cGroup_2_9_5.eContents().get(1);
		private final Keyword cCommaKeyword_2_9_5_1_0 = (Keyword)cGroup_2_9_5_1.eContents().get(0);
		private final Assignment cMembersAssignment_2_9_5_1_1 = (Assignment)cGroup_2_9_5_1.eContents().get(1);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_9_5_1_1_0 = (RuleCall)cMembersAssignment_2_9_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_9_6 = (Keyword)cGroup_2_9.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_2_9_7 = (Keyword)cGroup_2_9.eContents().get(7);
		private final Group cGroup_2_10 = (Group)cAlternatives_2.eContents().get(10);
		private final Action cSarlAnnotationTypeAnnotationInfoAction_2_10_0 = (Action)cGroup_2_10.eContents().get(0);
		private final Assignment cModifiersAssignment_2_10_1 = (Assignment)cGroup_2_10.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_10_1_0 = (RuleCall)cModifiersAssignment_2_10_1.eContents().get(0);
		private final Keyword cAnnotationKeyword_2_10_2 = (Keyword)cGroup_2_10.eContents().get(2);
		private final Assignment cNameAssignment_2_10_3 = (Assignment)cGroup_2_10.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_10_3_0 = (RuleCall)cNameAssignment_2_10_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_10_4 = (Keyword)cGroup_2_10.eContents().get(4);
		private final Assignment cMembersAssignment_2_10_5 = (Assignment)cGroup_2_10.eContents().get(5);
		private final RuleCall cMembersAnnotationFieldParserRuleCall_2_10_5_0 = (RuleCall)cMembersAssignment_2_10_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_10_6 = (Keyword)cGroup_2_10.eContents().get(6);
		
		//@Override
		//Type returns xtend::XtendTypeDeclaration:
		//    {xtend::XtendTypeDeclaration} annotations+=XAnnotation*
		//    (    // Event
		//        {SarlEvent.annotationInfo = current}
		//        modifiers += CommonModifier*
		//        'event' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?  ('extends' extends=JvmParameterizedTypeReference)?
		//        ('{' members+=EventMember* '}')?
		//    |
		//        // Capacity
		//        {SarlCapacity.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'capacity' name=ValidID
		//        ('extends' extends+=JvmParameterizedTypeReference
		//        ( ',' extends+=JvmParameterizedTypeReference )* )?
		//        '{' members+=CapacityMember* '}'
		//    |
		//        // Agent
		//        {SarlAgent.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'agent' name=ValidID
		//        ('extends' extends=JvmParameterizedTypeReference)?
		//        '{' members+=AOPMember* '}'
		//    |
		//        // Behavior
		//        {SarlBehavior.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'behavior' name=ValidID ('extends' extends=JvmParameterizedTypeReference)?
		//        '{' members+=AOPMember* '}'
		//    |
		//        // Skill
		//        {SarlSkill.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'skill' name=ValidID
		//        (    ('extends' extends=JvmParameterizedTypeReference)?
		//            &
		//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//        )
		//        '{' members+=AOPMember* '}'
		//    |
		//        // Space
		//        {SarlSpace.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'space' name=ValidID '{' '}'
		//    |
		//        // Artifact
		//        {SarlArtifact.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'artifact' name=ValidID '{' '}'
		//    |
		//        // Class
		//        {SarlClass.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        (    ('extends' extends=JvmParameterizedTypeReference)?
		//            &
		//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//        )
		//        '{' members+=Member* '}'
		//    |
		//        // Interface
		//        {SarlInterface.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//        '{' (members+=Member)* '}'
		//    |
		//        // Enum
		//        {SarlEnumeration.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'enum' name=ValidID '{'
		//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//        '}'
		//    |
		//        // AnnotationType
		//        {SarlAnnotationType.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'annotation' name=ValidID
		//        '{' members+=AnnotationField* '}'
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendTypeDeclaration} annotations+=XAnnotation*
		//(    // Event
		//    {SarlEvent.annotationInfo = current}
		//    modifiers += CommonModifier*
		//    'event' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?  ('extends' extends=JvmParameterizedTypeReference)?
		//    ('{' members+=EventMember* '}')?
		//|
		//    // Capacity
		//    {SarlCapacity.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'capacity' name=ValidID
		//    ('extends' extends+=JvmParameterizedTypeReference
		//    ( ',' extends+=JvmParameterizedTypeReference )* )?
		//    '{' members+=CapacityMember* '}'
		//|
		//    // Agent
		//    {SarlAgent.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'agent' name=ValidID
		//    ('extends' extends=JvmParameterizedTypeReference)?
		//    '{' members+=AOPMember* '}'
		//|
		//    // Behavior
		//    {SarlBehavior.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'behavior' name=ValidID ('extends' extends=JvmParameterizedTypeReference)?
		//    '{' members+=AOPMember* '}'
		//|
		//    // Skill
		//    {SarlSkill.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'skill' name=ValidID
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=AOPMember* '}'
		//|
		//    // Space
		//    {SarlSpace.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'space' name=ValidID '{' '}'
		//|
		//    // Artifact
		//    {SarlArtifact.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'artifact' name=ValidID '{' '}'
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' (members+=Member)* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendTypeDeclaration}
		public Action getXtendTypeDeclarationAction_0() { return cXtendTypeDeclarationAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//(    // Event
		//    {SarlEvent.annotationInfo = current}
		//    modifiers += CommonModifier*
		//    'event' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?  ('extends' extends=JvmParameterizedTypeReference)?
		//    ('{' members+=EventMember* '}')?
		//|
		//    // Capacity
		//    {SarlCapacity.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'capacity' name=ValidID
		//    ('extends' extends+=JvmParameterizedTypeReference
		//    ( ',' extends+=JvmParameterizedTypeReference )* )?
		//    '{' members+=CapacityMember* '}'
		//|
		//    // Agent
		//    {SarlAgent.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'agent' name=ValidID
		//    ('extends' extends=JvmParameterizedTypeReference)?
		//    '{' members+=AOPMember* '}'
		//|
		//    // Behavior
		//    {SarlBehavior.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'behavior' name=ValidID ('extends' extends=JvmParameterizedTypeReference)?
		//    '{' members+=AOPMember* '}'
		//|
		//    // Skill
		//    {SarlSkill.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'skill' name=ValidID
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=AOPMember* '}'
		//|
		//    // Space
		//    {SarlSpace.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'space' name=ValidID '{' '}'
		//|
		//    // Artifact
		//    {SarlArtifact.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'artifact' name=ValidID '{' '}'
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' (members+=Member)* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//// Event
		//    {SarlEvent.annotationInfo = current}
		//    modifiers += CommonModifier*
		//    'event' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?  ('extends' extends=JvmParameterizedTypeReference)?
		//    ('{' members+=EventMember* '}')?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//// Event
		//    {SarlEvent.annotationInfo = current}
		public Action getSarlEventAnnotationInfoAction_2_0_0() { return cSarlEventAnnotationInfoAction_2_0_0; }
		
		//modifiers += CommonModifier*
		public Assignment getModifiersAssignment_2_0_1() { return cModifiersAssignment_2_0_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_1_0; }
		
		//'event'
		public Keyword getEventKeyword_2_0_2() { return cEventKeyword_2_0_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_3() { return cNameAssignment_2_0_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_3_0() { return cNameValidIDParserRuleCall_2_0_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_0_4() { return cGroup_2_0_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_0_4_0() { return cLessThanSignKeyword_2_0_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_0_4_1() { return cTypeParametersAssignment_2_0_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_0_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_0_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_0_4_2() { return cGroup_2_0_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_0_4_2_0() { return cCommaKeyword_2_0_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_0_4_2_1() { return cTypeParametersAssignment_2_0_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_0_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_0_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_0_4_3() { return cGreaterThanSignKeyword_2_0_4_3; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_0_5() { return cGroup_2_0_5; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0_5_0() { return cExtendsKeyword_2_0_5_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_0_5_1() { return cExtendsAssignment_2_0_5_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_5_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_5_1_0; }
		
		//('{' members+=EventMember* '}')?
		public Group getGroup_2_0_6() { return cGroup_2_0_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0_6_0() { return cLeftCurlyBracketKeyword_2_0_6_0; }
		
		//members+=EventMember*
		public Assignment getMembersAssignment_2_0_6_1() { return cMembersAssignment_2_0_6_1; }
		
		//EventMember
		public RuleCall getMembersEventMemberParserRuleCall_2_0_6_1_0() { return cMembersEventMemberParserRuleCall_2_0_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_0_6_2() { return cRightCurlyBracketKeyword_2_0_6_2; }
		
		//// Capacity
		//{SarlCapacity.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'capacity' name=ValidID
		//('extends' extends+=JvmParameterizedTypeReference
		//( ',' extends+=JvmParameterizedTypeReference )* )?
		//'{' members+=CapacityMember* '}'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//// Capacity
		//{SarlCapacity.annotationInfo = current}
		public Action getSarlCapacityAnnotationInfoAction_2_1_0() { return cSarlCapacityAnnotationInfoAction_2_1_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_1_1() { return cModifiersAssignment_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_1_1_0; }
		
		//'capacity'
		public Keyword getCapacityKeyword_2_1_2() { return cCapacityKeyword_2_1_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_1_3() { return cNameAssignment_2_1_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_1_3_0() { return cNameValidIDParserRuleCall_2_1_3_0; }
		
		//('extends' extends+=JvmParameterizedTypeReference
		//( ',' extends+=JvmParameterizedTypeReference )* )?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_1_4_0() { return cExtendsKeyword_2_1_4_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_1_4_1() { return cExtendsAssignment_2_1_4_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_1_0; }
		
		//( ',' extends+=JvmParameterizedTypeReference )*
		public Group getGroup_2_1_4_2() { return cGroup_2_1_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_4_2_0() { return cCommaKeyword_2_1_4_2_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_1_4_2_1() { return cExtendsAssignment_2_1_4_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_2_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_4_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_5() { return cLeftCurlyBracketKeyword_2_1_5; }
		
		//members+=CapacityMember*
		public Assignment getMembersAssignment_2_1_6() { return cMembersAssignment_2_1_6; }
		
		//CapacityMember
		public RuleCall getMembersCapacityMemberParserRuleCall_2_1_6_0() { return cMembersCapacityMemberParserRuleCall_2_1_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_7() { return cRightCurlyBracketKeyword_2_1_7; }
		
		//// Agent
		//{SarlAgent.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'agent' name=ValidID
		//('extends' extends=JvmParameterizedTypeReference)?
		//'{' members+=AOPMember* '}'
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//// Agent
		//{SarlAgent.annotationInfo = current}
		public Action getSarlAgentAnnotationInfoAction_2_2_0() { return cSarlAgentAnnotationInfoAction_2_2_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_2_1() { return cModifiersAssignment_2_2_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_2_1_0() { return cModifiersCommonModifierParserRuleCall_2_2_1_0; }
		
		//'agent'
		public Keyword getAgentKeyword_2_2_2() { return cAgentKeyword_2_2_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_2_3() { return cNameAssignment_2_2_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_3_0() { return cNameValidIDParserRuleCall_2_2_3_0; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_2_4() { return cGroup_2_2_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_2_4_0() { return cExtendsKeyword_2_2_4_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_2_4_1() { return cExtendsAssignment_2_2_4_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_4_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_4_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_2_5() { return cLeftCurlyBracketKeyword_2_2_5; }
		
		//members+=AOPMember*
		public Assignment getMembersAssignment_2_2_6() { return cMembersAssignment_2_2_6; }
		
		//AOPMember
		public RuleCall getMembersAOPMemberParserRuleCall_2_2_6_0() { return cMembersAOPMemberParserRuleCall_2_2_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2_7() { return cRightCurlyBracketKeyword_2_2_7; }
		
		//// Behavior
		//{SarlBehavior.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'behavior' name=ValidID ('extends' extends=JvmParameterizedTypeReference)?
		//'{' members+=AOPMember* '}'
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//// Behavior
		//{SarlBehavior.annotationInfo = current}
		public Action getSarlBehaviorAnnotationInfoAction_2_3_0() { return cSarlBehaviorAnnotationInfoAction_2_3_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_3_1() { return cModifiersAssignment_2_3_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_3_1_0() { return cModifiersCommonModifierParserRuleCall_2_3_1_0; }
		
		//'behavior'
		public Keyword getBehaviorKeyword_2_3_2() { return cBehaviorKeyword_2_3_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_3_3() { return cNameAssignment_2_3_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_3_0() { return cNameValidIDParserRuleCall_2_3_3_0; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_3_4() { return cGroup_2_3_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_3_4_0() { return cExtendsKeyword_2_3_4_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_3_4_1() { return cExtendsAssignment_2_3_4_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_4_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_4_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_3_5() { return cLeftCurlyBracketKeyword_2_3_5; }
		
		//members+=AOPMember*
		public Assignment getMembersAssignment_2_3_6() { return cMembersAssignment_2_3_6; }
		
		//AOPMember
		public RuleCall getMembersAOPMemberParserRuleCall_2_3_6_0() { return cMembersAOPMemberParserRuleCall_2_3_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3_7() { return cRightCurlyBracketKeyword_2_3_7; }
		
		//// Skill
		//{SarlSkill.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'skill' name=ValidID
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		//'{' members+=AOPMember* '}'
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//// Skill
		//{SarlSkill.annotationInfo = current}
		public Action getSarlSkillAnnotationInfoAction_2_4_0() { return cSarlSkillAnnotationInfoAction_2_4_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_4_1() { return cModifiersAssignment_2_4_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_4_1_0() { return cModifiersCommonModifierParserRuleCall_2_4_1_0; }
		
		//'skill'
		public Keyword getSkillKeyword_2_4_2() { return cSkillKeyword_2_4_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_4_3() { return cNameAssignment_2_4_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_4_3_0() { return cNameValidIDParserRuleCall_2_4_3_0; }
		
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_4_4() { return cUnorderedGroup_2_4_4; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_4_4_0() { return cGroup_2_4_4_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_4_4_0_0() { return cExtendsKeyword_2_4_4_0_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_4_4_0_1() { return cExtendsAssignment_2_4_4_0_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_0_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_0_1_0; }
		
		//('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_4_4_1() { return cGroup_2_4_4_1; }
		
		//'implements'
		public Keyword getImplementsKeyword_2_4_4_1_0() { return cImplementsKeyword_2_4_4_1_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_4_4_1_1() { return cImplementsAssignment_2_4_4_1_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_1_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_1_1_0; }
		
		//(',' implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_4_4_1_2() { return cGroup_2_4_4_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_4_1_2_0() { return cCommaKeyword_2_4_4_1_2_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_4_4_1_2_1() { return cImplementsAssignment_2_4_4_1_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_1_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_4_4_1_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_4_5() { return cLeftCurlyBracketKeyword_2_4_5; }
		
		//members+=AOPMember*
		public Assignment getMembersAssignment_2_4_6() { return cMembersAssignment_2_4_6; }
		
		//AOPMember
		public RuleCall getMembersAOPMemberParserRuleCall_2_4_6_0() { return cMembersAOPMemberParserRuleCall_2_4_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4_7() { return cRightCurlyBracketKeyword_2_4_7; }
		
		//// Space
		//{SarlSpace.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'space' name=ValidID '{' '}'
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//// Space
		//{SarlSpace.annotationInfo = current}
		public Action getSarlSpaceAnnotationInfoAction_2_5_0() { return cSarlSpaceAnnotationInfoAction_2_5_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_5_1() { return cModifiersAssignment_2_5_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_5_1_0() { return cModifiersCommonModifierParserRuleCall_2_5_1_0; }
		
		//'space'
		public Keyword getSpaceKeyword_2_5_2() { return cSpaceKeyword_2_5_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_5_3() { return cNameAssignment_2_5_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_5_3_0() { return cNameValidIDParserRuleCall_2_5_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_5_4() { return cLeftCurlyBracketKeyword_2_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_5_5() { return cRightCurlyBracketKeyword_2_5_5; }
		
		//// Artifact
		//{SarlArtifact.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'artifact' name=ValidID '{' '}'
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//// Artifact
		//{SarlArtifact.annotationInfo = current}
		public Action getSarlArtifactAnnotationInfoAction_2_6_0() { return cSarlArtifactAnnotationInfoAction_2_6_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_6_1() { return cModifiersAssignment_2_6_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_6_1_0() { return cModifiersCommonModifierParserRuleCall_2_6_1_0; }
		
		//'artifact'
		public Keyword getArtifactKeyword_2_6_2() { return cArtifactKeyword_2_6_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_6_3() { return cNameAssignment_2_6_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_6_3_0() { return cNameValidIDParserRuleCall_2_6_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_6_4() { return cLeftCurlyBracketKeyword_2_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_6_5() { return cRightCurlyBracketKeyword_2_6_5; }
		
		//// Class
		//{SarlClass.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		//'{' members+=Member* '}'
		public Group getGroup_2_7() { return cGroup_2_7; }
		
		//// Class
		//{SarlClass.annotationInfo = current}
		public Action getSarlClassAnnotationInfoAction_2_7_0() { return cSarlClassAnnotationInfoAction_2_7_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_7_1() { return cModifiersAssignment_2_7_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_7_1_0() { return cModifiersCommonModifierParserRuleCall_2_7_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2_7_2() { return cClassKeyword_2_7_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_7_3() { return cNameAssignment_2_7_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_7_3_0() { return cNameValidIDParserRuleCall_2_7_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_7_4() { return cGroup_2_7_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_7_4_0() { return cLessThanSignKeyword_2_7_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_7_4_1() { return cTypeParametersAssignment_2_7_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_7_4_2() { return cGroup_2_7_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_7_4_2_0() { return cCommaKeyword_2_7_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_7_4_2_1() { return cTypeParametersAssignment_2_7_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_7_4_3() { return cGreaterThanSignKeyword_2_7_4_3; }
		
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_7_5() { return cUnorderedGroup_2_7_5; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_7_5_0() { return cGroup_2_7_5_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_7_5_0_0() { return cExtendsKeyword_2_7_5_0_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_7_5_0_1() { return cExtendsAssignment_2_7_5_0_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_0_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_0_1_0; }
		
		//('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_7_5_1() { return cGroup_2_7_5_1; }
		
		//'implements'
		public Keyword getImplementsKeyword_2_7_5_1_0() { return cImplementsKeyword_2_7_5_1_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_7_5_1_1() { return cImplementsAssignment_2_7_5_1_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_1_0; }
		
		//(',' implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_7_5_1_2() { return cGroup_2_7_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_7_5_1_2_0() { return cCommaKeyword_2_7_5_1_2_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_7_5_1_2_1() { return cImplementsAssignment_2_7_5_1_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_7_6() { return cLeftCurlyBracketKeyword_2_7_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_7_7() { return cMembersAssignment_2_7_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_7_7_0() { return cMembersMemberParserRuleCall_2_7_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_7_8() { return cRightCurlyBracketKeyword_2_7_8; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//'{' (members+=Member)* '}'
		public Group getGroup_2_8() { return cGroup_2_8; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current}
		public Action getSarlInterfaceAnnotationInfoAction_2_8_0() { return cSarlInterfaceAnnotationInfoAction_2_8_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_8_1() { return cModifiersAssignment_2_8_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_8_1_0() { return cModifiersCommonModifierParserRuleCall_2_8_1_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_2_8_2() { return cInterfaceKeyword_2_8_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_8_3() { return cNameAssignment_2_8_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_8_3_0() { return cNameValidIDParserRuleCall_2_8_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_8_4() { return cGroup_2_8_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_8_4_0() { return cLessThanSignKeyword_2_8_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_8_4_1() { return cTypeParametersAssignment_2_8_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_8_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_8_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_8_4_2() { return cGroup_2_8_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_8_4_2_0() { return cCommaKeyword_2_8_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_8_4_2_1() { return cTypeParametersAssignment_2_8_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_8_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_8_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_8_4_3() { return cGreaterThanSignKeyword_2_8_4_3; }
		
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_8_5() { return cGroup_2_8_5; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_8_5_0() { return cExtendsKeyword_2_8_5_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_8_5_1() { return cExtendsAssignment_2_8_5_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_8_5_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_8_5_1_0; }
		
		//(',' extends+=JvmParameterizedTypeReference)*
		public Group getGroup_2_8_5_2() { return cGroup_2_8_5_2; }
		
		//','
		public Keyword getCommaKeyword_2_8_5_2_0() { return cCommaKeyword_2_8_5_2_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_8_5_2_1() { return cExtendsAssignment_2_8_5_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_8_5_2_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_8_5_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_8_6() { return cLeftCurlyBracketKeyword_2_8_6; }
		
		//(members+=Member)*
		public Assignment getMembersAssignment_2_8_7() { return cMembersAssignment_2_8_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_8_7_0() { return cMembersMemberParserRuleCall_2_8_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_8_8() { return cRightCurlyBracketKeyword_2_8_8; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'enum' name=ValidID '{'
		//   (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//'}'
		public Group getGroup_2_9() { return cGroup_2_9; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current}
		public Action getSarlEnumerationAnnotationInfoAction_2_9_0() { return cSarlEnumerationAnnotationInfoAction_2_9_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_9_1() { return cModifiersAssignment_2_9_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_9_1_0() { return cModifiersCommonModifierParserRuleCall_2_9_1_0; }
		
		//'enum'
		public Keyword getEnumKeyword_2_9_2() { return cEnumKeyword_2_9_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_9_3() { return cNameAssignment_2_9_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_9_3_0() { return cNameValidIDParserRuleCall_2_9_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_9_4() { return cLeftCurlyBracketKeyword_2_9_4; }
		
		//(members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)?
		public Group getGroup_2_9_5() { return cGroup_2_9_5; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_9_5_0() { return cMembersAssignment_2_9_5_0; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_9_5_0_0() { return cMembersXtendEnumLiteralParserRuleCall_2_9_5_0_0; }
		
		//(',' members+=XtendEnumLiteral)*
		public Group getGroup_2_9_5_1() { return cGroup_2_9_5_1; }
		
		//','
		public Keyword getCommaKeyword_2_9_5_1_0() { return cCommaKeyword_2_9_5_1_0; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_9_5_1_1() { return cMembersAssignment_2_9_5_1_1; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_9_5_1_1_0() { return cMembersXtendEnumLiteralParserRuleCall_2_9_5_1_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_9_6() { return cSemicolonKeyword_2_9_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_9_7() { return cRightCurlyBracketKeyword_2_9_7; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'annotation' name=ValidID
		//'{' members+=AnnotationField* '}'
		public Group getGroup_2_10() { return cGroup_2_10; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current}
		public Action getSarlAnnotationTypeAnnotationInfoAction_2_10_0() { return cSarlAnnotationTypeAnnotationInfoAction_2_10_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_10_1() { return cModifiersAssignment_2_10_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_10_1_0() { return cModifiersCommonModifierParserRuleCall_2_10_1_0; }
		
		//'annotation'
		public Keyword getAnnotationKeyword_2_10_2() { return cAnnotationKeyword_2_10_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_10_3() { return cNameAssignment_2_10_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_10_3_0() { return cNameValidIDParserRuleCall_2_10_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_10_4() { return cLeftCurlyBracketKeyword_2_10_4; }
		
		//members+=AnnotationField*
		public Assignment getMembersAssignment_2_10_5() { return cMembersAssignment_2_10_5; }
		
		//AnnotationField
		public RuleCall getMembersAnnotationFieldParserRuleCall_2_10_5_0() { return cMembersAnnotationFieldParserRuleCall_2_10_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_10_6() { return cRightCurlyBracketKeyword_2_10_6; }
	}
	public class EventMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.EventMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendMemberAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cSarlFieldAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_1_0 = (RuleCall)cModifiersAssignment_2_0_1.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2 = (Alternatives)cGroup_2_0.eContents().get(2);
		private final Group cGroup_2_0_2_0 = (Group)cAlternatives_2_0_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_0_0 = (Assignment)cGroup_2_0_2_0.eContents().get(0);
		private final Keyword cModifiersExtensionKeyword_2_0_2_0_0_0 = (Keyword)cModifiersAssignment_2_0_2_0_0.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2_0_1 = (Alternatives)cGroup_2_0_2_0.eContents().get(1);
		private final Assignment cModifiersAssignment_2_0_2_0_1_0 = (Assignment)cAlternatives_2_0_2_0_1.eContents().get(0);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_0_2_0_1_0_0 = (RuleCall)cModifiersAssignment_2_0_2_0_1_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_0_1_1 = (Assignment)cAlternatives_2_0_2_0_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_2_0_1_1_0 = (RuleCall)cModifiersAssignment_2_0_2_0_1_1.eContents().get(0);
		private final Assignment cNameAssignment_2_0_2_0_2 = (Assignment)cGroup_2_0_2_0.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_0_2_0 = (RuleCall)cNameAssignment_2_0_2_0_2.eContents().get(0);
		private final Keyword cColonKeyword_2_0_2_0_3 = (Keyword)cGroup_2_0_2_0.eContents().get(3);
		private final Assignment cTypeAssignment_2_0_2_0_4 = (Assignment)cGroup_2_0_2_0.eContents().get(4);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_0_4_0 = (RuleCall)cTypeAssignment_2_0_2_0_4.eContents().get(0);
		private final Group cGroup_2_0_2_1 = (Group)cAlternatives_2_0_2.eContents().get(1);
		private final Assignment cModifiersAssignment_2_0_2_1_0 = (Assignment)cGroup_2_0_2_1.eContents().get(0);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_0_2_1_0_0 = (RuleCall)cModifiersAssignment_2_0_2_1_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_1_1 = (Assignment)cGroup_2_0_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_2_1_1_0 = (RuleCall)cModifiersAssignment_2_0_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2_1_2 = (Alternatives)cGroup_2_0_2_1.eContents().get(2);
		private final Group cGroup_2_0_2_1_2_0 = (Group)cAlternatives_2_0_2_1_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_1_2_0_0 = (Assignment)cGroup_2_0_2_1_2_0.eContents().get(0);
		private final Keyword cModifiersExtensionKeyword_2_0_2_1_2_0_0_0 = (Keyword)cModifiersAssignment_2_0_2_1_2_0_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_2_1_2_0_1 = (Assignment)cGroup_2_0_2_1_2_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_1_2_0_1_0 = (RuleCall)cNameAssignment_2_0_2_1_2_0_1.eContents().get(0);
		private final Keyword cColonKeyword_2_0_2_1_2_0_2 = (Keyword)cGroup_2_0_2_1_2_0.eContents().get(2);
		private final Assignment cTypeAssignment_2_0_2_1_2_0_3 = (Assignment)cGroup_2_0_2_1_2_0.eContents().get(3);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0_3_0 = (RuleCall)cTypeAssignment_2_0_2_1_2_0_3.eContents().get(0);
		private final Group cGroup_2_0_2_1_2_1 = (Group)cAlternatives_2_0_2_1_2.eContents().get(1);
		private final Assignment cNameAssignment_2_0_2_1_2_1_0 = (Assignment)cGroup_2_0_2_1_2_1.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_1_2_1_0_0 = (RuleCall)cNameAssignment_2_0_2_1_2_1_0.eContents().get(0);
		private final Group cGroup_2_0_2_1_2_1_1 = (Group)cGroup_2_0_2_1_2_1.eContents().get(1);
		private final Keyword cColonKeyword_2_0_2_1_2_1_1_0 = (Keyword)cGroup_2_0_2_1_2_1_1.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_2_1_2_1_1_1 = (Assignment)cGroup_2_0_2_1_2_1_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_1_1_1_0 = (RuleCall)cTypeAssignment_2_0_2_1_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cEqualsSignKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cInitialValueXExpressionParserRuleCall_2_0_3_1_0 = (RuleCall)cInitialValueAssignment_2_0_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_0_4 = (Keyword)cGroup_2_0.eContents().get(4);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cSarlConstructorAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_1_1_0 = (RuleCall)cModifiersAssignment_2_1_1.eContents().get(0);
		private final Keyword cNewKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Group cGroup_2_1_3 = (Group)cGroup_2_1.eContents().get(3);
		private final Keyword cLessThanSignKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0 = (RuleCall)cTypeParametersAssignment_2_1_3_1.eContents().get(0);
		private final Group cGroup_2_1_3_2 = (Group)cGroup_2_1_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_3_2_0 = (Keyword)cGroup_2_1_3_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_3_2_1 = (Assignment)cGroup_2_1_3_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_1_3_3 = (Keyword)cGroup_2_1_3.eContents().get(3);
		private final Group cGroup_2_1_4 = (Group)cGroup_2_1.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Group cGroup_2_1_4_1 = (Group)cGroup_2_1_4.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_4_1_0 = (Assignment)cGroup_2_1_4_1.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_1_4_1_0_0 = (RuleCall)cParametersAssignment_2_1_4_1_0.eContents().get(0);
		private final Group cGroup_2_1_4_1_1 = (Group)cGroup_2_1_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_4_1_1_0 = (Keyword)cGroup_2_1_4_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_4_1_1_1 = (Assignment)cGroup_2_1_4_1_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_1_4_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_4_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_4_2 = (Keyword)cGroup_2_1_4.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_2_1_5 = (UnorderedGroup)cGroup_2_1.eContents().get(5);
		private final Group cGroup_2_1_5_0 = (Group)cUnorderedGroup_2_1_5.eContents().get(0);
		private final Keyword cThrowsKeyword_2_1_5_0_0 = (Keyword)cGroup_2_1_5_0.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_1_5_0_1 = (Assignment)cGroup_2_1_5_0.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_1_0 = (RuleCall)cExceptionsAssignment_2_1_5_0_1.eContents().get(0);
		private final Group cGroup_2_1_5_0_2 = (Group)cGroup_2_1_5_0.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_0_2_0 = (Keyword)cGroup_2_1_5_0_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_1_5_0_2_1 = (Assignment)cGroup_2_1_5_0_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_2_1_0 = (RuleCall)cExceptionsAssignment_2_1_5_0_2_1.eContents().get(0);
		private final Group cGroup_2_1_5_1 = (Group)cUnorderedGroup_2_1_5.eContents().get(1);
		private final Keyword cWithKeyword_2_1_5_1_0 = (Keyword)cGroup_2_1_5_1.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_5_1_1 = (Assignment)cGroup_2_1_5_1.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_1_0 = (RuleCall)cTypeParametersAssignment_2_1_5_1_1.eContents().get(0);
		private final Group cGroup_2_1_5_1_2 = (Group)cGroup_2_1_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_1_2_0 = (Keyword)cGroup_2_1_5_1_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_5_1_2_1 = (Assignment)cGroup_2_1_5_1_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_5_1_2_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2_1_6 = (Assignment)cGroup_2_1.eContents().get(6);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_1_6_0 = (RuleCall)cExpressionAssignment_2_1_6.eContents().get(0);
		
		//EventMember returns xtend::XtendMember:
		//    {xtend::XtendMember} annotations+=XAnnotation*
		//    (
		//        // Field
		//        {SarlField.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            modifiers+=FieldModifier
		//            modifiers+=CommonModifier*
		//            (
		//                modifiers += 'extension'
		//                name=ValidID ':' type=JvmTypeReference
		//            |
		//                name=ValidID (':' type=JvmTypeReference)?
		//            )
		//        )
		//        ('=' initialValue=XExpression)? ';'?
		//    |
		//        // Constructor
		//        {SarlConstructor.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'new'
		//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('(' (parameters+=Parameter (',' parameters+=Parameter)*)? ')')?
		//        ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//          &
		//          ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//        )
		//        expression=XBlockExpression
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendMember} annotations+=XAnnotation*
		//(
		//    // Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            name=ValidID (':' type=JvmTypeReference)?
		//        )
		//    )
		//    ('=' initialValue=XExpression)? ';'?
		//|
		//    // Constructor
		//    {SarlConstructor.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'new'
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('(' (parameters+=Parameter (',' parameters+=Parameter)*)? ')')?
		//    ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//      &
		//      ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    expression=XBlockExpression
		//)
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendMember}
		public Action getXtendMemberAction_0() { return cXtendMemberAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//(
		//    // Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            name=ValidID (':' type=JvmTypeReference)?
		//        )
		//    )
		//    ('=' initialValue=XExpression)? ';'?
		//|
		//    // Constructor
		//    {SarlConstructor.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'new'
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('(' (parameters+=Parameter (',' parameters+=Parameter)*)? ')')?
		//    ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//      &
		//      ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    expression=XBlockExpression
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//// Field
		//{SarlField.annotationInfo = current}
		//modifiers+=CommonModifier*
		//(
		//    modifiers += 'extension'
		//    (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        name=ValidID (':' type=JvmTypeReference)?
		//    )
		//)
		//('=' initialValue=XExpression)? ';'?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//// Field
		//{SarlField.annotationInfo = current}
		public Action getSarlFieldAnnotationInfoAction_2_0_0() { return cSarlFieldAnnotationInfoAction_2_0_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_0_1() { return cModifiersAssignment_2_0_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_1_0; }
		
		//(
		//    modifiers += 'extension'
		//    (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        name=ValidID (':' type=JvmTypeReference)?
		//    )
		//)
		public Alternatives getAlternatives_2_0_2() { return cAlternatives_2_0_2; }
		
		//modifiers += 'extension'
		//(modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//name=ValidID ':' type=JvmTypeReference
		public Group getGroup_2_0_2_0() { return cGroup_2_0_2_0; }
		
		//modifiers += 'extension'
		public Assignment getModifiersAssignment_2_0_2_0_0() { return cModifiersAssignment_2_0_2_0_0; }
		
		//'extension'
		public Keyword getModifiersExtensionKeyword_2_0_2_0_0_0() { return cModifiersExtensionKeyword_2_0_2_0_0_0; }
		
		//(modifiers+=FieldModifier | modifiers+=CommonModifier)*
		public Alternatives getAlternatives_2_0_2_0_1() { return cAlternatives_2_0_2_0_1; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_0_2_0_1_0() { return cModifiersAssignment_2_0_2_0_1_0; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_0_2_0_1_0_0() { return cModifiersFieldModifierParserRuleCall_2_0_2_0_1_0_0; }
		
		//modifiers+=CommonModifier
		public Assignment getModifiersAssignment_2_0_2_0_1_1() { return cModifiersAssignment_2_0_2_0_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_2_0_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_2_0_1_1_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_2_0_2() { return cNameAssignment_2_0_2_0_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_0_2_0() { return cNameValidIDParserRuleCall_2_0_2_0_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_0_2_0_3() { return cColonKeyword_2_0_2_0_3; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_0_4() { return cTypeAssignment_2_0_2_0_4; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_0_4_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_0_4_0; }
		
		//modifiers+=FieldModifier
		//modifiers+=CommonModifier*
		//(
		//    modifiers += 'extension'
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    name=ValidID (':' type=JvmTypeReference)?
		//)
		public Group getGroup_2_0_2_1() { return cGroup_2_0_2_1; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_0_2_1_0() { return cModifiersAssignment_2_0_2_1_0; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_0_2_1_0_0() { return cModifiersFieldModifierParserRuleCall_2_0_2_1_0_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_0_2_1_1() { return cModifiersAssignment_2_0_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_2_1_1_0; }
		
		//(
		//    modifiers += 'extension'
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    name=ValidID (':' type=JvmTypeReference)?
		//)
		public Alternatives getAlternatives_2_0_2_1_2() { return cAlternatives_2_0_2_1_2; }
		
		//modifiers += 'extension'
		//name=ValidID ':' type=JvmTypeReference
		public Group getGroup_2_0_2_1_2_0() { return cGroup_2_0_2_1_2_0; }
		
		//modifiers += 'extension'
		public Assignment getModifiersAssignment_2_0_2_1_2_0_0() { return cModifiersAssignment_2_0_2_1_2_0_0; }
		
		//'extension'
		public Keyword getModifiersExtensionKeyword_2_0_2_1_2_0_0_0() { return cModifiersExtensionKeyword_2_0_2_1_2_0_0_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_2_1_2_0_1() { return cNameAssignment_2_0_2_1_2_0_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_1_2_0_1_0() { return cNameValidIDParserRuleCall_2_0_2_1_2_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_2_0_2_1_2_0_2() { return cColonKeyword_2_0_2_1_2_0_2; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_1_2_0_3() { return cTypeAssignment_2_0_2_1_2_0_3; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0_3_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0_3_0; }
		
		//name=ValidID (':' type=JvmTypeReference)?
		public Group getGroup_2_0_2_1_2_1() { return cGroup_2_0_2_1_2_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_2_1_2_1_0() { return cNameAssignment_2_0_2_1_2_1_0; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_1_2_1_0_0() { return cNameValidIDParserRuleCall_2_0_2_1_2_1_0_0; }
		
		//(':' type=JvmTypeReference)?
		public Group getGroup_2_0_2_1_2_1_1() { return cGroup_2_0_2_1_2_1_1; }
		
		//':'
		public Keyword getColonKeyword_2_0_2_1_2_1_1_0() { return cColonKeyword_2_0_2_1_2_1_1_0; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_1_2_1_1_1() { return cTypeAssignment_2_0_2_1_2_1_1_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_1_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_1_1_1_0; }
		
		//('=' initialValue=XExpression)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_3_0() { return cEqualsSignKeyword_2_0_3_0; }
		
		//initialValue=XExpression
		public Assignment getInitialValueAssignment_2_0_3_1() { return cInitialValueAssignment_2_0_3_1; }
		
		//XExpression
		public RuleCall getInitialValueXExpressionParserRuleCall_2_0_3_1_0() { return cInitialValueXExpressionParserRuleCall_2_0_3_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_0_4() { return cSemicolonKeyword_2_0_4; }
		
		//// Constructor
		//{SarlConstructor.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'new'
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('(' (parameters+=Parameter (',' parameters+=Parameter)*)? ')')?
		//( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//  &
		//  ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		//expression=XBlockExpression
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//// Constructor
		//{SarlConstructor.annotationInfo = current}
		public Action getSarlConstructorAnnotationInfoAction_2_1_0() { return cSarlConstructorAnnotationInfoAction_2_1_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_1_1() { return cModifiersAssignment_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_1_1_0; }
		
		//'new'
		public Keyword getNewKeyword_2_1_2() { return cNewKeyword_2_1_2; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_1_3_0() { return cLessThanSignKeyword_2_1_3_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_3_1() { return cTypeParametersAssignment_2_1_3_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_3_2() { return cGroup_2_1_3_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_3_2_0() { return cCommaKeyword_2_1_3_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_3_2_1() { return cTypeParametersAssignment_2_1_3_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_3_3() { return cGreaterThanSignKeyword_2_1_3_3; }
		
		//('(' (parameters+=Parameter (',' parameters+=Parameter)*)? ')')?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1_4_0() { return cLeftParenthesisKeyword_2_1_4_0; }
		
		//(parameters+=Parameter (',' parameters+=Parameter)*)?
		public Group getGroup_2_1_4_1() { return cGroup_2_1_4_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_1_4_1_0() { return cParametersAssignment_2_1_4_1_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_4_1_0_0() { return cParametersParameterParserRuleCall_2_1_4_1_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_2_1_4_1_1() { return cGroup_2_1_4_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_4_1_1_0() { return cCommaKeyword_2_1_4_1_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_1_4_1_1_1() { return cParametersAssignment_2_1_4_1_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_4_1_1_1_0() { return cParametersParameterParserRuleCall_2_1_4_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_1_4_2() { return cRightParenthesisKeyword_2_1_4_2; }
		
		//( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//  &
		//  ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_1_5() { return cUnorderedGroup_2_1_5; }
		
		//('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_1_5_0() { return cGroup_2_1_5_0; }
		
		//'throws'
		public Keyword getThrowsKeyword_2_1_5_0_0() { return cThrowsKeyword_2_1_5_0_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_1_5_0_1() { return cExceptionsAssignment_2_1_5_0_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_1_0; }
		
		//(',' exceptions+=JvmTypeReference)*
		public Group getGroup_2_1_5_0_2() { return cGroup_2_1_5_0_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_5_0_2_0() { return cCommaKeyword_2_1_5_0_2_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_1_5_0_2_1() { return cExceptionsAssignment_2_1_5_0_2_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_2_1_0; }
		
		//('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		public Group getGroup_2_1_5_1() { return cGroup_2_1_5_1; }
		
		//'with'
		public Keyword getWithKeyword_2_1_5_1_0() { return cWithKeyword_2_1_5_1_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_5_1_1() { return cTypeParametersAssignment_2_1_5_1_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_5_1_2() { return cGroup_2_1_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_5_1_2_0() { return cCommaKeyword_2_1_5_1_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_5_1_2_1() { return cTypeParametersAssignment_2_1_5_1_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_2_1_0; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_1_6() { return cExpressionAssignment_2_1_6; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_1_6_0() { return cExpressionXBlockExpressionParserRuleCall_2_1_6_0; }
	}
	public class CapacityMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.CapacityMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendMemberAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Action cSarlActionAnnotationInfoAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cModifiersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModifiersCommonModifierParserRuleCall_3_0 = (RuleCall)cModifiersAssignment_3.eContents().get(0);
		private final Assignment cModifiersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModifiersMethodModifierParserRuleCall_4_0 = (RuleCall)cModifiersAssignment_4.eContents().get(0);
		private final Assignment cModifiersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModifiersCommonModifierParserRuleCall_5_0 = (RuleCall)cModifiersAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLessThanSignKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTypeParametersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_6_1_0 = (RuleCall)cTypeParametersAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_6_2_1_0 = (RuleCall)cTypeParametersAssignment_6_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameFunctionIDParserRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final Assignment cParametersAssignment_8_1_0 = (Assignment)cGroup_8_1.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_8_1_0_0 = (RuleCall)cParametersAssignment_8_1_0.eContents().get(0);
		private final Group cGroup_8_1_1 = (Group)cGroup_8_1.eContents().get(1);
		private final Keyword cCommaKeyword_8_1_1_0 = (Keyword)cGroup_8_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_8_1_1_1 = (Assignment)cGroup_8_1_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_8_1_1_1_0 = (RuleCall)cParametersAssignment_8_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Alternatives cAlternatives_9_1 = (Alternatives)cGroup_9.eContents().get(1);
		private final Assignment cReturnTypeAssignment_9_1_0 = (Assignment)cAlternatives_9_1.eContents().get(0);
		private final RuleCall cReturnTypeTypeReferenceWithTypeArgsParserRuleCall_9_1_0_0 = (RuleCall)cReturnTypeAssignment_9_1_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_9_1_1 = (Assignment)cAlternatives_9_1.eContents().get(1);
		private final RuleCall cReturnTypeTypeReferenceNoTypeArgsParserRuleCall_9_1_1_0 = (RuleCall)cReturnTypeAssignment_9_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_10 = (UnorderedGroup)cGroup.eContents().get(10);
		private final Group cGroup_10_0 = (Group)cUnorderedGroup_10.eContents().get(0);
		private final Keyword cThrowsKeyword_10_0_0 = (Keyword)cGroup_10_0.eContents().get(0);
		private final Assignment cExceptionsAssignment_10_0_1 = (Assignment)cGroup_10_0.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_10_0_1_0 = (RuleCall)cExceptionsAssignment_10_0_1.eContents().get(0);
		private final Group cGroup_10_0_2 = (Group)cGroup_10_0.eContents().get(2);
		private final Keyword cCommaKeyword_10_0_2_0 = (Keyword)cGroup_10_0_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_10_0_2_1 = (Assignment)cGroup_10_0_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_10_0_2_1_0 = (RuleCall)cExceptionsAssignment_10_0_2_1.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cUnorderedGroup_10.eContents().get(1);
		private final Keyword cFiresKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFiredEventsAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFiredEventsJvmTypeReferenceParserRuleCall_10_1_1_0 = (RuleCall)cFiredEventsAssignment_10_1_1.eContents().get(0);
		private final Group cGroup_10_1_2 = (Group)cGroup_10_1.eContents().get(2);
		private final Keyword cCommaKeyword_10_1_2_0 = (Keyword)cGroup_10_1_2.eContents().get(0);
		private final Assignment cFiredEventsAssignment_10_1_2_1 = (Assignment)cGroup_10_1_2.eContents().get(1);
		private final RuleCall cFiredEventsJvmTypeReferenceParserRuleCall_10_1_2_1_0 = (RuleCall)cFiredEventsAssignment_10_1_2_1.eContents().get(0);
		private final Group cGroup_10_2 = (Group)cUnorderedGroup_10.eContents().get(2);
		private final Keyword cWithKeyword_10_2_0 = (Keyword)cGroup_10_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_10_2_1 = (Assignment)cGroup_10_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_10_2_1_0 = (RuleCall)cTypeParametersAssignment_10_2_1.eContents().get(0);
		private final Group cGroup_10_2_2 = (Group)cGroup_10_2.eContents().get(2);
		private final Keyword cCommaKeyword_10_2_2_0 = (Keyword)cGroup_10_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_10_2_2_1 = (Assignment)cGroup_10_2_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_10_2_2_1_0 = (RuleCall)cTypeParametersAssignment_10_2_2_1.eContents().get(0);
		private final Alternatives cAlternatives_11 = (Alternatives)cGroup.eContents().get(11);
		private final Assignment cExpressionAssignment_11_0 = (Assignment)cAlternatives_11.eContents().get(0);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_11_0_0 = (RuleCall)cExpressionAssignment_11_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_11_1 = (Keyword)cAlternatives_11.eContents().get(1);
		
		//CapacityMember returns xtend::XtendMember:
		//    {xtend::XtendMember} annotations+=XAnnotation*
		//    {SarlAction.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    modifiers+=MethodModifier
		//    modifiers+=CommonModifier*
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    name=FunctionID
		//    ( '(' (parameters+=Parameter (',' parameters+=Parameter)* )? ')' )?
		//    ( ':'
		//      (    (returnType=TypeReferenceWithTypeArgs)
		//          | (returnType=TypeReferenceNoTypeArgs) )
		//    )?
		//    (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//        &
		//        ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//        &
		//        ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    (expression=XBlockExpression | ';')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendMember} annotations+=XAnnotation*
		//{SarlAction.annotationInfo = current}
		//modifiers+=CommonModifier*
		//modifiers+=MethodModifier
		//modifiers+=CommonModifier*
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//name=FunctionID
		//( '(' (parameters+=Parameter (',' parameters+=Parameter)* )? ')' )?
		//( ':'
		//  (    (returnType=TypeReferenceWithTypeArgs)
		//      | (returnType=TypeReferenceNoTypeArgs) )
		//)?
		//(    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//    &
		//    ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//    &
		//    ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		//(expression=XBlockExpression | ';')?
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendMember}
		public Action getXtendMemberAction_0() { return cXtendMemberAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//{SarlAction.annotationInfo = current}
		public Action getSarlActionAnnotationInfoAction_2() { return cSarlActionAnnotationInfoAction_2; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_3() { return cModifiersAssignment_3; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_3_0() { return cModifiersCommonModifierParserRuleCall_3_0; }
		
		//modifiers+=MethodModifier
		public Assignment getModifiersAssignment_4() { return cModifiersAssignment_4; }
		
		//MethodModifier
		public RuleCall getModifiersMethodModifierParserRuleCall_4_0() { return cModifiersMethodModifierParserRuleCall_4_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_5() { return cModifiersAssignment_5; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_5_0() { return cModifiersCommonModifierParserRuleCall_5_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'<'
		public Keyword getLessThanSignKeyword_6_0() { return cLessThanSignKeyword_6_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_6_1() { return cTypeParametersAssignment_6_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_6_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_6_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_6_2_1() { return cTypeParametersAssignment_6_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_6_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_6_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_6_3() { return cGreaterThanSignKeyword_6_3; }
		
		//name=FunctionID
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//FunctionID
		public RuleCall getNameFunctionIDParserRuleCall_7_0() { return cNameFunctionIDParserRuleCall_7_0; }
		
		//( '(' (parameters+=Parameter (',' parameters+=Parameter)* )? ')' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//(parameters+=Parameter (',' parameters+=Parameter)* )?
		public Group getGroup_8_1() { return cGroup_8_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_1_0() { return cParametersAssignment_8_1_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_1_0_0() { return cParametersParameterParserRuleCall_8_1_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_8_1_1() { return cGroup_8_1_1; }
		
		//','
		public Keyword getCommaKeyword_8_1_1_0() { return cCommaKeyword_8_1_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_8_1_1_1() { return cParametersAssignment_8_1_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_1_1_1_0() { return cParametersParameterParserRuleCall_8_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_2() { return cRightParenthesisKeyword_8_2; }
		
		//( ':'
		//  (    (returnType=TypeReferenceWithTypeArgs)
		//      | (returnType=TypeReferenceNoTypeArgs) )
		//)?
		public Group getGroup_9() { return cGroup_9; }
		
		//':'
		public Keyword getColonKeyword_9_0() { return cColonKeyword_9_0; }
		
		//(    (returnType=TypeReferenceWithTypeArgs)
		//    | (returnType=TypeReferenceNoTypeArgs) )
		public Alternatives getAlternatives_9_1() { return cAlternatives_9_1; }
		
		//(returnType=TypeReferenceWithTypeArgs)
		public Assignment getReturnTypeAssignment_9_1_0() { return cReturnTypeAssignment_9_1_0; }
		
		//TypeReferenceWithTypeArgs
		public RuleCall getReturnTypeTypeReferenceWithTypeArgsParserRuleCall_9_1_0_0() { return cReturnTypeTypeReferenceWithTypeArgsParserRuleCall_9_1_0_0; }
		
		//(returnType=TypeReferenceNoTypeArgs)
		public Assignment getReturnTypeAssignment_9_1_1() { return cReturnTypeAssignment_9_1_1; }
		
		//TypeReferenceNoTypeArgs
		public RuleCall getReturnTypeTypeReferenceNoTypeArgsParserRuleCall_9_1_1_0() { return cReturnTypeTypeReferenceNoTypeArgsParserRuleCall_9_1_1_0; }
		
		//(    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//    &
		//    ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//    &
		//    ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		public UnorderedGroup getUnorderedGroup_10() { return cUnorderedGroup_10; }
		
		//('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		public Group getGroup_10_0() { return cGroup_10_0; }
		
		//'throws'
		public Keyword getThrowsKeyword_10_0_0() { return cThrowsKeyword_10_0_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_10_0_1() { return cExceptionsAssignment_10_0_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_10_0_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_10_0_1_0; }
		
		//(',' exceptions+=JvmTypeReference)*
		public Group getGroup_10_0_2() { return cGroup_10_0_2; }
		
		//','
		public Keyword getCommaKeyword_10_0_2_0() { return cCommaKeyword_10_0_2_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_10_0_2_1() { return cExceptionsAssignment_10_0_2_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_10_0_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_10_0_2_1_0; }
		
		//('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//'fires'
		public Keyword getFiresKeyword_10_1_0() { return cFiresKeyword_10_1_0; }
		
		//firedEvents+=JvmTypeReference
		public Assignment getFiredEventsAssignment_10_1_1() { return cFiredEventsAssignment_10_1_1; }
		
		//JvmTypeReference
		public RuleCall getFiredEventsJvmTypeReferenceParserRuleCall_10_1_1_0() { return cFiredEventsJvmTypeReferenceParserRuleCall_10_1_1_0; }
		
		//(',' firedEvents+=JvmTypeReference)*
		public Group getGroup_10_1_2() { return cGroup_10_1_2; }
		
		//','
		public Keyword getCommaKeyword_10_1_2_0() { return cCommaKeyword_10_1_2_0; }
		
		//firedEvents+=JvmTypeReference
		public Assignment getFiredEventsAssignment_10_1_2_1() { return cFiredEventsAssignment_10_1_2_1; }
		
		//JvmTypeReference
		public RuleCall getFiredEventsJvmTypeReferenceParserRuleCall_10_1_2_1_0() { return cFiredEventsJvmTypeReferenceParserRuleCall_10_1_2_1_0; }
		
		//('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		public Group getGroup_10_2() { return cGroup_10_2; }
		
		//'with'
		public Keyword getWithKeyword_10_2_0() { return cWithKeyword_10_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_10_2_1() { return cTypeParametersAssignment_10_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_10_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_10_2_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_10_2_2() { return cGroup_10_2_2; }
		
		//','
		public Keyword getCommaKeyword_10_2_2_0() { return cCommaKeyword_10_2_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_10_2_2_1() { return cTypeParametersAssignment_10_2_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_10_2_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_10_2_2_1_0; }
		
		//(expression=XBlockExpression | ';')?
		public Alternatives getAlternatives_11() { return cAlternatives_11; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_11_0() { return cExpressionAssignment_11_0; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_11_0_0() { return cExpressionXBlockExpressionParserRuleCall_11_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_11_1() { return cSemicolonKeyword_11_1; }
	}
	public class AOPMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.AOPMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendMemberAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cSarlBehaviorUnitAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Keyword cOnKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cNameAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cNameJvmParameterizedTypeReferenceParserRuleCall_2_0_2_0 = (RuleCall)cNameAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cGuardAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cGuardXExpressionParserRuleCall_2_0_3_1_0 = (RuleCall)cGuardAssignment_2_0_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_0_3_2 = (Keyword)cGroup_2_0_3.eContents().get(2);
		private final Assignment cExpressionAssignment_2_0_4 = (Assignment)cGroup_2_0.eContents().get(4);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_0_4_0 = (RuleCall)cExpressionAssignment_2_0_4.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cSarlCapacityUsesAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Keyword cUsesKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cCapacitiesAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_1_2_0 = (RuleCall)cCapacitiesAssignment_2_1_2.eContents().get(0);
		private final Group cGroup_2_1_3 = (Group)cGroup_2_1.eContents().get(3);
		private final Keyword cCommaKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cCapacitiesAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_1_3_1_0 = (RuleCall)cCapacitiesAssignment_2_1_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_1_4 = (Keyword)cGroup_2_1.eContents().get(4);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Action cSarlRequiredCapacityAnnotationInfoAction_2_2_0 = (Action)cGroup_2_2.eContents().get(0);
		private final Keyword cRequiresKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cCapacitiesAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_2_2_0 = (RuleCall)cCapacitiesAssignment_2_2_2.eContents().get(0);
		private final Group cGroup_2_2_3 = (Group)cGroup_2_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_2_3_0 = (Keyword)cGroup_2_2_3.eContents().get(0);
		private final Assignment cCapacitiesAssignment_2_2_3_1 = (Assignment)cGroup_2_2_3.eContents().get(1);
		private final RuleCall cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_2_3_1_0 = (RuleCall)cCapacitiesAssignment_2_2_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_2_4 = (Keyword)cGroup_2_2.eContents().get(4);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Action cSarlFieldAnnotationInfoAction_2_3_0 = (Action)cGroup_2_3.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_3_1_0 = (RuleCall)cModifiersAssignment_2_3_1.eContents().get(0);
		private final Alternatives cAlternatives_2_3_2 = (Alternatives)cGroup_2_3.eContents().get(2);
		private final Group cGroup_2_3_2_0 = (Group)cAlternatives_2_3_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_2_0_0 = (Assignment)cGroup_2_3_2_0.eContents().get(0);
		private final Keyword cModifiersExtensionKeyword_2_3_2_0_0_0 = (Keyword)cModifiersAssignment_2_3_2_0_0.eContents().get(0);
		private final Alternatives cAlternatives_2_3_2_0_1 = (Alternatives)cGroup_2_3_2_0.eContents().get(1);
		private final Assignment cModifiersAssignment_2_3_2_0_1_0 = (Assignment)cAlternatives_2_3_2_0_1.eContents().get(0);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_3_2_0_1_0_0 = (RuleCall)cModifiersAssignment_2_3_2_0_1_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_2_0_1_1 = (Assignment)cAlternatives_2_3_2_0_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_3_2_0_1_1_0 = (RuleCall)cModifiersAssignment_2_3_2_0_1_1.eContents().get(0);
		private final Assignment cNameAssignment_2_3_2_0_2 = (Assignment)cGroup_2_3_2_0.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_3_2_0_2_0 = (RuleCall)cNameAssignment_2_3_2_0_2.eContents().get(0);
		private final Keyword cColonKeyword_2_3_2_0_3 = (Keyword)cGroup_2_3_2_0.eContents().get(3);
		private final Assignment cTypeAssignment_2_3_2_0_4 = (Assignment)cGroup_2_3_2_0.eContents().get(4);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_3_2_0_4_0 = (RuleCall)cTypeAssignment_2_3_2_0_4.eContents().get(0);
		private final Group cGroup_2_3_2_1 = (Group)cAlternatives_2_3_2.eContents().get(1);
		private final Assignment cModifiersAssignment_2_3_2_1_0 = (Assignment)cGroup_2_3_2_1.eContents().get(0);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_3_2_1_0_0 = (RuleCall)cModifiersAssignment_2_3_2_1_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_2_1_1 = (Assignment)cGroup_2_3_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_3_2_1_1_0 = (RuleCall)cModifiersAssignment_2_3_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2_3_2_1_2 = (Alternatives)cGroup_2_3_2_1.eContents().get(2);
		private final Group cGroup_2_3_2_1_2_0 = (Group)cAlternatives_2_3_2_1_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_2_1_2_0_0 = (Assignment)cGroup_2_3_2_1_2_0.eContents().get(0);
		private final Keyword cModifiersExtensionKeyword_2_3_2_1_2_0_0_0 = (Keyword)cModifiersAssignment_2_3_2_1_2_0_0.eContents().get(0);
		private final Assignment cNameAssignment_2_3_2_1_2_0_1 = (Assignment)cGroup_2_3_2_1_2_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_2_3_2_1_2_0_1_0 = (RuleCall)cNameAssignment_2_3_2_1_2_0_1.eContents().get(0);
		private final Keyword cColonKeyword_2_3_2_1_2_0_2 = (Keyword)cGroup_2_3_2_1_2_0.eContents().get(2);
		private final Assignment cTypeAssignment_2_3_2_1_2_0_3 = (Assignment)cGroup_2_3_2_1_2_0.eContents().get(3);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_3_2_1_2_0_3_0 = (RuleCall)cTypeAssignment_2_3_2_1_2_0_3.eContents().get(0);
		private final Group cGroup_2_3_2_1_2_1 = (Group)cAlternatives_2_3_2_1_2.eContents().get(1);
		private final Assignment cNameAssignment_2_3_2_1_2_1_0 = (Assignment)cGroup_2_3_2_1_2_1.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_2_3_2_1_2_1_0_0 = (RuleCall)cNameAssignment_2_3_2_1_2_1_0.eContents().get(0);
		private final Group cGroup_2_3_2_1_2_1_1 = (Group)cGroup_2_3_2_1_2_1.eContents().get(1);
		private final Keyword cColonKeyword_2_3_2_1_2_1_1_0 = (Keyword)cGroup_2_3_2_1_2_1_1.eContents().get(0);
		private final Assignment cTypeAssignment_2_3_2_1_2_1_1_1 = (Assignment)cGroup_2_3_2_1_2_1_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_3_2_1_2_1_1_1_0 = (RuleCall)cTypeAssignment_2_3_2_1_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_3_3 = (Group)cGroup_2_3.eContents().get(3);
		private final Keyword cEqualsSignKeyword_2_3_3_0 = (Keyword)cGroup_2_3_3.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_3_3_1 = (Assignment)cGroup_2_3_3.eContents().get(1);
		private final RuleCall cInitialValueXExpressionParserRuleCall_2_3_3_1_0 = (RuleCall)cInitialValueAssignment_2_3_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3_4 = (Keyword)cGroup_2_3.eContents().get(4);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Action cSarlConstructorAnnotationInfoAction_2_4_0 = (Action)cGroup_2_4.eContents().get(0);
		private final Assignment cModifiersAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_4_1_0 = (RuleCall)cModifiersAssignment_2_4_1.eContents().get(0);
		private final Keyword cNewKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Group cGroup_2_4_3 = (Group)cGroup_2_4.eContents().get(3);
		private final Keyword cLessThanSignKeyword_2_4_3_0 = (Keyword)cGroup_2_4_3.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_4_3_1 = (Assignment)cGroup_2_4_3.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_4_3_1_0 = (RuleCall)cTypeParametersAssignment_2_4_3_1.eContents().get(0);
		private final Group cGroup_2_4_3_2 = (Group)cGroup_2_4_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_3_2_0 = (Keyword)cGroup_2_4_3_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_4_3_2_1 = (Assignment)cGroup_2_4_3_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_4_3_2_1_0 = (RuleCall)cTypeParametersAssignment_2_4_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_4_3_3 = (Keyword)cGroup_2_4_3.eContents().get(3);
		private final Group cGroup_2_4_4 = (Group)cGroup_2_4.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_2_4_4_0 = (Keyword)cGroup_2_4_4.eContents().get(0);
		private final Group cGroup_2_4_4_1 = (Group)cGroup_2_4_4.eContents().get(1);
		private final Assignment cParametersAssignment_2_4_4_1_0 = (Assignment)cGroup_2_4_4_1.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_4_4_1_0_0 = (RuleCall)cParametersAssignment_2_4_4_1_0.eContents().get(0);
		private final Group cGroup_2_4_4_1_1 = (Group)cGroup_2_4_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_4_4_1_1_0 = (Keyword)cGroup_2_4_4_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_4_4_1_1_1 = (Assignment)cGroup_2_4_4_1_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_4_4_1_1_1_0 = (RuleCall)cParametersAssignment_2_4_4_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_4_4_2 = (Keyword)cGroup_2_4_4.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_2_4_5 = (UnorderedGroup)cGroup_2_4.eContents().get(5);
		private final Group cGroup_2_4_5_0 = (Group)cUnorderedGroup_2_4_5.eContents().get(0);
		private final Keyword cThrowsKeyword_2_4_5_0_0 = (Keyword)cGroup_2_4_5_0.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_4_5_0_1 = (Assignment)cGroup_2_4_5_0.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_4_5_0_1_0 = (RuleCall)cExceptionsAssignment_2_4_5_0_1.eContents().get(0);
		private final Group cGroup_2_4_5_0_2 = (Group)cGroup_2_4_5_0.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_5_0_2_0 = (Keyword)cGroup_2_4_5_0_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_4_5_0_2_1 = (Assignment)cGroup_2_4_5_0_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_4_5_0_2_1_0 = (RuleCall)cExceptionsAssignment_2_4_5_0_2_1.eContents().get(0);
		private final Group cGroup_2_4_5_1 = (Group)cUnorderedGroup_2_4_5.eContents().get(1);
		private final Keyword cWithKeyword_2_4_5_1_0 = (Keyword)cGroup_2_4_5_1.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_4_5_1_1 = (Assignment)cGroup_2_4_5_1.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_4_5_1_1_0 = (RuleCall)cTypeParametersAssignment_2_4_5_1_1.eContents().get(0);
		private final Group cGroup_2_4_5_1_2 = (Group)cGroup_2_4_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_5_1_2_0 = (Keyword)cGroup_2_4_5_1_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_4_5_1_2_1 = (Assignment)cGroup_2_4_5_1_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_4_5_1_2_1_0 = (RuleCall)cTypeParametersAssignment_2_4_5_1_2_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2_4_6 = (Assignment)cGroup_2_4.eContents().get(6);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_4_6_0 = (RuleCall)cExpressionAssignment_2_4_6.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cAlternatives_2.eContents().get(5);
		private final Action cSarlActionAnnotationInfoAction_2_5_0 = (Action)cGroup_2_5.eContents().get(0);
		private final Assignment cModifiersAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_5_1_0 = (RuleCall)cModifiersAssignment_2_5_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_5_2 = (Assignment)cGroup_2_5.eContents().get(2);
		private final RuleCall cModifiersMethodModifierParserRuleCall_2_5_2_0 = (RuleCall)cModifiersAssignment_2_5_2.eContents().get(0);
		private final Alternatives cAlternatives_2_5_3 = (Alternatives)cGroup_2_5.eContents().get(3);
		private final Assignment cModifiersAssignment_2_5_3_0 = (Assignment)cAlternatives_2_5_3.eContents().get(0);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_5_3_0_0 = (RuleCall)cModifiersAssignment_2_5_3_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_5_3_1 = (Assignment)cAlternatives_2_5_3.eContents().get(1);
		private final RuleCall cModifiersMethodModifierParserRuleCall_2_5_3_1_0 = (RuleCall)cModifiersAssignment_2_5_3_1.eContents().get(0);
		private final Group cGroup_2_5_4 = (Group)cGroup_2_5.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_5_4_0 = (Keyword)cGroup_2_5_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_5_4_1 = (Assignment)cGroup_2_5_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_5_4_1_0 = (RuleCall)cTypeParametersAssignment_2_5_4_1.eContents().get(0);
		private final Group cGroup_2_5_4_2 = (Group)cGroup_2_5_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_5_4_2_0 = (Keyword)cGroup_2_5_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_5_4_2_1 = (Assignment)cGroup_2_5_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_5_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_5_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_5_4_3 = (Keyword)cGroup_2_5_4.eContents().get(3);
		private final Assignment cNameAssignment_2_5_5 = (Assignment)cGroup_2_5.eContents().get(5);
		private final RuleCall cNameFunctionIDParserRuleCall_2_5_5_0 = (RuleCall)cNameAssignment_2_5_5.eContents().get(0);
		private final Group cGroup_2_5_6 = (Group)cGroup_2_5.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_2_5_6_0 = (Keyword)cGroup_2_5_6.eContents().get(0);
		private final Group cGroup_2_5_6_1 = (Group)cGroup_2_5_6.eContents().get(1);
		private final Assignment cParametersAssignment_2_5_6_1_0 = (Assignment)cGroup_2_5_6_1.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_5_6_1_0_0 = (RuleCall)cParametersAssignment_2_5_6_1_0.eContents().get(0);
		private final Group cGroup_2_5_6_1_1 = (Group)cGroup_2_5_6_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_5_6_1_1_0 = (Keyword)cGroup_2_5_6_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_5_6_1_1_1 = (Assignment)cGroup_2_5_6_1_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_5_6_1_1_1_0 = (RuleCall)cParametersAssignment_2_5_6_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_5_6_2 = (Keyword)cGroup_2_5_6.eContents().get(2);
		private final Group cGroup_2_5_7 = (Group)cGroup_2_5.eContents().get(7);
		private final Keyword cColonKeyword_2_5_7_0 = (Keyword)cGroup_2_5_7.eContents().get(0);
		private final Alternatives cAlternatives_2_5_7_1 = (Alternatives)cGroup_2_5_7.eContents().get(1);
		private final Assignment cReturnTypeAssignment_2_5_7_1_0 = (Assignment)cAlternatives_2_5_7_1.eContents().get(0);
		private final RuleCall cReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_5_7_1_0_0 = (RuleCall)cReturnTypeAssignment_2_5_7_1_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_2_5_7_1_1 = (Assignment)cAlternatives_2_5_7_1.eContents().get(1);
		private final RuleCall cReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_5_7_1_1_0 = (RuleCall)cReturnTypeAssignment_2_5_7_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_5_8 = (UnorderedGroup)cGroup_2_5.eContents().get(8);
		private final Group cGroup_2_5_8_0 = (Group)cUnorderedGroup_2_5_8.eContents().get(0);
		private final Keyword cThrowsKeyword_2_5_8_0_0 = (Keyword)cGroup_2_5_8_0.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_5_8_0_1 = (Assignment)cGroup_2_5_8_0.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_5_8_0_1_0 = (RuleCall)cExceptionsAssignment_2_5_8_0_1.eContents().get(0);
		private final Group cGroup_2_5_8_0_2 = (Group)cGroup_2_5_8_0.eContents().get(2);
		private final Keyword cCommaKeyword_2_5_8_0_2_0 = (Keyword)cGroup_2_5_8_0_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_5_8_0_2_1 = (Assignment)cGroup_2_5_8_0_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_5_8_0_2_1_0 = (RuleCall)cExceptionsAssignment_2_5_8_0_2_1.eContents().get(0);
		private final Group cGroup_2_5_8_1 = (Group)cUnorderedGroup_2_5_8.eContents().get(1);
		private final Keyword cFiresKeyword_2_5_8_1_0 = (Keyword)cGroup_2_5_8_1.eContents().get(0);
		private final Assignment cFiredEventsAssignment_2_5_8_1_1 = (Assignment)cGroup_2_5_8_1.eContents().get(1);
		private final RuleCall cFiredEventsJvmTypeReferenceParserRuleCall_2_5_8_1_1_0 = (RuleCall)cFiredEventsAssignment_2_5_8_1_1.eContents().get(0);
		private final Group cGroup_2_5_8_1_2 = (Group)cGroup_2_5_8_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_5_8_1_2_0 = (Keyword)cGroup_2_5_8_1_2.eContents().get(0);
		private final Assignment cFiredEventsAssignment_2_5_8_1_2_1 = (Assignment)cGroup_2_5_8_1_2.eContents().get(1);
		private final RuleCall cFiredEventsJvmTypeReferenceParserRuleCall_2_5_8_1_2_1_0 = (RuleCall)cFiredEventsAssignment_2_5_8_1_2_1.eContents().get(0);
		private final Group cGroup_2_5_8_2 = (Group)cUnorderedGroup_2_5_8.eContents().get(2);
		private final Keyword cWithKeyword_2_5_8_2_0 = (Keyword)cGroup_2_5_8_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_5_8_2_1 = (Assignment)cGroup_2_5_8_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_5_8_2_1_0 = (RuleCall)cTypeParametersAssignment_2_5_8_2_1.eContents().get(0);
		private final Group cGroup_2_5_8_2_2 = (Group)cGroup_2_5_8_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_5_8_2_2_0 = (Keyword)cGroup_2_5_8_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_5_8_2_2_1 = (Assignment)cGroup_2_5_8_2_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_5_8_2_2_1_0 = (RuleCall)cTypeParametersAssignment_2_5_8_2_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2_5_9 = (Alternatives)cGroup_2_5.eContents().get(9);
		private final Assignment cExpressionAssignment_2_5_9_0 = (Assignment)cAlternatives_2_5_9.eContents().get(0);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_5_9_0_0 = (RuleCall)cExpressionAssignment_2_5_9_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_5_9_1 = (Keyword)cAlternatives_2_5_9.eContents().get(1);
		private final Group cGroup_2_6 = (Group)cAlternatives_2.eContents().get(6);
		private final Action cSarlClassAnnotationInfoAction_2_6_0 = (Action)cGroup_2_6.eContents().get(0);
		private final Assignment cModifiersAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_6_1_0 = (RuleCall)cModifiersAssignment_2_6_1.eContents().get(0);
		private final Keyword cClassKeyword_2_6_2 = (Keyword)cGroup_2_6.eContents().get(2);
		private final Assignment cNameAssignment_2_6_3 = (Assignment)cGroup_2_6.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_6_3_0 = (RuleCall)cNameAssignment_2_6_3.eContents().get(0);
		private final Group cGroup_2_6_4 = (Group)cGroup_2_6.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_6_4_0 = (Keyword)cGroup_2_6_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_6_4_1 = (Assignment)cGroup_2_6_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_6_4_1_0 = (RuleCall)cTypeParametersAssignment_2_6_4_1.eContents().get(0);
		private final Group cGroup_2_6_4_2 = (Group)cGroup_2_6_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_6_4_2_0 = (Keyword)cGroup_2_6_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_6_4_2_1 = (Assignment)cGroup_2_6_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_6_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_6_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_6_4_3 = (Keyword)cGroup_2_6_4.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_2_6_5 = (UnorderedGroup)cGroup_2_6.eContents().get(5);
		private final Group cGroup_2_6_5_0 = (Group)cUnorderedGroup_2_6_5.eContents().get(0);
		private final Keyword cExtendsKeyword_2_6_5_0_0 = (Keyword)cGroup_2_6_5_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_6_5_0_1 = (Assignment)cGroup_2_6_5_0.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_0_1_0 = (RuleCall)cExtendsAssignment_2_6_5_0_1.eContents().get(0);
		private final Group cGroup_2_6_5_1 = (Group)cUnorderedGroup_2_6_5.eContents().get(1);
		private final Keyword cImplementsKeyword_2_6_5_1_0 = (Keyword)cGroup_2_6_5_1.eContents().get(0);
		private final Assignment cImplementsAssignment_2_6_5_1_1 = (Assignment)cGroup_2_6_5_1.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_1_1_0 = (RuleCall)cImplementsAssignment_2_6_5_1_1.eContents().get(0);
		private final Group cGroup_2_6_5_1_2 = (Group)cGroup_2_6_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_6_5_1_2_0 = (Keyword)cGroup_2_6_5_1_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_6_5_1_2_1 = (Assignment)cGroup_2_6_5_1_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_1_2_1_0 = (RuleCall)cImplementsAssignment_2_6_5_1_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_6_6 = (Keyword)cGroup_2_6.eContents().get(6);
		private final Assignment cMembersAssignment_2_6_7 = (Assignment)cGroup_2_6.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_6_7_0 = (RuleCall)cMembersAssignment_2_6_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_6_8 = (Keyword)cGroup_2_6.eContents().get(8);
		private final Group cGroup_2_7 = (Group)cAlternatives_2.eContents().get(7);
		private final Action cSarlInterfaceAnnotationInfoAction_2_7_0 = (Action)cGroup_2_7.eContents().get(0);
		private final Assignment cModifiersAssignment_2_7_1 = (Assignment)cGroup_2_7.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_7_1_0 = (RuleCall)cModifiersAssignment_2_7_1.eContents().get(0);
		private final Keyword cInterfaceKeyword_2_7_2 = (Keyword)cGroup_2_7.eContents().get(2);
		private final Assignment cNameAssignment_2_7_3 = (Assignment)cGroup_2_7.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_7_3_0 = (RuleCall)cNameAssignment_2_7_3.eContents().get(0);
		private final Group cGroup_2_7_4 = (Group)cGroup_2_7.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_7_4_0 = (Keyword)cGroup_2_7_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_7_4_1 = (Assignment)cGroup_2_7_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0 = (RuleCall)cTypeParametersAssignment_2_7_4_1.eContents().get(0);
		private final Group cGroup_2_7_4_2 = (Group)cGroup_2_7_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_7_4_2_0 = (Keyword)cGroup_2_7_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_7_4_2_1 = (Assignment)cGroup_2_7_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_7_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_7_4_3 = (Keyword)cGroup_2_7_4.eContents().get(3);
		private final Group cGroup_2_7_5 = (Group)cGroup_2_7.eContents().get(5);
		private final Keyword cExtendsKeyword_2_7_5_0 = (Keyword)cGroup_2_7_5.eContents().get(0);
		private final Assignment cExtendsAssignment_2_7_5_1 = (Assignment)cGroup_2_7_5.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_0 = (RuleCall)cExtendsAssignment_2_7_5_1.eContents().get(0);
		private final Group cGroup_2_7_5_2 = (Group)cGroup_2_7_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_7_5_2_0 = (Keyword)cGroup_2_7_5_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_7_5_2_1 = (Assignment)cGroup_2_7_5_2.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_2_1_0 = (RuleCall)cExtendsAssignment_2_7_5_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_7_6 = (Keyword)cGroup_2_7.eContents().get(6);
		private final Assignment cMembersAssignment_2_7_7 = (Assignment)cGroup_2_7.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_7_7_0 = (RuleCall)cMembersAssignment_2_7_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_7_8 = (Keyword)cGroup_2_7.eContents().get(8);
		private final Group cGroup_2_8 = (Group)cAlternatives_2.eContents().get(8);
		private final Action cSarlEnumerationAnnotationInfoAction_2_8_0 = (Action)cGroup_2_8.eContents().get(0);
		private final Assignment cModifiersAssignment_2_8_1 = (Assignment)cGroup_2_8.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_8_1_0 = (RuleCall)cModifiersAssignment_2_8_1.eContents().get(0);
		private final Keyword cEnumKeyword_2_8_2 = (Keyword)cGroup_2_8.eContents().get(2);
		private final Assignment cNameAssignment_2_8_3 = (Assignment)cGroup_2_8.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_8_3_0 = (RuleCall)cNameAssignment_2_8_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_8_4 = (Keyword)cGroup_2_8.eContents().get(4);
		private final Group cGroup_2_8_5 = (Group)cGroup_2_8.eContents().get(5);
		private final Assignment cMembersAssignment_2_8_5_0 = (Assignment)cGroup_2_8_5.eContents().get(0);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_8_5_0_0 = (RuleCall)cMembersAssignment_2_8_5_0.eContents().get(0);
		private final Group cGroup_2_8_5_1 = (Group)cGroup_2_8_5.eContents().get(1);
		private final Keyword cCommaKeyword_2_8_5_1_0 = (Keyword)cGroup_2_8_5_1.eContents().get(0);
		private final Assignment cMembersAssignment_2_8_5_1_1 = (Assignment)cGroup_2_8_5_1.eContents().get(1);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_8_5_1_1_0 = (RuleCall)cMembersAssignment_2_8_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_8_6 = (Keyword)cGroup_2_8.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_2_8_7 = (Keyword)cGroup_2_8.eContents().get(7);
		private final Group cGroup_2_9 = (Group)cAlternatives_2.eContents().get(9);
		private final Action cSarlAnnotationTypeAnnotationInfoAction_2_9_0 = (Action)cGroup_2_9.eContents().get(0);
		private final Assignment cModifiersAssignment_2_9_1 = (Assignment)cGroup_2_9.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_9_1_0 = (RuleCall)cModifiersAssignment_2_9_1.eContents().get(0);
		private final Keyword cAnnotationKeyword_2_9_2 = (Keyword)cGroup_2_9.eContents().get(2);
		private final Assignment cNameAssignment_2_9_3 = (Assignment)cGroup_2_9.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_9_3_0 = (RuleCall)cNameAssignment_2_9_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_9_4 = (Keyword)cGroup_2_9.eContents().get(4);
		private final Assignment cMembersAssignment_2_9_5 = (Assignment)cGroup_2_9.eContents().get(5);
		private final RuleCall cMembersAnnotationFieldParserRuleCall_2_9_5_0 = (RuleCall)cMembersAssignment_2_9_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_9_6 = (Keyword)cGroup_2_9.eContents().get(6);
		
		//// Members for agent-oriented types
		//AOPMember returns xtend::XtendMember:
		//    {xtend::XtendMember} annotations+=XAnnotation*
		//    (
		//        // Behavior Unit
		//        {SarlBehaviorUnit.annotationInfo = current}
		//        'on' name=JvmParameterizedTypeReference ('[' guard=XExpression ']')?
		//        expression=XBlockExpression
		//    |
		//        // Capacity Uses
		//        {SarlCapacityUses.annotationInfo = current}
		//        'uses' capacities+=JvmParameterizedTypeReference
		//        (',' capacities+=JvmParameterizedTypeReference)* ';'?
		//    |
		//        // Required capacities
		//        {SarlRequiredCapacity.annotationInfo = current}
		//        'requires' capacities+=JvmParameterizedTypeReference
		//        (',' capacities+=JvmParameterizedTypeReference)* ';'?
		//    |
		//        // Field
		//        {SarlField.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            modifiers+=FieldModifier
		//            modifiers+=CommonModifier*
		//            (
		//                modifiers += 'extension'
		//                name=ValidID ':' type=JvmTypeReference
		//            |
		//                name=ValidID (':' type=JvmTypeReference)?
		//            )
		//        )
		//        ('=' initialValue=XExpression)? ';'?
		//    |
		//        // Constructor
		//        {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//        'new'
		//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//          ')'
		//        )?
		//        ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//          &
		//          ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//        )
		//        expression=XBlockExpression
		//    |
		//        // Action
		//        {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//        modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        name=FunctionID
		//        (
		//            '('
		//            (    parameters+=Parameter
		//                (',' parameters+=Parameter)*
		//            )?
		//            ')'
		//        )?
		//        ( ':'
		//          (    (returnType=TypeReferenceWithTypeArgs)
		//              | (returnType=TypeReferenceNoTypeArgs) )
		//        )?
		//        (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//            &
		//            ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//            &
		//            ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//        )
		//        (expression=XBlockExpression | ';')?
		//    |
		//        // Class
		//        {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        (    ('extends' extends=JvmParameterizedTypeReference)?
		//            &
		//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//        )
		//        '{' members+=Member* '}'
		//    |
		//        // Interface
		//        {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//        '{' members+=Member* '}'
		//    |
		//        // Enum
		//        {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//        'enum' name=ValidID '{'
		//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//        '}'
		//    |
		//        // AnnotationType
		//        {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//        'annotation' name=ValidID
		//        '{' members+=AnnotationField* '}'
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendMember} annotations+=XAnnotation*
		//(
		//    // Behavior Unit
		//    {SarlBehaviorUnit.annotationInfo = current}
		//    'on' name=JvmParameterizedTypeReference ('[' guard=XExpression ']')?
		//    expression=XBlockExpression
		//|
		//    // Capacity Uses
		//    {SarlCapacityUses.annotationInfo = current}
		//    'uses' capacities+=JvmParameterizedTypeReference
		//    (',' capacities+=JvmParameterizedTypeReference)* ';'?
		//|
		//    // Required capacities
		//    {SarlRequiredCapacity.annotationInfo = current}
		//    'requires' capacities+=JvmParameterizedTypeReference
		//    (',' capacities+=JvmParameterizedTypeReference)* ';'?
		//|
		//    // Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            name=ValidID (':' type=JvmTypeReference)?
		//        )
		//    )
		//    ('=' initialValue=XExpression)? ';'?
		//|
		//    // Constructor
		//    {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//    'new'
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//      ')'
		//    )?
		//    ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//      &
		//      ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    expression=XBlockExpression
		//|
		//    // Action
		//    {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//    modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    name=FunctionID
		//    (
		//        '('
		//        (    parameters+=Parameter
		//            (',' parameters+=Parameter)*
		//        )?
		//        ')'
		//    )?
		//    ( ':'
		//      (    (returnType=TypeReferenceWithTypeArgs)
		//          | (returnType=TypeReferenceNoTypeArgs) )
		//    )?
		//    (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//        &
		//        ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//        &
		//        ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    (expression=XBlockExpression | ';')?
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' members+=Member* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendMember}
		public Action getXtendMemberAction_0() { return cXtendMemberAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//(
		//    // Behavior Unit
		//    {SarlBehaviorUnit.annotationInfo = current}
		//    'on' name=JvmParameterizedTypeReference ('[' guard=XExpression ']')?
		//    expression=XBlockExpression
		//|
		//    // Capacity Uses
		//    {SarlCapacityUses.annotationInfo = current}
		//    'uses' capacities+=JvmParameterizedTypeReference
		//    (',' capacities+=JvmParameterizedTypeReference)* ';'?
		//|
		//    // Required capacities
		//    {SarlRequiredCapacity.annotationInfo = current}
		//    'requires' capacities+=JvmParameterizedTypeReference
		//    (',' capacities+=JvmParameterizedTypeReference)* ';'?
		//|
		//    // Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            name=ValidID (':' type=JvmTypeReference)?
		//        )
		//    )
		//    ('=' initialValue=XExpression)? ';'?
		//|
		//    // Constructor
		//    {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//    'new'
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//      ')'
		//    )?
		//    ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//      &
		//      ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    expression=XBlockExpression
		//|
		//    // Action
		//    {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//    modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    name=FunctionID
		//    (
		//        '('
		//        (    parameters+=Parameter
		//            (',' parameters+=Parameter)*
		//        )?
		//        ')'
		//    )?
		//    ( ':'
		//      (    (returnType=TypeReferenceWithTypeArgs)
		//          | (returnType=TypeReferenceNoTypeArgs) )
		//    )?
		//    (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//        &
		//        ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//        &
		//        ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    (expression=XBlockExpression | ';')?
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' members+=Member* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//// Behavior Unit
		//{SarlBehaviorUnit.annotationInfo = current}
		//'on' name=JvmParameterizedTypeReference ('[' guard=XExpression ']')?
		//expression=XBlockExpression
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//// Behavior Unit
		//{SarlBehaviorUnit.annotationInfo = current}
		public Action getSarlBehaviorUnitAnnotationInfoAction_2_0_0() { return cSarlBehaviorUnitAnnotationInfoAction_2_0_0; }
		
		//'on'
		public Keyword getOnKeyword_2_0_1() { return cOnKeyword_2_0_1; }
		
		//name=JvmParameterizedTypeReference
		public Assignment getNameAssignment_2_0_2() { return cNameAssignment_2_0_2; }
		
		//JvmParameterizedTypeReference
		public RuleCall getNameJvmParameterizedTypeReferenceParserRuleCall_2_0_2_0() { return cNameJvmParameterizedTypeReferenceParserRuleCall_2_0_2_0; }
		
		//('[' guard=XExpression ']')?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0_3_0() { return cLeftSquareBracketKeyword_2_0_3_0; }
		
		//guard=XExpression
		public Assignment getGuardAssignment_2_0_3_1() { return cGuardAssignment_2_0_3_1; }
		
		//XExpression
		public RuleCall getGuardXExpressionParserRuleCall_2_0_3_1_0() { return cGuardXExpressionParserRuleCall_2_0_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_0_3_2() { return cRightSquareBracketKeyword_2_0_3_2; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_0_4() { return cExpressionAssignment_2_0_4; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_0_4_0() { return cExpressionXBlockExpressionParserRuleCall_2_0_4_0; }
		
		//// Capacity Uses
		//{SarlCapacityUses.annotationInfo = current}
		//'uses' capacities+=JvmParameterizedTypeReference
		//(',' capacities+=JvmParameterizedTypeReference)* ';'?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//// Capacity Uses
		//{SarlCapacityUses.annotationInfo = current}
		public Action getSarlCapacityUsesAnnotationInfoAction_2_1_0() { return cSarlCapacityUsesAnnotationInfoAction_2_1_0; }
		
		//'uses'
		public Keyword getUsesKeyword_2_1_1() { return cUsesKeyword_2_1_1; }
		
		//capacities+=JvmParameterizedTypeReference
		public Assignment getCapacitiesAssignment_2_1_2() { return cCapacitiesAssignment_2_1_2; }
		
		//JvmParameterizedTypeReference
		public RuleCall getCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_1_2_0() { return cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_1_2_0; }
		
		//(',' capacities+=JvmParameterizedTypeReference)*
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }
		
		//','
		public Keyword getCommaKeyword_2_1_3_0() { return cCommaKeyword_2_1_3_0; }
		
		//capacities+=JvmParameterizedTypeReference
		public Assignment getCapacitiesAssignment_2_1_3_1() { return cCapacitiesAssignment_2_1_3_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_1_3_1_0() { return cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_1_3_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_1_4() { return cSemicolonKeyword_2_1_4; }
		
		//// Required capacities
		//{SarlRequiredCapacity.annotationInfo = current}
		//'requires' capacities+=JvmParameterizedTypeReference
		//(',' capacities+=JvmParameterizedTypeReference)* ';'?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//// Required capacities
		//{SarlRequiredCapacity.annotationInfo = current}
		public Action getSarlRequiredCapacityAnnotationInfoAction_2_2_0() { return cSarlRequiredCapacityAnnotationInfoAction_2_2_0; }
		
		//'requires'
		public Keyword getRequiresKeyword_2_2_1() { return cRequiresKeyword_2_2_1; }
		
		//capacities+=JvmParameterizedTypeReference
		public Assignment getCapacitiesAssignment_2_2_2() { return cCapacitiesAssignment_2_2_2; }
		
		//JvmParameterizedTypeReference
		public RuleCall getCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_2_2_0() { return cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_2_2_0; }
		
		//(',' capacities+=JvmParameterizedTypeReference)*
		public Group getGroup_2_2_3() { return cGroup_2_2_3; }
		
		//','
		public Keyword getCommaKeyword_2_2_3_0() { return cCommaKeyword_2_2_3_0; }
		
		//capacities+=JvmParameterizedTypeReference
		public Assignment getCapacitiesAssignment_2_2_3_1() { return cCapacitiesAssignment_2_2_3_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_2_3_1_0() { return cCapacitiesJvmParameterizedTypeReferenceParserRuleCall_2_2_3_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_2_4() { return cSemicolonKeyword_2_2_4; }
		
		//// Field
		//{SarlField.annotationInfo = current}
		//modifiers+=CommonModifier*
		//(
		//    modifiers += 'extension'
		//    (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        name=ValidID (':' type=JvmTypeReference)?
		//    )
		//)
		//('=' initialValue=XExpression)? ';'?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//// Field
		//{SarlField.annotationInfo = current}
		public Action getSarlFieldAnnotationInfoAction_2_3_0() { return cSarlFieldAnnotationInfoAction_2_3_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_3_1() { return cModifiersAssignment_2_3_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_3_1_0() { return cModifiersCommonModifierParserRuleCall_2_3_1_0; }
		
		//(
		//    modifiers += 'extension'
		//    (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        name=ValidID (':' type=JvmTypeReference)?
		//    )
		//)
		public Alternatives getAlternatives_2_3_2() { return cAlternatives_2_3_2; }
		
		//modifiers += 'extension'
		//(modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//name=ValidID ':' type=JvmTypeReference
		public Group getGroup_2_3_2_0() { return cGroup_2_3_2_0; }
		
		//modifiers += 'extension'
		public Assignment getModifiersAssignment_2_3_2_0_0() { return cModifiersAssignment_2_3_2_0_0; }
		
		//'extension'
		public Keyword getModifiersExtensionKeyword_2_3_2_0_0_0() { return cModifiersExtensionKeyword_2_3_2_0_0_0; }
		
		//(modifiers+=FieldModifier | modifiers+=CommonModifier)*
		public Alternatives getAlternatives_2_3_2_0_1() { return cAlternatives_2_3_2_0_1; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_3_2_0_1_0() { return cModifiersAssignment_2_3_2_0_1_0; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_3_2_0_1_0_0() { return cModifiersFieldModifierParserRuleCall_2_3_2_0_1_0_0; }
		
		//modifiers+=CommonModifier
		public Assignment getModifiersAssignment_2_3_2_0_1_1() { return cModifiersAssignment_2_3_2_0_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_3_2_0_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_3_2_0_1_1_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_3_2_0_2() { return cNameAssignment_2_3_2_0_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_2_0_2_0() { return cNameValidIDParserRuleCall_2_3_2_0_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_3_2_0_3() { return cColonKeyword_2_3_2_0_3; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_3_2_0_4() { return cTypeAssignment_2_3_2_0_4; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_3_2_0_4_0() { return cTypeJvmTypeReferenceParserRuleCall_2_3_2_0_4_0; }
		
		//modifiers+=FieldModifier
		//modifiers+=CommonModifier*
		//(
		//    modifiers += 'extension'
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    name=ValidID (':' type=JvmTypeReference)?
		//)
		public Group getGroup_2_3_2_1() { return cGroup_2_3_2_1; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_3_2_1_0() { return cModifiersAssignment_2_3_2_1_0; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_3_2_1_0_0() { return cModifiersFieldModifierParserRuleCall_2_3_2_1_0_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_3_2_1_1() { return cModifiersAssignment_2_3_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_3_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_3_2_1_1_0; }
		
		//(
		//    modifiers += 'extension'
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    name=ValidID (':' type=JvmTypeReference)?
		//)
		public Alternatives getAlternatives_2_3_2_1_2() { return cAlternatives_2_3_2_1_2; }
		
		//modifiers += 'extension'
		//name=ValidID ':' type=JvmTypeReference
		public Group getGroup_2_3_2_1_2_0() { return cGroup_2_3_2_1_2_0; }
		
		//modifiers += 'extension'
		public Assignment getModifiersAssignment_2_3_2_1_2_0_0() { return cModifiersAssignment_2_3_2_1_2_0_0; }
		
		//'extension'
		public Keyword getModifiersExtensionKeyword_2_3_2_1_2_0_0_0() { return cModifiersExtensionKeyword_2_3_2_1_2_0_0_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_3_2_1_2_0_1() { return cNameAssignment_2_3_2_1_2_0_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_2_1_2_0_1_0() { return cNameValidIDParserRuleCall_2_3_2_1_2_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_2_3_2_1_2_0_2() { return cColonKeyword_2_3_2_1_2_0_2; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_3_2_1_2_0_3() { return cTypeAssignment_2_3_2_1_2_0_3; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_3_2_1_2_0_3_0() { return cTypeJvmTypeReferenceParserRuleCall_2_3_2_1_2_0_3_0; }
		
		//name=ValidID (':' type=JvmTypeReference)?
		public Group getGroup_2_3_2_1_2_1() { return cGroup_2_3_2_1_2_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_3_2_1_2_1_0() { return cNameAssignment_2_3_2_1_2_1_0; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_2_1_2_1_0_0() { return cNameValidIDParserRuleCall_2_3_2_1_2_1_0_0; }
		
		//(':' type=JvmTypeReference)?
		public Group getGroup_2_3_2_1_2_1_1() { return cGroup_2_3_2_1_2_1_1; }
		
		//':'
		public Keyword getColonKeyword_2_3_2_1_2_1_1_0() { return cColonKeyword_2_3_2_1_2_1_1_0; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_3_2_1_2_1_1_1() { return cTypeAssignment_2_3_2_1_2_1_1_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_3_2_1_2_1_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_3_2_1_2_1_1_1_0; }
		
		//('=' initialValue=XExpression)?
		public Group getGroup_2_3_3() { return cGroup_2_3_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_3_3_0() { return cEqualsSignKeyword_2_3_3_0; }
		
		//initialValue=XExpression
		public Assignment getInitialValueAssignment_2_3_3_1() { return cInitialValueAssignment_2_3_3_1; }
		
		//XExpression
		public RuleCall getInitialValueXExpressionParserRuleCall_2_3_3_1_0() { return cInitialValueXExpressionParserRuleCall_2_3_3_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_3_4() { return cSemicolonKeyword_2_3_4; }
		
		//// Constructor
		//{SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//'new'
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//  ')'
		//)?
		//( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//  &
		//  ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		//expression=XBlockExpression
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//// Constructor
		//{SarlConstructor.annotationInfo = current}
		public Action getSarlConstructorAnnotationInfoAction_2_4_0() { return cSarlConstructorAnnotationInfoAction_2_4_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_4_1() { return cModifiersAssignment_2_4_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_4_1_0() { return cModifiersCommonModifierParserRuleCall_2_4_1_0; }
		
		//'new'
		public Keyword getNewKeyword_2_4_2() { return cNewKeyword_2_4_2; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_4_3() { return cGroup_2_4_3; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_4_3_0() { return cLessThanSignKeyword_2_4_3_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_4_3_1() { return cTypeParametersAssignment_2_4_3_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_4_3_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_4_3_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_4_3_2() { return cGroup_2_4_3_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_3_2_0() { return cCommaKeyword_2_4_3_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_4_3_2_1() { return cTypeParametersAssignment_2_4_3_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_4_3_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_4_3_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_4_3_3() { return cGreaterThanSignKeyword_2_4_3_3; }
		
		//('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//  ')'
		//)?
		public Group getGroup_2_4_4() { return cGroup_2_4_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_4_4_0() { return cLeftParenthesisKeyword_2_4_4_0; }
		
		//(parameters+=Parameter (',' parameters+=Parameter)*)?
		public Group getGroup_2_4_4_1() { return cGroup_2_4_4_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_4_4_1_0() { return cParametersAssignment_2_4_4_1_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_4_4_1_0_0() { return cParametersParameterParserRuleCall_2_4_4_1_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_2_4_4_1_1() { return cGroup_2_4_4_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_4_4_1_1_0() { return cCommaKeyword_2_4_4_1_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_4_4_1_1_1() { return cParametersAssignment_2_4_4_1_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_4_4_1_1_1_0() { return cParametersParameterParserRuleCall_2_4_4_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4_4_2() { return cRightParenthesisKeyword_2_4_4_2; }
		
		//( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//  &
		//  ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_4_5() { return cUnorderedGroup_2_4_5; }
		
		//('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_4_5_0() { return cGroup_2_4_5_0; }
		
		//'throws'
		public Keyword getThrowsKeyword_2_4_5_0_0() { return cThrowsKeyword_2_4_5_0_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_4_5_0_1() { return cExceptionsAssignment_2_4_5_0_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_4_5_0_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_4_5_0_1_0; }
		
		//(',' exceptions+=JvmTypeReference)*
		public Group getGroup_2_4_5_0_2() { return cGroup_2_4_5_0_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_5_0_2_0() { return cCommaKeyword_2_4_5_0_2_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_4_5_0_2_1() { return cExceptionsAssignment_2_4_5_0_2_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_4_5_0_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_4_5_0_2_1_0; }
		
		//('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		public Group getGroup_2_4_5_1() { return cGroup_2_4_5_1; }
		
		//'with'
		public Keyword getWithKeyword_2_4_5_1_0() { return cWithKeyword_2_4_5_1_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_4_5_1_1() { return cTypeParametersAssignment_2_4_5_1_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_4_5_1_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_4_5_1_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_4_5_1_2() { return cGroup_2_4_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_5_1_2_0() { return cCommaKeyword_2_4_5_1_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_4_5_1_2_1() { return cTypeParametersAssignment_2_4_5_1_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_4_5_1_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_4_5_1_2_1_0; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_4_6() { return cExpressionAssignment_2_4_6; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_4_6_0() { return cExpressionXBlockExpressionParserRuleCall_2_4_6_0; }
		
		//// Action
		//{SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//name=FunctionID
		//(
		//    '('
		//    (    parameters+=Parameter
		//        (',' parameters+=Parameter)*
		//    )?
		//    ')'
		//)?
		//( ':'
		//  (    (returnType=TypeReferenceWithTypeArgs)
		//      | (returnType=TypeReferenceNoTypeArgs) )
		//)?
		//(    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//    &
		//    ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//    &
		//    ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		//(expression=XBlockExpression | ';')?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//// Action
		//{SarlAction.annotationInfo = current}
		public Action getSarlActionAnnotationInfoAction_2_5_0() { return cSarlActionAnnotationInfoAction_2_5_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_5_1() { return cModifiersAssignment_2_5_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_5_1_0() { return cModifiersCommonModifierParserRuleCall_2_5_1_0; }
		
		//modifiers+=MethodModifier
		public Assignment getModifiersAssignment_2_5_2() { return cModifiersAssignment_2_5_2; }
		
		//MethodModifier
		public RuleCall getModifiersMethodModifierParserRuleCall_2_5_2_0() { return cModifiersMethodModifierParserRuleCall_2_5_2_0; }
		
		//(modifiers+=CommonModifier | modifiers+=MethodModifier)*
		public Alternatives getAlternatives_2_5_3() { return cAlternatives_2_5_3; }
		
		//modifiers+=CommonModifier
		public Assignment getModifiersAssignment_2_5_3_0() { return cModifiersAssignment_2_5_3_0; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_5_3_0_0() { return cModifiersCommonModifierParserRuleCall_2_5_3_0_0; }
		
		//modifiers+=MethodModifier
		public Assignment getModifiersAssignment_2_5_3_1() { return cModifiersAssignment_2_5_3_1; }
		
		//MethodModifier
		public RuleCall getModifiersMethodModifierParserRuleCall_2_5_3_1_0() { return cModifiersMethodModifierParserRuleCall_2_5_3_1_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_5_4() { return cGroup_2_5_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_5_4_0() { return cLessThanSignKeyword_2_5_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_5_4_1() { return cTypeParametersAssignment_2_5_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_5_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_5_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_5_4_2() { return cGroup_2_5_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_5_4_2_0() { return cCommaKeyword_2_5_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_5_4_2_1() { return cTypeParametersAssignment_2_5_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_5_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_5_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_5_4_3() { return cGreaterThanSignKeyword_2_5_4_3; }
		
		//name=FunctionID
		public Assignment getNameAssignment_2_5_5() { return cNameAssignment_2_5_5; }
		
		//FunctionID
		public RuleCall getNameFunctionIDParserRuleCall_2_5_5_0() { return cNameFunctionIDParserRuleCall_2_5_5_0; }
		
		//(
		//    '('
		//    (    parameters+=Parameter
		//        (',' parameters+=Parameter)*
		//    )?
		//    ')'
		//)?
		public Group getGroup_2_5_6() { return cGroup_2_5_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_5_6_0() { return cLeftParenthesisKeyword_2_5_6_0; }
		
		//(    parameters+=Parameter
		//    (',' parameters+=Parameter)*
		//)?
		public Group getGroup_2_5_6_1() { return cGroup_2_5_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_5_6_1_0() { return cParametersAssignment_2_5_6_1_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_5_6_1_0_0() { return cParametersParameterParserRuleCall_2_5_6_1_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_2_5_6_1_1() { return cGroup_2_5_6_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_5_6_1_1_0() { return cCommaKeyword_2_5_6_1_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_5_6_1_1_1() { return cParametersAssignment_2_5_6_1_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_5_6_1_1_1_0() { return cParametersParameterParserRuleCall_2_5_6_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_5_6_2() { return cRightParenthesisKeyword_2_5_6_2; }
		
		//( ':'
		//  (    (returnType=TypeReferenceWithTypeArgs)
		//      | (returnType=TypeReferenceNoTypeArgs) )
		//)?
		public Group getGroup_2_5_7() { return cGroup_2_5_7; }
		
		//':'
		public Keyword getColonKeyword_2_5_7_0() { return cColonKeyword_2_5_7_0; }
		
		//(    (returnType=TypeReferenceWithTypeArgs)
		//    | (returnType=TypeReferenceNoTypeArgs) )
		public Alternatives getAlternatives_2_5_7_1() { return cAlternatives_2_5_7_1; }
		
		//(returnType=TypeReferenceWithTypeArgs)
		public Assignment getReturnTypeAssignment_2_5_7_1_0() { return cReturnTypeAssignment_2_5_7_1_0; }
		
		//TypeReferenceWithTypeArgs
		public RuleCall getReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_5_7_1_0_0() { return cReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_5_7_1_0_0; }
		
		//(returnType=TypeReferenceNoTypeArgs)
		public Assignment getReturnTypeAssignment_2_5_7_1_1() { return cReturnTypeAssignment_2_5_7_1_1; }
		
		//TypeReferenceNoTypeArgs
		public RuleCall getReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_5_7_1_1_0() { return cReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_5_7_1_1_0; }
		
		//(    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//    &
		//    ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//    &
		//    ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_5_8() { return cUnorderedGroup_2_5_8; }
		
		//('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_5_8_0() { return cGroup_2_5_8_0; }
		
		//'throws'
		public Keyword getThrowsKeyword_2_5_8_0_0() { return cThrowsKeyword_2_5_8_0_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_5_8_0_1() { return cExceptionsAssignment_2_5_8_0_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_5_8_0_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_5_8_0_1_0; }
		
		//(',' exceptions+=JvmTypeReference)*
		public Group getGroup_2_5_8_0_2() { return cGroup_2_5_8_0_2; }
		
		//','
		public Keyword getCommaKeyword_2_5_8_0_2_0() { return cCommaKeyword_2_5_8_0_2_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_5_8_0_2_1() { return cExceptionsAssignment_2_5_8_0_2_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_5_8_0_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_5_8_0_2_1_0; }
		
		//('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		public Group getGroup_2_5_8_1() { return cGroup_2_5_8_1; }
		
		//'fires'
		public Keyword getFiresKeyword_2_5_8_1_0() { return cFiresKeyword_2_5_8_1_0; }
		
		//firedEvents+=JvmTypeReference
		public Assignment getFiredEventsAssignment_2_5_8_1_1() { return cFiredEventsAssignment_2_5_8_1_1; }
		
		//JvmTypeReference
		public RuleCall getFiredEventsJvmTypeReferenceParserRuleCall_2_5_8_1_1_0() { return cFiredEventsJvmTypeReferenceParserRuleCall_2_5_8_1_1_0; }
		
		//(',' firedEvents+=JvmTypeReference)*
		public Group getGroup_2_5_8_1_2() { return cGroup_2_5_8_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_5_8_1_2_0() { return cCommaKeyword_2_5_8_1_2_0; }
		
		//firedEvents+=JvmTypeReference
		public Assignment getFiredEventsAssignment_2_5_8_1_2_1() { return cFiredEventsAssignment_2_5_8_1_2_1; }
		
		//JvmTypeReference
		public RuleCall getFiredEventsJvmTypeReferenceParserRuleCall_2_5_8_1_2_1_0() { return cFiredEventsJvmTypeReferenceParserRuleCall_2_5_8_1_2_1_0; }
		
		//('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		public Group getGroup_2_5_8_2() { return cGroup_2_5_8_2; }
		
		//'with'
		public Keyword getWithKeyword_2_5_8_2_0() { return cWithKeyword_2_5_8_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_5_8_2_1() { return cTypeParametersAssignment_2_5_8_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_5_8_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_5_8_2_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_5_8_2_2() { return cGroup_2_5_8_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_5_8_2_2_0() { return cCommaKeyword_2_5_8_2_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_5_8_2_2_1() { return cTypeParametersAssignment_2_5_8_2_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_5_8_2_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_5_8_2_2_1_0; }
		
		//(expression=XBlockExpression | ';')?
		public Alternatives getAlternatives_2_5_9() { return cAlternatives_2_5_9; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_5_9_0() { return cExpressionAssignment_2_5_9_0; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_5_9_0_0() { return cExpressionXBlockExpressionParserRuleCall_2_5_9_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5_9_1() { return cSemicolonKeyword_2_5_9_1; }
		
		//// Class
		//{SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		//'{' members+=Member* '}'
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//// Class
		//{SarlClass.annotationInfo = current}
		public Action getSarlClassAnnotationInfoAction_2_6_0() { return cSarlClassAnnotationInfoAction_2_6_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_6_1() { return cModifiersAssignment_2_6_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_6_1_0() { return cModifiersCommonModifierParserRuleCall_2_6_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2_6_2() { return cClassKeyword_2_6_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_6_3() { return cNameAssignment_2_6_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_6_3_0() { return cNameValidIDParserRuleCall_2_6_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_6_4() { return cGroup_2_6_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_6_4_0() { return cLessThanSignKeyword_2_6_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_6_4_1() { return cTypeParametersAssignment_2_6_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_6_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_6_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_6_4_2() { return cGroup_2_6_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_6_4_2_0() { return cCommaKeyword_2_6_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_6_4_2_1() { return cTypeParametersAssignment_2_6_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_6_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_6_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_6_4_3() { return cGreaterThanSignKeyword_2_6_4_3; }
		
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_6_5() { return cUnorderedGroup_2_6_5; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_6_5_0() { return cGroup_2_6_5_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_6_5_0_0() { return cExtendsKeyword_2_6_5_0_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_6_5_0_1() { return cExtendsAssignment_2_6_5_0_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_0_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_0_1_0; }
		
		//('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_6_5_1() { return cGroup_2_6_5_1; }
		
		//'implements'
		public Keyword getImplementsKeyword_2_6_5_1_0() { return cImplementsKeyword_2_6_5_1_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_6_5_1_1() { return cImplementsAssignment_2_6_5_1_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_1_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_1_1_0; }
		
		//(',' implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_6_5_1_2() { return cGroup_2_6_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_6_5_1_2_0() { return cCommaKeyword_2_6_5_1_2_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_6_5_1_2_1() { return cImplementsAssignment_2_6_5_1_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_1_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_6_5_1_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_6_6() { return cLeftCurlyBracketKeyword_2_6_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_6_7() { return cMembersAssignment_2_6_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_6_7_0() { return cMembersMemberParserRuleCall_2_6_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_6_8() { return cRightCurlyBracketKeyword_2_6_8; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//'{' members+=Member* '}'
		public Group getGroup_2_7() { return cGroup_2_7; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current}
		public Action getSarlInterfaceAnnotationInfoAction_2_7_0() { return cSarlInterfaceAnnotationInfoAction_2_7_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_7_1() { return cModifiersAssignment_2_7_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_7_1_0() { return cModifiersCommonModifierParserRuleCall_2_7_1_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_2_7_2() { return cInterfaceKeyword_2_7_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_7_3() { return cNameAssignment_2_7_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_7_3_0() { return cNameValidIDParserRuleCall_2_7_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_7_4() { return cGroup_2_7_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_7_4_0() { return cLessThanSignKeyword_2_7_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_7_4_1() { return cTypeParametersAssignment_2_7_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_7_4_2() { return cGroup_2_7_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_7_4_2_0() { return cCommaKeyword_2_7_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_7_4_2_1() { return cTypeParametersAssignment_2_7_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_7_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_7_4_3() { return cGreaterThanSignKeyword_2_7_4_3; }
		
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_7_5() { return cGroup_2_7_5; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_7_5_0() { return cExtendsKeyword_2_7_5_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_7_5_1() { return cExtendsAssignment_2_7_5_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_1_0; }
		
		//(',' extends+=JvmParameterizedTypeReference)*
		public Group getGroup_2_7_5_2() { return cGroup_2_7_5_2; }
		
		//','
		public Keyword getCommaKeyword_2_7_5_2_0() { return cCommaKeyword_2_7_5_2_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_7_5_2_1() { return cExtendsAssignment_2_7_5_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_2_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_7_5_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_7_6() { return cLeftCurlyBracketKeyword_2_7_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_7_7() { return cMembersAssignment_2_7_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_7_7_0() { return cMembersMemberParserRuleCall_2_7_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_7_8() { return cRightCurlyBracketKeyword_2_7_8; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//'enum' name=ValidID '{'
		//   (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//'}'
		public Group getGroup_2_8() { return cGroup_2_8; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current}
		public Action getSarlEnumerationAnnotationInfoAction_2_8_0() { return cSarlEnumerationAnnotationInfoAction_2_8_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_8_1() { return cModifiersAssignment_2_8_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_8_1_0() { return cModifiersCommonModifierParserRuleCall_2_8_1_0; }
		
		//'enum'
		public Keyword getEnumKeyword_2_8_2() { return cEnumKeyword_2_8_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_8_3() { return cNameAssignment_2_8_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_8_3_0() { return cNameValidIDParserRuleCall_2_8_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_8_4() { return cLeftCurlyBracketKeyword_2_8_4; }
		
		//(members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)?
		public Group getGroup_2_8_5() { return cGroup_2_8_5; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_8_5_0() { return cMembersAssignment_2_8_5_0; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_8_5_0_0() { return cMembersXtendEnumLiteralParserRuleCall_2_8_5_0_0; }
		
		//(',' members+=XtendEnumLiteral)*
		public Group getGroup_2_8_5_1() { return cGroup_2_8_5_1; }
		
		//','
		public Keyword getCommaKeyword_2_8_5_1_0() { return cCommaKeyword_2_8_5_1_0; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_8_5_1_1() { return cMembersAssignment_2_8_5_1_1; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_8_5_1_1_0() { return cMembersXtendEnumLiteralParserRuleCall_2_8_5_1_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_8_6() { return cSemicolonKeyword_2_8_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_8_7() { return cRightCurlyBracketKeyword_2_8_7; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//'annotation' name=ValidID
		//'{' members+=AnnotationField* '}'
		public Group getGroup_2_9() { return cGroup_2_9; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current}
		public Action getSarlAnnotationTypeAnnotationInfoAction_2_9_0() { return cSarlAnnotationTypeAnnotationInfoAction_2_9_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_9_1() { return cModifiersAssignment_2_9_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_9_1_0() { return cModifiersCommonModifierParserRuleCall_2_9_1_0; }
		
		//'annotation'
		public Keyword getAnnotationKeyword_2_9_2() { return cAnnotationKeyword_2_9_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_9_3() { return cNameAssignment_2_9_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_9_3_0() { return cNameValidIDParserRuleCall_2_9_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_9_4() { return cLeftCurlyBracketKeyword_2_9_4; }
		
		//members+=AnnotationField*
		public Assignment getMembersAssignment_2_9_5() { return cMembersAssignment_2_9_5; }
		
		//AnnotationField
		public RuleCall getMembersAnnotationFieldParserRuleCall_2_9_5_0() { return cMembersAnnotationFieldParserRuleCall_2_9_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_9_6() { return cRightCurlyBracketKeyword_2_9_6; }
	}
	public class MemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.Member");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendMemberAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cSarlFieldAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_1_0 = (RuleCall)cModifiersAssignment_2_0_1.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2 = (Alternatives)cGroup_2_0.eContents().get(2);
		private final Group cGroup_2_0_2_0 = (Group)cAlternatives_2_0_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_0_0 = (Assignment)cGroup_2_0_2_0.eContents().get(0);
		private final Keyword cModifiersExtensionKeyword_2_0_2_0_0_0 = (Keyword)cModifiersAssignment_2_0_2_0_0.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2_0_1 = (Alternatives)cGroup_2_0_2_0.eContents().get(1);
		private final Assignment cModifiersAssignment_2_0_2_0_1_0 = (Assignment)cAlternatives_2_0_2_0_1.eContents().get(0);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_0_2_0_1_0_0 = (RuleCall)cModifiersAssignment_2_0_2_0_1_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_0_1_1 = (Assignment)cAlternatives_2_0_2_0_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_2_0_1_1_0 = (RuleCall)cModifiersAssignment_2_0_2_0_1_1.eContents().get(0);
		private final Assignment cNameAssignment_2_0_2_0_2 = (Assignment)cGroup_2_0_2_0.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_0_2_0 = (RuleCall)cNameAssignment_2_0_2_0_2.eContents().get(0);
		private final Keyword cColonKeyword_2_0_2_0_3 = (Keyword)cGroup_2_0_2_0.eContents().get(3);
		private final Assignment cTypeAssignment_2_0_2_0_4 = (Assignment)cGroup_2_0_2_0.eContents().get(4);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_0_4_0 = (RuleCall)cTypeAssignment_2_0_2_0_4.eContents().get(0);
		private final Group cGroup_2_0_2_1 = (Group)cAlternatives_2_0_2.eContents().get(1);
		private final Assignment cModifiersAssignment_2_0_2_1_0 = (Assignment)cGroup_2_0_2_1.eContents().get(0);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_0_2_1_0_0 = (RuleCall)cModifiersAssignment_2_0_2_1_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_1_1 = (Assignment)cGroup_2_0_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_2_1_1_0 = (RuleCall)cModifiersAssignment_2_0_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2_0_2_1_2 = (Alternatives)cGroup_2_0_2_1.eContents().get(2);
		private final Group cGroup_2_0_2_1_2_0 = (Group)cAlternatives_2_0_2_1_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2_1_2_0_0 = (Assignment)cGroup_2_0_2_1_2_0.eContents().get(0);
		private final Keyword cModifiersExtensionKeyword_2_0_2_1_2_0_0_0 = (Keyword)cModifiersAssignment_2_0_2_1_2_0_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_2_1_2_0_1 = (Assignment)cGroup_2_0_2_1_2_0.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_1_2_0_1_0 = (RuleCall)cNameAssignment_2_0_2_1_2_0_1.eContents().get(0);
		private final Keyword cColonKeyword_2_0_2_1_2_0_2 = (Keyword)cGroup_2_0_2_1_2_0.eContents().get(2);
		private final Assignment cTypeAssignment_2_0_2_1_2_0_3 = (Assignment)cGroup_2_0_2_1_2_0.eContents().get(3);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0_3_0 = (RuleCall)cTypeAssignment_2_0_2_1_2_0_3.eContents().get(0);
		private final Group cGroup_2_0_2_1_2_1 = (Group)cAlternatives_2_0_2_1_2.eContents().get(1);
		private final Assignment cNameAssignment_2_0_2_1_2_1_0 = (Assignment)cGroup_2_0_2_1_2_1.eContents().get(0);
		private final RuleCall cNameValidIDParserRuleCall_2_0_2_1_2_1_0_0 = (RuleCall)cNameAssignment_2_0_2_1_2_1_0.eContents().get(0);
		private final Group cGroup_2_0_2_1_2_1_1 = (Group)cGroup_2_0_2_1_2_1.eContents().get(1);
		private final Keyword cColonKeyword_2_0_2_1_2_1_1_0 = (Keyword)cGroup_2_0_2_1_2_1_1.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_2_1_2_1_1_1 = (Assignment)cGroup_2_0_2_1_2_1_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_1_1_1_0 = (RuleCall)cTypeAssignment_2_0_2_1_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_0_3 = (Group)cGroup_2_0.eContents().get(3);
		private final Keyword cEqualsSignKeyword_2_0_3_0 = (Keyword)cGroup_2_0_3.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_0_3_1 = (Assignment)cGroup_2_0_3.eContents().get(1);
		private final RuleCall cInitialValueXExpressionParserRuleCall_2_0_3_1_0 = (RuleCall)cInitialValueAssignment_2_0_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_0_4 = (Keyword)cGroup_2_0.eContents().get(4);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cSarlConstructorAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_1_1_0 = (RuleCall)cModifiersAssignment_2_1_1.eContents().get(0);
		private final Keyword cNewKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Group cGroup_2_1_3 = (Group)cGroup_2_1.eContents().get(3);
		private final Keyword cLessThanSignKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0 = (RuleCall)cTypeParametersAssignment_2_1_3_1.eContents().get(0);
		private final Group cGroup_2_1_3_2 = (Group)cGroup_2_1_3.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_3_2_0 = (Keyword)cGroup_2_1_3_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_3_2_1 = (Assignment)cGroup_2_1_3_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_1_3_3 = (Keyword)cGroup_2_1_3.eContents().get(3);
		private final Group cGroup_2_1_4 = (Group)cGroup_2_1.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Group cGroup_2_1_4_1 = (Group)cGroup_2_1_4.eContents().get(1);
		private final Assignment cParametersAssignment_2_1_4_1_0 = (Assignment)cGroup_2_1_4_1.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_1_4_1_0_0 = (RuleCall)cParametersAssignment_2_1_4_1_0.eContents().get(0);
		private final Group cGroup_2_1_4_1_1 = (Group)cGroup_2_1_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_4_1_1_0 = (Keyword)cGroup_2_1_4_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_1_4_1_1_1 = (Assignment)cGroup_2_1_4_1_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_1_4_1_1_1_0 = (RuleCall)cParametersAssignment_2_1_4_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_1_4_2 = (Keyword)cGroup_2_1_4.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_2_1_5 = (UnorderedGroup)cGroup_2_1.eContents().get(5);
		private final Group cGroup_2_1_5_0 = (Group)cUnorderedGroup_2_1_5.eContents().get(0);
		private final Keyword cThrowsKeyword_2_1_5_0_0 = (Keyword)cGroup_2_1_5_0.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_1_5_0_1 = (Assignment)cGroup_2_1_5_0.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_1_0 = (RuleCall)cExceptionsAssignment_2_1_5_0_1.eContents().get(0);
		private final Group cGroup_2_1_5_0_2 = (Group)cGroup_2_1_5_0.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_0_2_0 = (Keyword)cGroup_2_1_5_0_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_1_5_0_2_1 = (Assignment)cGroup_2_1_5_0_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_2_1_0 = (RuleCall)cExceptionsAssignment_2_1_5_0_2_1.eContents().get(0);
		private final Group cGroup_2_1_5_1 = (Group)cUnorderedGroup_2_1_5.eContents().get(1);
		private final Keyword cWithKeyword_2_1_5_1_0 = (Keyword)cGroup_2_1_5_1.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_5_1_1 = (Assignment)cGroup_2_1_5_1.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_1_0 = (RuleCall)cTypeParametersAssignment_2_1_5_1_1.eContents().get(0);
		private final Group cGroup_2_1_5_1_2 = (Group)cGroup_2_1_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_1_2_0 = (Keyword)cGroup_2_1_5_1_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_5_1_2_1 = (Assignment)cGroup_2_1_5_1_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_5_1_2_1.eContents().get(0);
		private final Assignment cExpressionAssignment_2_1_6 = (Assignment)cGroup_2_1.eContents().get(6);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_1_6_0 = (RuleCall)cExpressionAssignment_2_1_6.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Action cSarlActionAnnotationInfoAction_2_2_0 = (Action)cGroup_2_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_2_1_0 = (RuleCall)cModifiersAssignment_2_2_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cModifiersMethodModifierParserRuleCall_2_2_2_0 = (RuleCall)cModifiersAssignment_2_2_2.eContents().get(0);
		private final Alternatives cAlternatives_2_2_3 = (Alternatives)cGroup_2_2.eContents().get(3);
		private final Assignment cModifiersAssignment_2_2_3_0 = (Assignment)cAlternatives_2_2_3.eContents().get(0);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_2_3_0_0 = (RuleCall)cModifiersAssignment_2_2_3_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_2_3_1 = (Assignment)cAlternatives_2_2_3.eContents().get(1);
		private final RuleCall cModifiersMethodModifierParserRuleCall_2_2_3_1_0 = (RuleCall)cModifiersAssignment_2_2_3_1.eContents().get(0);
		private final Group cGroup_2_2_4 = (Group)cGroup_2_2.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_2_4_0 = (Keyword)cGroup_2_2_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_4_1 = (Assignment)cGroup_2_2_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0 = (RuleCall)cTypeParametersAssignment_2_2_4_1.eContents().get(0);
		private final Group cGroup_2_2_4_2 = (Group)cGroup_2_2_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_4_2_0 = (Keyword)cGroup_2_2_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_4_2_1 = (Assignment)cGroup_2_2_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_2_4_3 = (Keyword)cGroup_2_2_4.eContents().get(3);
		private final Assignment cNameAssignment_2_2_5 = (Assignment)cGroup_2_2.eContents().get(5);
		private final RuleCall cNameFunctionIDParserRuleCall_2_2_5_0 = (RuleCall)cNameAssignment_2_2_5.eContents().get(0);
		private final Group cGroup_2_2_6 = (Group)cGroup_2_2.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_2_2_6_0 = (Keyword)cGroup_2_2_6.eContents().get(0);
		private final Group cGroup_2_2_6_1 = (Group)cGroup_2_2_6.eContents().get(1);
		private final Assignment cParametersAssignment_2_2_6_1_0 = (Assignment)cGroup_2_2_6_1.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_2_2_6_1_0_0 = (RuleCall)cParametersAssignment_2_2_6_1_0.eContents().get(0);
		private final Group cGroup_2_2_6_1_1 = (Group)cGroup_2_2_6_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_2_6_1_1_0 = (Keyword)cGroup_2_2_6_1_1.eContents().get(0);
		private final Assignment cParametersAssignment_2_2_6_1_1_1 = (Assignment)cGroup_2_2_6_1_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_2_6_1_1_1_0 = (RuleCall)cParametersAssignment_2_2_6_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2_6_2 = (Keyword)cGroup_2_2_6.eContents().get(2);
		private final Group cGroup_2_2_7 = (Group)cGroup_2_2.eContents().get(7);
		private final Keyword cColonKeyword_2_2_7_0 = (Keyword)cGroup_2_2_7.eContents().get(0);
		private final Alternatives cAlternatives_2_2_7_1 = (Alternatives)cGroup_2_2_7.eContents().get(1);
		private final Assignment cReturnTypeAssignment_2_2_7_1_0 = (Assignment)cAlternatives_2_2_7_1.eContents().get(0);
		private final RuleCall cReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_2_7_1_0_0 = (RuleCall)cReturnTypeAssignment_2_2_7_1_0.eContents().get(0);
		private final Assignment cReturnTypeAssignment_2_2_7_1_1 = (Assignment)cAlternatives_2_2_7_1.eContents().get(1);
		private final RuleCall cReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_2_7_1_1_0 = (RuleCall)cReturnTypeAssignment_2_2_7_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_2_8 = (UnorderedGroup)cGroup_2_2.eContents().get(8);
		private final Group cGroup_2_2_8_0 = (Group)cUnorderedGroup_2_2_8.eContents().get(0);
		private final Keyword cThrowsKeyword_2_2_8_0_0 = (Keyword)cGroup_2_2_8_0.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_2_8_0_1 = (Assignment)cGroup_2_2_8_0.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_2_8_0_1_0 = (RuleCall)cExceptionsAssignment_2_2_8_0_1.eContents().get(0);
		private final Group cGroup_2_2_8_0_2 = (Group)cGroup_2_2_8_0.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_8_0_2_0 = (Keyword)cGroup_2_2_8_0_2.eContents().get(0);
		private final Assignment cExceptionsAssignment_2_2_8_0_2_1 = (Assignment)cGroup_2_2_8_0_2.eContents().get(1);
		private final RuleCall cExceptionsJvmTypeReferenceParserRuleCall_2_2_8_0_2_1_0 = (RuleCall)cExceptionsAssignment_2_2_8_0_2_1.eContents().get(0);
		private final Group cGroup_2_2_8_1 = (Group)cUnorderedGroup_2_2_8.eContents().get(1);
		private final Keyword cFiresKeyword_2_2_8_1_0 = (Keyword)cGroup_2_2_8_1.eContents().get(0);
		private final Assignment cFiredEventsAssignment_2_2_8_1_1 = (Assignment)cGroup_2_2_8_1.eContents().get(1);
		private final RuleCall cFiredEventsJvmTypeReferenceParserRuleCall_2_2_8_1_1_0 = (RuleCall)cFiredEventsAssignment_2_2_8_1_1.eContents().get(0);
		private final Group cGroup_2_2_8_1_2 = (Group)cGroup_2_2_8_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_8_1_2_0 = (Keyword)cGroup_2_2_8_1_2.eContents().get(0);
		private final Assignment cFiredEventsAssignment_2_2_8_1_2_1 = (Assignment)cGroup_2_2_8_1_2.eContents().get(1);
		private final RuleCall cFiredEventsJvmTypeReferenceParserRuleCall_2_2_8_1_2_1_0 = (RuleCall)cFiredEventsAssignment_2_2_8_1_2_1.eContents().get(0);
		private final Group cGroup_2_2_8_2 = (Group)cUnorderedGroup_2_2_8.eContents().get(2);
		private final Keyword cWithKeyword_2_2_8_2_0 = (Keyword)cGroup_2_2_8_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_8_2_1 = (Assignment)cGroup_2_2_8_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_8_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_8_2_1.eContents().get(0);
		private final Group cGroup_2_2_8_2_2 = (Group)cGroup_2_2_8_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_8_2_2_0 = (Keyword)cGroup_2_2_8_2_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_8_2_2_1 = (Assignment)cGroup_2_2_8_2_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_8_2_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_8_2_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2_2_9 = (Alternatives)cGroup_2_2.eContents().get(9);
		private final Assignment cExpressionAssignment_2_2_9_0 = (Assignment)cAlternatives_2_2_9.eContents().get(0);
		private final RuleCall cExpressionXBlockExpressionParserRuleCall_2_2_9_0_0 = (RuleCall)cExpressionAssignment_2_2_9_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_2_9_1 = (Keyword)cAlternatives_2_2_9.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Action cSarlClassAnnotationInfoAction_2_3_0 = (Action)cGroup_2_3.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_3_1_0 = (RuleCall)cModifiersAssignment_2_3_1.eContents().get(0);
		private final Keyword cClassKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final Assignment cNameAssignment_2_3_3 = (Assignment)cGroup_2_3.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_3_3_0 = (RuleCall)cNameAssignment_2_3_3.eContents().get(0);
		private final Group cGroup_2_3_4 = (Group)cGroup_2_3.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_3_4_0 = (Keyword)cGroup_2_3_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_3_4_1 = (Assignment)cGroup_2_3_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0 = (RuleCall)cTypeParametersAssignment_2_3_4_1.eContents().get(0);
		private final Group cGroup_2_3_4_2 = (Group)cGroup_2_3_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_4_2_0 = (Keyword)cGroup_2_3_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_3_4_2_1 = (Assignment)cGroup_2_3_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_3_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_3_4_3 = (Keyword)cGroup_2_3_4.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_2_3_5 = (UnorderedGroup)cGroup_2_3.eContents().get(5);
		private final Group cGroup_2_3_5_0 = (Group)cUnorderedGroup_2_3_5.eContents().get(0);
		private final Keyword cExtendsKeyword_2_3_5_0_0 = (Keyword)cGroup_2_3_5_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_3_5_0_1 = (Assignment)cGroup_2_3_5_0.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_0_1_0 = (RuleCall)cExtendsAssignment_2_3_5_0_1.eContents().get(0);
		private final Group cGroup_2_3_5_1 = (Group)cUnorderedGroup_2_3_5.eContents().get(1);
		private final Keyword cImplementsKeyword_2_3_5_1_0 = (Keyword)cGroup_2_3_5_1.eContents().get(0);
		private final Assignment cImplementsAssignment_2_3_5_1_1 = (Assignment)cGroup_2_3_5_1.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_1_0 = (RuleCall)cImplementsAssignment_2_3_5_1_1.eContents().get(0);
		private final Group cGroup_2_3_5_1_2 = (Group)cGroup_2_3_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_3_5_1_2_0 = (Keyword)cGroup_2_3_5_1_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_3_5_1_2_1 = (Assignment)cGroup_2_3_5_1_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_2_1_0 = (RuleCall)cImplementsAssignment_2_3_5_1_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_3_6 = (Keyword)cGroup_2_3.eContents().get(6);
		private final Assignment cMembersAssignment_2_3_7 = (Assignment)cGroup_2_3.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_3_7_0 = (RuleCall)cMembersAssignment_2_3_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3_8 = (Keyword)cGroup_2_3.eContents().get(8);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Action cSarlInterfaceAnnotationInfoAction_2_4_0 = (Action)cGroup_2_4.eContents().get(0);
		private final Assignment cModifiersAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_4_1_0 = (RuleCall)cModifiersAssignment_2_4_1.eContents().get(0);
		private final Keyword cInterfaceKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Assignment cNameAssignment_2_4_3 = (Assignment)cGroup_2_4.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_4_3_0 = (RuleCall)cNameAssignment_2_4_3.eContents().get(0);
		private final Group cGroup_2_4_4 = (Group)cGroup_2_4.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_4_4_0 = (Keyword)cGroup_2_4_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_4_4_1 = (Assignment)cGroup_2_4_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0 = (RuleCall)cTypeParametersAssignment_2_4_4_1.eContents().get(0);
		private final Group cGroup_2_4_4_2 = (Group)cGroup_2_4_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_4_2_0 = (Keyword)cGroup_2_4_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_4_4_2_1 = (Assignment)cGroup_2_4_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_4_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_4_4_3 = (Keyword)cGroup_2_4_4.eContents().get(3);
		private final Group cGroup_2_4_5 = (Group)cGroup_2_4.eContents().get(5);
		private final Keyword cExtendsKeyword_2_4_5_0 = (Keyword)cGroup_2_4_5.eContents().get(0);
		private final Assignment cExtendsAssignment_2_4_5_1 = (Assignment)cGroup_2_4_5.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0 = (RuleCall)cExtendsAssignment_2_4_5_1.eContents().get(0);
		private final Group cGroup_2_4_5_2 = (Group)cGroup_2_4_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_4_5_2_0 = (Keyword)cGroup_2_4_5_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_4_5_2_1 = (Assignment)cGroup_2_4_5_2.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0 = (RuleCall)cExtendsAssignment_2_4_5_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_4_6 = (Keyword)cGroup_2_4.eContents().get(6);
		private final Assignment cMembersAssignment_2_4_7 = (Assignment)cGroup_2_4.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_4_7_0 = (RuleCall)cMembersAssignment_2_4_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4_8 = (Keyword)cGroup_2_4.eContents().get(8);
		private final Group cGroup_2_5 = (Group)cAlternatives_2.eContents().get(5);
		private final Action cSarlEnumerationAnnotationInfoAction_2_5_0 = (Action)cGroup_2_5.eContents().get(0);
		private final Assignment cModifiersAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_5_1_0 = (RuleCall)cModifiersAssignment_2_5_1.eContents().get(0);
		private final Keyword cEnumKeyword_2_5_2 = (Keyword)cGroup_2_5.eContents().get(2);
		private final Assignment cNameAssignment_2_5_3 = (Assignment)cGroup_2_5.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_5_3_0 = (RuleCall)cNameAssignment_2_5_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_5_4 = (Keyword)cGroup_2_5.eContents().get(4);
		private final Group cGroup_2_5_5 = (Group)cGroup_2_5.eContents().get(5);
		private final Assignment cMembersAssignment_2_5_5_0 = (Assignment)cGroup_2_5_5.eContents().get(0);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_5_5_0_0 = (RuleCall)cMembersAssignment_2_5_5_0.eContents().get(0);
		private final Group cGroup_2_5_5_1 = (Group)cGroup_2_5_5.eContents().get(1);
		private final Keyword cCommaKeyword_2_5_5_1_0 = (Keyword)cGroup_2_5_5_1.eContents().get(0);
		private final Assignment cMembersAssignment_2_5_5_1_1 = (Assignment)cGroup_2_5_5_1.eContents().get(1);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_5_5_1_1_0 = (RuleCall)cMembersAssignment_2_5_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_5_6 = (Keyword)cGroup_2_5.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_2_5_7 = (Keyword)cGroup_2_5.eContents().get(7);
		private final Group cGroup_2_6 = (Group)cAlternatives_2.eContents().get(6);
		private final Action cSarlAnnotationTypeAnnotationInfoAction_2_6_0 = (Action)cGroup_2_6.eContents().get(0);
		private final Assignment cModifiersAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_6_1_0 = (RuleCall)cModifiersAssignment_2_6_1.eContents().get(0);
		private final Keyword cAnnotationKeyword_2_6_2 = (Keyword)cGroup_2_6.eContents().get(2);
		private final Assignment cNameAssignment_2_6_3 = (Assignment)cGroup_2_6.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_6_3_0 = (RuleCall)cNameAssignment_2_6_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_6_4 = (Keyword)cGroup_2_6.eContents().get(4);
		private final Assignment cMembersAssignment_2_6_5 = (Assignment)cGroup_2_6.eContents().get(5);
		private final RuleCall cMembersAnnotationFieldParserRuleCall_2_6_5_0 = (RuleCall)cMembersAssignment_2_6_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_6_6 = (Keyword)cGroup_2_6.eContents().get(6);
		
		//// Members for the object-oriented types
		//@Override
		//Member returns xtend::XtendMember:
		//    {xtend::XtendMember} annotations+=XAnnotation*
		//    (
		//        // Field
		//        {SarlField.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            modifiers+=FieldModifier
		//            modifiers+=CommonModifier*
		//            (
		//                modifiers += 'extension'
		//                name=ValidID ':' type=JvmTypeReference
		//            |
		//                name=ValidID (':' type=JvmTypeReference)?
		//            )
		//        )
		//        ('=' initialValue=XExpression)? ';'?
		//    |
		//        // Constructor
		//        {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//        'new'
		//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//          ')'
		//        )?
		//        ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//          &
		//          ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//        )
		//        expression=XBlockExpression
		//    |
		//        // Action
		//        {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//        modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        name=FunctionID
		//        (
		//            '('
		//            (    parameters+=Parameter
		//                (',' parameters+=Parameter)*
		//            )?
		//            ')'
		//        )?
		//        ( ':'
		//          (    (returnType=TypeReferenceWithTypeArgs)
		//              | (returnType=TypeReferenceNoTypeArgs) )
		//        )?
		//        (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//            &
		//            ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//            &
		//            ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//        )
		//        (expression=XBlockExpression | ';')?
		//    |
		//        // Class
		//        {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        (    ('extends' extends=JvmParameterizedTypeReference)?
		//            &
		//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//        )
		//        '{' members+=Member* '}'
		//    |
		//        // Interface
		//        {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//        '{' members+=Member* '}'
		//    |
		//        // Enum
		//        {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//        'enum' name=ValidID '{'
		//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//        '}'
		//    |
		//        // AnnotationType
		//        {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//        'annotation' name=ValidID
		//        '{' members+=AnnotationField* '}'
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendMember} annotations+=XAnnotation*
		//(
		//    // Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            name=ValidID (':' type=JvmTypeReference)?
		//        )
		//    )
		//    ('=' initialValue=XExpression)? ';'?
		//|
		//    // Constructor
		//    {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//    'new'
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//      ')'
		//    )?
		//    ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//      &
		//      ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    expression=XBlockExpression
		//|
		//    // Action
		//    {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//    modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    name=FunctionID
		//    (
		//        '('
		//        (    parameters+=Parameter
		//            (',' parameters+=Parameter)*
		//        )?
		//        ')'
		//    )?
		//    ( ':'
		//      (    (returnType=TypeReferenceWithTypeArgs)
		//          | (returnType=TypeReferenceNoTypeArgs) )
		//    )?
		//    (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//        &
		//        ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//        &
		//        ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    (expression=XBlockExpression | ';')?
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' members+=Member* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendMember}
		public Action getXtendMemberAction_0() { return cXtendMemberAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//(
		//    // Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        (
		//            modifiers += 'extension'
		//            name=ValidID ':' type=JvmTypeReference
		//        |
		//            name=ValidID (':' type=JvmTypeReference)?
		//        )
		//    )
		//    ('=' initialValue=XExpression)? ';'?
		//|
		//    // Constructor
		//    {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//    'new'
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//      ')'
		//    )?
		//    ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//      &
		//      ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    expression=XBlockExpression
		//|
		//    // Action
		//    {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//    modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    name=FunctionID
		//    (
		//        '('
		//        (    parameters+=Parameter
		//            (',' parameters+=Parameter)*
		//        )?
		//        ')'
		//    )?
		//    ( ':'
		//      (    (returnType=TypeReferenceWithTypeArgs)
		//          | (returnType=TypeReferenceNoTypeArgs) )
		//    )?
		//    (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//        &
		//        ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//        &
		//        ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//    )
		//    (expression=XBlockExpression | ';')?
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' members+=Member* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//// Field
		//{SarlField.annotationInfo = current}
		//modifiers+=CommonModifier*
		//(
		//    modifiers += 'extension'
		//    (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        name=ValidID (':' type=JvmTypeReference)?
		//    )
		//)
		//('=' initialValue=XExpression)? ';'?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//// Field
		//{SarlField.annotationInfo = current}
		public Action getSarlFieldAnnotationInfoAction_2_0_0() { return cSarlFieldAnnotationInfoAction_2_0_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_0_1() { return cModifiersAssignment_2_0_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_1_0; }
		
		//(
		//    modifiers += 'extension'
		//    (modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    (
		//        modifiers += 'extension'
		//        name=ValidID ':' type=JvmTypeReference
		//    |
		//        name=ValidID (':' type=JvmTypeReference)?
		//    )
		//)
		public Alternatives getAlternatives_2_0_2() { return cAlternatives_2_0_2; }
		
		//modifiers += 'extension'
		//(modifiers+=FieldModifier | modifiers+=CommonModifier)*
		//name=ValidID ':' type=JvmTypeReference
		public Group getGroup_2_0_2_0() { return cGroup_2_0_2_0; }
		
		//modifiers += 'extension'
		public Assignment getModifiersAssignment_2_0_2_0_0() { return cModifiersAssignment_2_0_2_0_0; }
		
		//'extension'
		public Keyword getModifiersExtensionKeyword_2_0_2_0_0_0() { return cModifiersExtensionKeyword_2_0_2_0_0_0; }
		
		//(modifiers+=FieldModifier | modifiers+=CommonModifier)*
		public Alternatives getAlternatives_2_0_2_0_1() { return cAlternatives_2_0_2_0_1; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_0_2_0_1_0() { return cModifiersAssignment_2_0_2_0_1_0; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_0_2_0_1_0_0() { return cModifiersFieldModifierParserRuleCall_2_0_2_0_1_0_0; }
		
		//modifiers+=CommonModifier
		public Assignment getModifiersAssignment_2_0_2_0_1_1() { return cModifiersAssignment_2_0_2_0_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_2_0_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_2_0_1_1_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_2_0_2() { return cNameAssignment_2_0_2_0_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_0_2_0() { return cNameValidIDParserRuleCall_2_0_2_0_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_0_2_0_3() { return cColonKeyword_2_0_2_0_3; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_0_4() { return cTypeAssignment_2_0_2_0_4; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_0_4_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_0_4_0; }
		
		//modifiers+=FieldModifier
		//modifiers+=CommonModifier*
		//(
		//    modifiers += 'extension'
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    name=ValidID (':' type=JvmTypeReference)?
		//)
		public Group getGroup_2_0_2_1() { return cGroup_2_0_2_1; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_0_2_1_0() { return cModifiersAssignment_2_0_2_1_0; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_0_2_1_0_0() { return cModifiersFieldModifierParserRuleCall_2_0_2_1_0_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_0_2_1_1() { return cModifiersAssignment_2_0_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_2_1_1_0; }
		
		//(
		//    modifiers += 'extension'
		//    name=ValidID ':' type=JvmTypeReference
		//|
		//    name=ValidID (':' type=JvmTypeReference)?
		//)
		public Alternatives getAlternatives_2_0_2_1_2() { return cAlternatives_2_0_2_1_2; }
		
		//modifiers += 'extension'
		//name=ValidID ':' type=JvmTypeReference
		public Group getGroup_2_0_2_1_2_0() { return cGroup_2_0_2_1_2_0; }
		
		//modifiers += 'extension'
		public Assignment getModifiersAssignment_2_0_2_1_2_0_0() { return cModifiersAssignment_2_0_2_1_2_0_0; }
		
		//'extension'
		public Keyword getModifiersExtensionKeyword_2_0_2_1_2_0_0_0() { return cModifiersExtensionKeyword_2_0_2_1_2_0_0_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_2_1_2_0_1() { return cNameAssignment_2_0_2_1_2_0_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_1_2_0_1_0() { return cNameValidIDParserRuleCall_2_0_2_1_2_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_2_0_2_1_2_0_2() { return cColonKeyword_2_0_2_1_2_0_2; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_1_2_0_3() { return cTypeAssignment_2_0_2_1_2_0_3; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0_3_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0_3_0; }
		
		//name=ValidID (':' type=JvmTypeReference)?
		public Group getGroup_2_0_2_1_2_1() { return cGroup_2_0_2_1_2_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_2_1_2_1_0() { return cNameAssignment_2_0_2_1_2_1_0; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_2_1_2_1_0_0() { return cNameValidIDParserRuleCall_2_0_2_1_2_1_0_0; }
		
		//(':' type=JvmTypeReference)?
		public Group getGroup_2_0_2_1_2_1_1() { return cGroup_2_0_2_1_2_1_1; }
		
		//':'
		public Keyword getColonKeyword_2_0_2_1_2_1_1_0() { return cColonKeyword_2_0_2_1_2_1_1_0; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_2_1_2_1_1_1() { return cTypeAssignment_2_0_2_1_2_1_1_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_1_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_1_1_1_0; }
		
		//('=' initialValue=XExpression)?
		public Group getGroup_2_0_3() { return cGroup_2_0_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_3_0() { return cEqualsSignKeyword_2_0_3_0; }
		
		//initialValue=XExpression
		public Assignment getInitialValueAssignment_2_0_3_1() { return cInitialValueAssignment_2_0_3_1; }
		
		//XExpression
		public RuleCall getInitialValueXExpressionParserRuleCall_2_0_3_1_0() { return cInitialValueXExpressionParserRuleCall_2_0_3_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_0_4() { return cSemicolonKeyword_2_0_4; }
		
		//// Constructor
		//{SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
		//'new'
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//  ')'
		//)?
		//( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//  &
		//  ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		//expression=XBlockExpression
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//// Constructor
		//{SarlConstructor.annotationInfo = current}
		public Action getSarlConstructorAnnotationInfoAction_2_1_0() { return cSarlConstructorAnnotationInfoAction_2_1_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_1_1() { return cModifiersAssignment_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_1_1_0; }
		
		//'new'
		public Keyword getNewKeyword_2_1_2() { return cNewKeyword_2_1_2; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_1_3_0() { return cLessThanSignKeyword_2_1_3_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_3_1() { return cTypeParametersAssignment_2_1_3_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_3_2() { return cGroup_2_1_3_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_3_2_0() { return cCommaKeyword_2_1_3_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_3_2_1() { return cTypeParametersAssignment_2_1_3_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_3_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_3_3() { return cGreaterThanSignKeyword_2_1_3_3; }
		
		//('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
		//  ')'
		//)?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1_4_0() { return cLeftParenthesisKeyword_2_1_4_0; }
		
		//(parameters+=Parameter (',' parameters+=Parameter)*)?
		public Group getGroup_2_1_4_1() { return cGroup_2_1_4_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_1_4_1_0() { return cParametersAssignment_2_1_4_1_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_4_1_0_0() { return cParametersParameterParserRuleCall_2_1_4_1_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_2_1_4_1_1() { return cGroup_2_1_4_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_4_1_1_0() { return cCommaKeyword_2_1_4_1_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_1_4_1_1_1() { return cParametersAssignment_2_1_4_1_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_4_1_1_1_0() { return cParametersParameterParserRuleCall_2_1_4_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_1_4_2() { return cRightParenthesisKeyword_2_1_4_2; }
		
		//( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//  &
		//  ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_1_5() { return cUnorderedGroup_2_1_5; }
		
		//('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_1_5_0() { return cGroup_2_1_5_0; }
		
		//'throws'
		public Keyword getThrowsKeyword_2_1_5_0_0() { return cThrowsKeyword_2_1_5_0_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_1_5_0_1() { return cExceptionsAssignment_2_1_5_0_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_1_0; }
		
		//(',' exceptions+=JvmTypeReference)*
		public Group getGroup_2_1_5_0_2() { return cGroup_2_1_5_0_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_5_0_2_0() { return cCommaKeyword_2_1_5_0_2_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_1_5_0_2_1() { return cExceptionsAssignment_2_1_5_0_2_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_1_5_0_2_1_0; }
		
		//('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		public Group getGroup_2_1_5_1() { return cGroup_2_1_5_1; }
		
		//'with'
		public Keyword getWithKeyword_2_1_5_1_0() { return cWithKeyword_2_1_5_1_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_5_1_1() { return cTypeParametersAssignment_2_1_5_1_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_5_1_2() { return cGroup_2_1_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_5_1_2_0() { return cCommaKeyword_2_1_5_1_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_5_1_2_1() { return cTypeParametersAssignment_2_1_5_1_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_5_1_2_1_0; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_1_6() { return cExpressionAssignment_2_1_6; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_1_6_0() { return cExpressionXBlockExpressionParserRuleCall_2_1_6_0; }
		
		//// Action
		//{SarlAction.annotationInfo = current} modifiers+=CommonModifier*
		//modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//name=FunctionID
		//(
		//    '('
		//    (    parameters+=Parameter
		//        (',' parameters+=Parameter)*
		//    )?
		//    ')'
		//)?
		//( ':'
		//  (    (returnType=TypeReferenceWithTypeArgs)
		//      | (returnType=TypeReferenceNoTypeArgs) )
		//)?
		//(    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//    &
		//    ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//    &
		//    ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		//(expression=XBlockExpression | ';')?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//// Action
		//{SarlAction.annotationInfo = current}
		public Action getSarlActionAnnotationInfoAction_2_2_0() { return cSarlActionAnnotationInfoAction_2_2_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_2_1() { return cModifiersAssignment_2_2_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_2_1_0() { return cModifiersCommonModifierParserRuleCall_2_2_1_0; }
		
		//modifiers+=MethodModifier
		public Assignment getModifiersAssignment_2_2_2() { return cModifiersAssignment_2_2_2; }
		
		//MethodModifier
		public RuleCall getModifiersMethodModifierParserRuleCall_2_2_2_0() { return cModifiersMethodModifierParserRuleCall_2_2_2_0; }
		
		//(modifiers+=CommonModifier | modifiers+=MethodModifier)*
		public Alternatives getAlternatives_2_2_3() { return cAlternatives_2_2_3; }
		
		//modifiers+=CommonModifier
		public Assignment getModifiersAssignment_2_2_3_0() { return cModifiersAssignment_2_2_3_0; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_2_3_0_0() { return cModifiersCommonModifierParserRuleCall_2_2_3_0_0; }
		
		//modifiers+=MethodModifier
		public Assignment getModifiersAssignment_2_2_3_1() { return cModifiersAssignment_2_2_3_1; }
		
		//MethodModifier
		public RuleCall getModifiersMethodModifierParserRuleCall_2_2_3_1_0() { return cModifiersMethodModifierParserRuleCall_2_2_3_1_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_2_4() { return cGroup_2_2_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_2_4_0() { return cLessThanSignKeyword_2_2_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_4_1() { return cTypeParametersAssignment_2_2_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_2_4_2() { return cGroup_2_2_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_4_2_0() { return cCommaKeyword_2_2_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_4_2_1() { return cTypeParametersAssignment_2_2_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_2_4_3() { return cGreaterThanSignKeyword_2_2_4_3; }
		
		//name=FunctionID
		public Assignment getNameAssignment_2_2_5() { return cNameAssignment_2_2_5; }
		
		//FunctionID
		public RuleCall getNameFunctionIDParserRuleCall_2_2_5_0() { return cNameFunctionIDParserRuleCall_2_2_5_0; }
		
		//(
		//    '('
		//    (    parameters+=Parameter
		//        (',' parameters+=Parameter)*
		//    )?
		//    ')'
		//)?
		public Group getGroup_2_2_6() { return cGroup_2_2_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_2_6_0() { return cLeftParenthesisKeyword_2_2_6_0; }
		
		//(    parameters+=Parameter
		//    (',' parameters+=Parameter)*
		//)?
		public Group getGroup_2_2_6_1() { return cGroup_2_2_6_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_2_6_1_0() { return cParametersAssignment_2_2_6_1_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_2_6_1_0_0() { return cParametersParameterParserRuleCall_2_2_6_1_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_2_2_6_1_1() { return cGroup_2_2_6_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_2_6_1_1_0() { return cCommaKeyword_2_2_6_1_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_2_2_6_1_1_1() { return cParametersAssignment_2_2_6_1_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_2_6_1_1_1_0() { return cParametersParameterParserRuleCall_2_2_6_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2_6_2() { return cRightParenthesisKeyword_2_2_6_2; }
		
		//( ':'
		//  (    (returnType=TypeReferenceWithTypeArgs)
		//      | (returnType=TypeReferenceNoTypeArgs) )
		//)?
		public Group getGroup_2_2_7() { return cGroup_2_2_7; }
		
		//':'
		public Keyword getColonKeyword_2_2_7_0() { return cColonKeyword_2_2_7_0; }
		
		//(    (returnType=TypeReferenceWithTypeArgs)
		//    | (returnType=TypeReferenceNoTypeArgs) )
		public Alternatives getAlternatives_2_2_7_1() { return cAlternatives_2_2_7_1; }
		
		//(returnType=TypeReferenceWithTypeArgs)
		public Assignment getReturnTypeAssignment_2_2_7_1_0() { return cReturnTypeAssignment_2_2_7_1_0; }
		
		//TypeReferenceWithTypeArgs
		public RuleCall getReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_2_7_1_0_0() { return cReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_2_7_1_0_0; }
		
		//(returnType=TypeReferenceNoTypeArgs)
		public Assignment getReturnTypeAssignment_2_2_7_1_1() { return cReturnTypeAssignment_2_2_7_1_1; }
		
		//TypeReferenceNoTypeArgs
		public RuleCall getReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_2_7_1_1_0() { return cReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_2_7_1_1_0; }
		
		//(    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		//    &
		//    ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		//    &
		//    ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_2_8() { return cUnorderedGroup_2_2_8; }
		
		//('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
		public Group getGroup_2_2_8_0() { return cGroup_2_2_8_0; }
		
		//'throws'
		public Keyword getThrowsKeyword_2_2_8_0_0() { return cThrowsKeyword_2_2_8_0_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_2_8_0_1() { return cExceptionsAssignment_2_2_8_0_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_2_8_0_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_2_8_0_1_0; }
		
		//(',' exceptions+=JvmTypeReference)*
		public Group getGroup_2_2_8_0_2() { return cGroup_2_2_8_0_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_8_0_2_0() { return cCommaKeyword_2_2_8_0_2_0; }
		
		//exceptions+=JvmTypeReference
		public Assignment getExceptionsAssignment_2_2_8_0_2_1() { return cExceptionsAssignment_2_2_8_0_2_1; }
		
		//JvmTypeReference
		public RuleCall getExceptionsJvmTypeReferenceParserRuleCall_2_2_8_0_2_1_0() { return cExceptionsJvmTypeReferenceParserRuleCall_2_2_8_0_2_1_0; }
		
		//('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
		public Group getGroup_2_2_8_1() { return cGroup_2_2_8_1; }
		
		//'fires'
		public Keyword getFiresKeyword_2_2_8_1_0() { return cFiresKeyword_2_2_8_1_0; }
		
		//firedEvents+=JvmTypeReference
		public Assignment getFiredEventsAssignment_2_2_8_1_1() { return cFiredEventsAssignment_2_2_8_1_1; }
		
		//JvmTypeReference
		public RuleCall getFiredEventsJvmTypeReferenceParserRuleCall_2_2_8_1_1_0() { return cFiredEventsJvmTypeReferenceParserRuleCall_2_2_8_1_1_0; }
		
		//(',' firedEvents+=JvmTypeReference)*
		public Group getGroup_2_2_8_1_2() { return cGroup_2_2_8_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_8_1_2_0() { return cCommaKeyword_2_2_8_1_2_0; }
		
		//firedEvents+=JvmTypeReference
		public Assignment getFiredEventsAssignment_2_2_8_1_2_1() { return cFiredEventsAssignment_2_2_8_1_2_1; }
		
		//JvmTypeReference
		public RuleCall getFiredEventsJvmTypeReferenceParserRuleCall_2_2_8_1_2_1_0() { return cFiredEventsJvmTypeReferenceParserRuleCall_2_2_8_1_2_1_0; }
		
		//('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
		public Group getGroup_2_2_8_2() { return cGroup_2_2_8_2; }
		
		//'with'
		public Keyword getWithKeyword_2_2_8_2_0() { return cWithKeyword_2_2_8_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_8_2_1() { return cTypeParametersAssignment_2_2_8_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_8_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_8_2_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_2_8_2_2() { return cGroup_2_2_8_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_8_2_2_0() { return cCommaKeyword_2_2_8_2_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_8_2_2_1() { return cTypeParametersAssignment_2_2_8_2_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_8_2_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_8_2_2_1_0; }
		
		//(expression=XBlockExpression | ';')?
		public Alternatives getAlternatives_2_2_9() { return cAlternatives_2_2_9; }
		
		//expression=XBlockExpression
		public Assignment getExpressionAssignment_2_2_9_0() { return cExpressionAssignment_2_2_9_0; }
		
		//XBlockExpression
		public RuleCall getExpressionXBlockExpressionParserRuleCall_2_2_9_0_0() { return cExpressionXBlockExpressionParserRuleCall_2_2_9_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_2_9_1() { return cSemicolonKeyword_2_2_9_1; }
		
		//// Class
		//{SarlClass.annotationInfo = current} modifiers+=CommonModifier*
		//'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		//'{' members+=Member* '}'
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//// Class
		//{SarlClass.annotationInfo = current}
		public Action getSarlClassAnnotationInfoAction_2_3_0() { return cSarlClassAnnotationInfoAction_2_3_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_3_1() { return cModifiersAssignment_2_3_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_3_1_0() { return cModifiersCommonModifierParserRuleCall_2_3_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2_3_2() { return cClassKeyword_2_3_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_3_3() { return cNameAssignment_2_3_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_3_0() { return cNameValidIDParserRuleCall_2_3_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_3_4() { return cGroup_2_3_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_3_4_0() { return cLessThanSignKeyword_2_3_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_3_4_1() { return cTypeParametersAssignment_2_3_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_3_4_2() { return cGroup_2_3_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_3_4_2_0() { return cCommaKeyword_2_3_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_3_4_2_1() { return cTypeParametersAssignment_2_3_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_3_4_3() { return cGreaterThanSignKeyword_2_3_4_3; }
		
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_3_5() { return cUnorderedGroup_2_3_5; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_3_5_0() { return cGroup_2_3_5_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_3_5_0_0() { return cExtendsKeyword_2_3_5_0_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_3_5_0_1() { return cExtendsAssignment_2_3_5_0_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_0_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_0_1_0; }
		
		//('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_3_5_1() { return cGroup_2_3_5_1; }
		
		//'implements'
		public Keyword getImplementsKeyword_2_3_5_1_0() { return cImplementsKeyword_2_3_5_1_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_3_5_1_1() { return cImplementsAssignment_2_3_5_1_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_1_0; }
		
		//(',' implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_3_5_1_2() { return cGroup_2_3_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_3_5_1_2_0() { return cCommaKeyword_2_3_5_1_2_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_3_5_1_2_1() { return cImplementsAssignment_2_3_5_1_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_3_6() { return cLeftCurlyBracketKeyword_2_3_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_3_7() { return cMembersAssignment_2_3_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_3_7_0() { return cMembersMemberParserRuleCall_2_3_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3_8() { return cRightCurlyBracketKeyword_2_3_8; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
		//'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//'{' members+=Member* '}'
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current}
		public Action getSarlInterfaceAnnotationInfoAction_2_4_0() { return cSarlInterfaceAnnotationInfoAction_2_4_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_4_1() { return cModifiersAssignment_2_4_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_4_1_0() { return cModifiersCommonModifierParserRuleCall_2_4_1_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_2_4_2() { return cInterfaceKeyword_2_4_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_4_3() { return cNameAssignment_2_4_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_4_3_0() { return cNameValidIDParserRuleCall_2_4_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_4_4() { return cGroup_2_4_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_4_4_0() { return cLessThanSignKeyword_2_4_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_4_4_1() { return cTypeParametersAssignment_2_4_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_4_4_2() { return cGroup_2_4_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_4_2_0() { return cCommaKeyword_2_4_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_4_4_2_1() { return cTypeParametersAssignment_2_4_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_4_4_3() { return cGreaterThanSignKeyword_2_4_4_3; }
		
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_4_5() { return cGroup_2_4_5; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_4_5_0() { return cExtendsKeyword_2_4_5_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_4_5_1() { return cExtendsAssignment_2_4_5_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0; }
		
		//(',' extends+=JvmParameterizedTypeReference)*
		public Group getGroup_2_4_5_2() { return cGroup_2_4_5_2; }
		
		//','
		public Keyword getCommaKeyword_2_4_5_2_0() { return cCommaKeyword_2_4_5_2_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_4_5_2_1() { return cExtendsAssignment_2_4_5_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_4_6() { return cLeftCurlyBracketKeyword_2_4_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_4_7() { return cMembersAssignment_2_4_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_4_7_0() { return cMembersMemberParserRuleCall_2_4_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4_8() { return cRightCurlyBracketKeyword_2_4_8; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
		//'enum' name=ValidID '{'
		//   (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//'}'
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current}
		public Action getSarlEnumerationAnnotationInfoAction_2_5_0() { return cSarlEnumerationAnnotationInfoAction_2_5_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_5_1() { return cModifiersAssignment_2_5_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_5_1_0() { return cModifiersCommonModifierParserRuleCall_2_5_1_0; }
		
		//'enum'
		public Keyword getEnumKeyword_2_5_2() { return cEnumKeyword_2_5_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_5_3() { return cNameAssignment_2_5_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_5_3_0() { return cNameValidIDParserRuleCall_2_5_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_5_4() { return cLeftCurlyBracketKeyword_2_5_4; }
		
		//(members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)?
		public Group getGroup_2_5_5() { return cGroup_2_5_5; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_5_5_0() { return cMembersAssignment_2_5_5_0; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_5_5_0_0() { return cMembersXtendEnumLiteralParserRuleCall_2_5_5_0_0; }
		
		//(',' members+=XtendEnumLiteral)*
		public Group getGroup_2_5_5_1() { return cGroup_2_5_5_1; }
		
		//','
		public Keyword getCommaKeyword_2_5_5_1_0() { return cCommaKeyword_2_5_5_1_0; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_5_5_1_1() { return cMembersAssignment_2_5_5_1_1; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_5_5_1_1_0() { return cMembersXtendEnumLiteralParserRuleCall_2_5_5_1_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_5_6() { return cSemicolonKeyword_2_5_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_5_7() { return cRightCurlyBracketKeyword_2_5_7; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
		//'annotation' name=ValidID
		//'{' members+=AnnotationField* '}'
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current}
		public Action getSarlAnnotationTypeAnnotationInfoAction_2_6_0() { return cSarlAnnotationTypeAnnotationInfoAction_2_6_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_6_1() { return cModifiersAssignment_2_6_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_6_1_0() { return cModifiersCommonModifierParserRuleCall_2_6_1_0; }
		
		//'annotation'
		public Keyword getAnnotationKeyword_2_6_2() { return cAnnotationKeyword_2_6_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_6_3() { return cNameAssignment_2_6_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_6_3_0() { return cNameValidIDParserRuleCall_2_6_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_6_4() { return cLeftCurlyBracketKeyword_2_6_4; }
		
		//members+=AnnotationField*
		public Assignment getMembersAssignment_2_6_5() { return cMembersAssignment_2_6_5; }
		
		//AnnotationField
		public RuleCall getMembersAnnotationFieldParserRuleCall_2_6_5_0() { return cMembersAnnotationFieldParserRuleCall_2_6_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_6_6() { return cRightCurlyBracketKeyword_2_6_6; }
	}
	public class AnnotationFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.AnnotationField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendMemberAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Action cSarlFieldAnnotationInfoAction_2_0_0 = (Action)cGroup_2_0.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_1_0 = (RuleCall)cModifiersAssignment_2_0_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cModifiersFieldModifierParserRuleCall_2_0_2_0 = (RuleCall)cModifiersAssignment_2_0_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_0_3_0 = (RuleCall)cModifiersAssignment_2_0_3.eContents().get(0);
		private final Assignment cNameAssignment_2_0_4 = (Assignment)cGroup_2_0.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_2_0_4_0 = (RuleCall)cNameAssignment_2_0_4.eContents().get(0);
		private final Group cGroup_2_0_5 = (Group)cGroup_2_0.eContents().get(5);
		private final Keyword cColonKeyword_2_0_5_0 = (Keyword)cGroup_2_0_5.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_5_1 = (Assignment)cGroup_2_0_5.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_5_1_0 = (RuleCall)cTypeAssignment_2_0_5_1.eContents().get(0);
		private final Group cGroup_2_0_6 = (Group)cGroup_2_0.eContents().get(6);
		private final Keyword cEqualsSignKeyword_2_0_6_0 = (Keyword)cGroup_2_0_6.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_0_6_1 = (Assignment)cGroup_2_0_6.eContents().get(1);
		private final RuleCall cInitialValueXAnnotationElementValueParserRuleCall_2_0_6_1_0 = (RuleCall)cInitialValueAssignment_2_0_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_0_7 = (Keyword)cGroup_2_0.eContents().get(7);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Action cSarlClassAnnotationInfoAction_2_1_0 = (Action)cGroup_2_1.eContents().get(0);
		private final Assignment cModifiersAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_1_1_0 = (RuleCall)cModifiersAssignment_2_1_1.eContents().get(0);
		private final Keyword cClassKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Assignment cNameAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_1_3_0 = (RuleCall)cNameAssignment_2_1_3.eContents().get(0);
		private final Group cGroup_2_1_4 = (Group)cGroup_2_1.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_4_1 = (Assignment)cGroup_2_1_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0 = (RuleCall)cTypeParametersAssignment_2_1_4_1.eContents().get(0);
		private final Group cGroup_2_1_4_2 = (Group)cGroup_2_1_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_4_2_0 = (Keyword)cGroup_2_1_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_1_4_2_1 = (Assignment)cGroup_2_1_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_1_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_1_4_3 = (Keyword)cGroup_2_1_4.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_2_1_5 = (UnorderedGroup)cGroup_2_1.eContents().get(5);
		private final Group cGroup_2_1_5_0 = (Group)cUnorderedGroup_2_1_5.eContents().get(0);
		private final Keyword cExtendsKeyword_2_1_5_0_0 = (Keyword)cGroup_2_1_5_0.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1_5_0_1 = (Assignment)cGroup_2_1_5_0.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_0_1_0 = (RuleCall)cExtendsAssignment_2_1_5_0_1.eContents().get(0);
		private final Group cGroup_2_1_5_1 = (Group)cUnorderedGroup_2_1_5.eContents().get(1);
		private final Keyword cImplementsKeyword_2_1_5_1_0 = (Keyword)cGroup_2_1_5_1.eContents().get(0);
		private final Assignment cImplementsAssignment_2_1_5_1_1 = (Assignment)cGroup_2_1_5_1.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_1_0 = (RuleCall)cImplementsAssignment_2_1_5_1_1.eContents().get(0);
		private final Group cGroup_2_1_5_1_2 = (Group)cGroup_2_1_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_5_1_2_0 = (Keyword)cGroup_2_1_5_1_2.eContents().get(0);
		private final Assignment cImplementsAssignment_2_1_5_1_2_1 = (Assignment)cGroup_2_1_5_1_2.eContents().get(1);
		private final RuleCall cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_2_1_0 = (RuleCall)cImplementsAssignment_2_1_5_1_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1_6 = (Keyword)cGroup_2_1.eContents().get(6);
		private final Assignment cMembersAssignment_2_1_7 = (Assignment)cGroup_2_1.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_1_7_0 = (RuleCall)cMembersAssignment_2_1_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_8 = (Keyword)cGroup_2_1.eContents().get(8);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Action cSarlInterfaceAnnotationInfoAction_2_2_0 = (Action)cGroup_2_2.eContents().get(0);
		private final Assignment cModifiersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_2_1_0 = (RuleCall)cModifiersAssignment_2_2_1.eContents().get(0);
		private final Keyword cInterfaceKeyword_2_2_2 = (Keyword)cGroup_2_2.eContents().get(2);
		private final Assignment cNameAssignment_2_2_3 = (Assignment)cGroup_2_2.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_2_3_0 = (RuleCall)cNameAssignment_2_2_3.eContents().get(0);
		private final Group cGroup_2_2_4 = (Group)cGroup_2_2.eContents().get(4);
		private final Keyword cLessThanSignKeyword_2_2_4_0 = (Keyword)cGroup_2_2_4.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_4_1 = (Assignment)cGroup_2_2_4.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0 = (RuleCall)cTypeParametersAssignment_2_2_4_1.eContents().get(0);
		private final Group cGroup_2_2_4_2 = (Group)cGroup_2_2_4.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_4_2_0 = (Keyword)cGroup_2_2_4_2.eContents().get(0);
		private final Assignment cTypeParametersAssignment_2_2_4_2_1 = (Assignment)cGroup_2_2_4_2.eContents().get(1);
		private final RuleCall cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0 = (RuleCall)cTypeParametersAssignment_2_2_4_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_2_4_3 = (Keyword)cGroup_2_2_4.eContents().get(3);
		private final Group cGroup_2_2_5 = (Group)cGroup_2_2.eContents().get(5);
		private final Keyword cExtendsKeyword_2_2_5_0 = (Keyword)cGroup_2_2_5.eContents().get(0);
		private final Assignment cExtendsAssignment_2_2_5_1 = (Assignment)cGroup_2_2_5.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0 = (RuleCall)cExtendsAssignment_2_2_5_1.eContents().get(0);
		private final Group cGroup_2_2_5_2 = (Group)cGroup_2_2_5.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_5_2_0 = (Keyword)cGroup_2_2_5_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_2_5_2_1 = (Assignment)cGroup_2_2_5_2.eContents().get(1);
		private final RuleCall cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0 = (RuleCall)cExtendsAssignment_2_2_5_2_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_2_6 = (Keyword)cGroup_2_2.eContents().get(6);
		private final Assignment cMembersAssignment_2_2_7 = (Assignment)cGroup_2_2.eContents().get(7);
		private final RuleCall cMembersMemberParserRuleCall_2_2_7_0 = (RuleCall)cMembersAssignment_2_2_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2_8 = (Keyword)cGroup_2_2.eContents().get(8);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Action cSarlEnumerationAnnotationInfoAction_2_3_0 = (Action)cGroup_2_3.eContents().get(0);
		private final Assignment cModifiersAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_3_1_0 = (RuleCall)cModifiersAssignment_2_3_1.eContents().get(0);
		private final Keyword cEnumKeyword_2_3_2 = (Keyword)cGroup_2_3.eContents().get(2);
		private final Assignment cNameAssignment_2_3_3 = (Assignment)cGroup_2_3.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_3_3_0 = (RuleCall)cNameAssignment_2_3_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_3_4 = (Keyword)cGroup_2_3.eContents().get(4);
		private final Group cGroup_2_3_5 = (Group)cGroup_2_3.eContents().get(5);
		private final Assignment cMembersAssignment_2_3_5_0 = (Assignment)cGroup_2_3_5.eContents().get(0);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_3_5_0_0 = (RuleCall)cMembersAssignment_2_3_5_0.eContents().get(0);
		private final Group cGroup_2_3_5_1 = (Group)cGroup_2_3_5.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_5_1_0 = (Keyword)cGroup_2_3_5_1.eContents().get(0);
		private final Assignment cMembersAssignment_2_3_5_1_1 = (Assignment)cGroup_2_3_5_1.eContents().get(1);
		private final RuleCall cMembersXtendEnumLiteralParserRuleCall_2_3_5_1_1_0 = (RuleCall)cMembersAssignment_2_3_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3_6 = (Keyword)cGroup_2_3.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_2_3_7 = (Keyword)cGroup_2_3.eContents().get(7);
		private final Group cGroup_2_4 = (Group)cAlternatives_2.eContents().get(4);
		private final Action cSarlAnnotationTypeAnnotationInfoAction_2_4_0 = (Action)cGroup_2_4.eContents().get(0);
		private final Assignment cModifiersAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cModifiersCommonModifierParserRuleCall_2_4_1_0 = (RuleCall)cModifiersAssignment_2_4_1.eContents().get(0);
		private final Keyword cAnnotationKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Assignment cNameAssignment_2_4_3 = (Assignment)cGroup_2_4.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_2_4_3_0 = (RuleCall)cNameAssignment_2_4_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_4_4 = (Keyword)cGroup_2_4.eContents().get(4);
		private final Assignment cMembersAssignment_2_4_5 = (Assignment)cGroup_2_4.eContents().get(5);
		private final RuleCall cMembersAnnotationFieldParserRuleCall_2_4_5_0 = (RuleCall)cMembersAssignment_2_4_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4_6 = (Keyword)cGroup_2_4.eContents().get(6);
		
		//@Override
		//AnnotationField returns xtend::XtendMember:
		//    {xtend::XtendMember} annotations+=XAnnotation*
		//    (
		//        // Annotation Field
		//        {SarlField.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        modifiers+=FieldModifier
		//        modifiers+=CommonModifier*
		//        name=ValidID
		//        (':' type=JvmTypeReference)?
		//        ('=' initialValue=XAnnotationElementValue)? ';'?
		//    |
		//        // Class
		//        {SarlClass.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        (    ('extends' extends=JvmParameterizedTypeReference)?
		//            &
		//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//        )
		//        '{' members+=Member* '}'
		//    |
		//        // Interface
		//        {SarlInterface.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//        '{' members+=Member* '}'
		//    |
		//        // Enum
		//        {SarlEnumeration.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'enum' name=ValidID '{'
		//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//        '}'
		//    |
		//        // AnnotationType
		//        {SarlAnnotationType.annotationInfo = current}
		//        modifiers+=CommonModifier*
		//        'annotation' name=ValidID
		//        '{' members+=AnnotationField* '}'
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendMember} annotations+=XAnnotation*
		//(
		//    // Annotation Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    name=ValidID
		//    (':' type=JvmTypeReference)?
		//    ('=' initialValue=XAnnotationElementValue)? ';'?
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' members+=Member* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendMember}
		public Action getXtendMemberAction_0() { return cXtendMemberAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//(
		//    // Annotation Field
		//    {SarlField.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    modifiers+=FieldModifier
		//    modifiers+=CommonModifier*
		//    name=ValidID
		//    (':' type=JvmTypeReference)?
		//    ('=' initialValue=XAnnotationElementValue)? ';'?
		//|
		//    // Class
		//    {SarlClass.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    (    ('extends' extends=JvmParameterizedTypeReference)?
		//        &
		//        ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//    )
		//    '{' members+=Member* '}'
		//|
		//    // Interface
		//    {SarlInterface.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//    ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//    '{' members+=Member* '}'
		//|
		//    // Enum
		//    {SarlEnumeration.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'enum' name=ValidID '{'
		//       (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//    '}'
		//|
		//    // AnnotationType
		//    {SarlAnnotationType.annotationInfo = current}
		//    modifiers+=CommonModifier*
		//    'annotation' name=ValidID
		//    '{' members+=AnnotationField* '}'
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//// Annotation Field
		//{SarlField.annotationInfo = current}
		//modifiers+=CommonModifier*
		//modifiers+=FieldModifier
		//modifiers+=CommonModifier*
		//name=ValidID
		//(':' type=JvmTypeReference)?
		//('=' initialValue=XAnnotationElementValue)? ';'?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//// Annotation Field
		//{SarlField.annotationInfo = current}
		public Action getSarlFieldAnnotationInfoAction_2_0_0() { return cSarlFieldAnnotationInfoAction_2_0_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_0_1() { return cModifiersAssignment_2_0_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_1_0() { return cModifiersCommonModifierParserRuleCall_2_0_1_0; }
		
		//modifiers+=FieldModifier
		public Assignment getModifiersAssignment_2_0_2() { return cModifiersAssignment_2_0_2; }
		
		//FieldModifier
		public RuleCall getModifiersFieldModifierParserRuleCall_2_0_2_0() { return cModifiersFieldModifierParserRuleCall_2_0_2_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_0_3() { return cModifiersAssignment_2_0_3; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_0_3_0() { return cModifiersCommonModifierParserRuleCall_2_0_3_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_0_4() { return cNameAssignment_2_0_4; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0_4_0() { return cNameValidIDParserRuleCall_2_0_4_0; }
		
		//(':' type=JvmTypeReference)?
		public Group getGroup_2_0_5() { return cGroup_2_0_5; }
		
		//':'
		public Keyword getColonKeyword_2_0_5_0() { return cColonKeyword_2_0_5_0; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_5_1() { return cTypeAssignment_2_0_5_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_5_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_5_1_0; }
		
		//('=' initialValue=XAnnotationElementValue)?
		public Group getGroup_2_0_6() { return cGroup_2_0_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_6_0() { return cEqualsSignKeyword_2_0_6_0; }
		
		//initialValue=XAnnotationElementValue
		public Assignment getInitialValueAssignment_2_0_6_1() { return cInitialValueAssignment_2_0_6_1; }
		
		//XAnnotationElementValue
		public RuleCall getInitialValueXAnnotationElementValueParserRuleCall_2_0_6_1_0() { return cInitialValueXAnnotationElementValueParserRuleCall_2_0_6_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_0_7() { return cSemicolonKeyword_2_0_7; }
		
		//// Class
		//{SarlClass.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		//'{' members+=Member* '}'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//// Class
		//{SarlClass.annotationInfo = current}
		public Action getSarlClassAnnotationInfoAction_2_1_0() { return cSarlClassAnnotationInfoAction_2_1_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_1_1() { return cModifiersAssignment_2_1_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_1_1_0() { return cModifiersCommonModifierParserRuleCall_2_1_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2_1_2() { return cClassKeyword_2_1_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_1_3() { return cNameAssignment_2_1_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_1_3_0() { return cNameValidIDParserRuleCall_2_1_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_1_4_0() { return cLessThanSignKeyword_2_1_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_4_1() { return cTypeParametersAssignment_2_1_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_1_4_2() { return cGroup_2_1_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_4_2_0() { return cCommaKeyword_2_1_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_1_4_2_1() { return cTypeParametersAssignment_2_1_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_4_3() { return cGreaterThanSignKeyword_2_1_4_3; }
		
		//(    ('extends' extends=JvmParameterizedTypeReference)?
		//    &
		//    ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		//)
		public UnorderedGroup getUnorderedGroup_2_1_5() { return cUnorderedGroup_2_1_5; }
		
		//('extends' extends=JvmParameterizedTypeReference)?
		public Group getGroup_2_1_5_0() { return cGroup_2_1_5_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_1_5_0_0() { return cExtendsKeyword_2_1_5_0_0; }
		
		//extends=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_1_5_0_1() { return cExtendsAssignment_2_1_5_0_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_0_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_0_1_0; }
		
		//('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_1_5_1() { return cGroup_2_1_5_1; }
		
		//'implements'
		public Keyword getImplementsKeyword_2_1_5_1_0() { return cImplementsKeyword_2_1_5_1_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_1_5_1_1() { return cImplementsAssignment_2_1_5_1_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_1_0; }
		
		//(',' implements+=JvmParameterizedTypeReference)*
		public Group getGroup_2_1_5_1_2() { return cGroup_2_1_5_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_5_1_2_0() { return cCommaKeyword_2_1_5_1_2_0; }
		
		//implements+=JvmParameterizedTypeReference
		public Assignment getImplementsAssignment_2_1_5_1_2_1() { return cImplementsAssignment_2_1_5_1_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_2_1_0() { return cImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_6() { return cLeftCurlyBracketKeyword_2_1_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_1_7() { return cMembersAssignment_2_1_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_1_7_0() { return cMembersMemberParserRuleCall_2_1_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_8() { return cRightCurlyBracketKeyword_2_1_8; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		//'{' members+=Member* '}'
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//// Interface
		//{SarlInterface.annotationInfo = current}
		public Action getSarlInterfaceAnnotationInfoAction_2_2_0() { return cSarlInterfaceAnnotationInfoAction_2_2_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_2_1() { return cModifiersAssignment_2_2_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_2_1_0() { return cModifiersCommonModifierParserRuleCall_2_2_1_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_2_2_2() { return cInterfaceKeyword_2_2_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_2_3() { return cNameAssignment_2_2_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_2_3_0() { return cNameValidIDParserRuleCall_2_2_3_0; }
		
		//('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
		public Group getGroup_2_2_4() { return cGroup_2_2_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_2_4_0() { return cLessThanSignKeyword_2_2_4_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_4_1() { return cTypeParametersAssignment_2_2_4_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0; }
		
		//(',' typeParameters+=JvmTypeParameter)*
		public Group getGroup_2_2_4_2() { return cGroup_2_2_4_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_4_2_0() { return cCommaKeyword_2_2_4_2_0; }
		
		//typeParameters+=JvmTypeParameter
		public Assignment getTypeParametersAssignment_2_2_4_2_1() { return cTypeParametersAssignment_2_2_4_2_1; }
		
		//JvmTypeParameter
		public RuleCall getTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0() { return cTypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_2_4_3() { return cGreaterThanSignKeyword_2_2_4_3; }
		
		//('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
		public Group getGroup_2_2_5() { return cGroup_2_2_5; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_2_5_0() { return cExtendsKeyword_2_2_5_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_2_5_1() { return cExtendsAssignment_2_2_5_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0; }
		
		//(',' extends+=JvmParameterizedTypeReference)*
		public Group getGroup_2_2_5_2() { return cGroup_2_2_5_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_5_2_0() { return cCommaKeyword_2_2_5_2_0; }
		
		//extends+=JvmParameterizedTypeReference
		public Assignment getExtendsAssignment_2_2_5_2_1() { return cExtendsAssignment_2_2_5_2_1; }
		
		//JvmParameterizedTypeReference
		public RuleCall getExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0() { return cExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_2_6() { return cLeftCurlyBracketKeyword_2_2_6; }
		
		//members+=Member*
		public Assignment getMembersAssignment_2_2_7() { return cMembersAssignment_2_2_7; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_2_2_7_0() { return cMembersMemberParserRuleCall_2_2_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2_8() { return cRightCurlyBracketKeyword_2_2_8; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'enum' name=ValidID '{'
		//   (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
		//'}'
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//// Enum
		//{SarlEnumeration.annotationInfo = current}
		public Action getSarlEnumerationAnnotationInfoAction_2_3_0() { return cSarlEnumerationAnnotationInfoAction_2_3_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_3_1() { return cModifiersAssignment_2_3_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_3_1_0() { return cModifiersCommonModifierParserRuleCall_2_3_1_0; }
		
		//'enum'
		public Keyword getEnumKeyword_2_3_2() { return cEnumKeyword_2_3_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_3_3() { return cNameAssignment_2_3_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_3_3_0() { return cNameValidIDParserRuleCall_2_3_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_3_4() { return cLeftCurlyBracketKeyword_2_3_4; }
		
		//(members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)?
		public Group getGroup_2_3_5() { return cGroup_2_3_5; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_3_5_0() { return cMembersAssignment_2_3_5_0; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_3_5_0_0() { return cMembersXtendEnumLiteralParserRuleCall_2_3_5_0_0; }
		
		//(',' members+=XtendEnumLiteral)*
		public Group getGroup_2_3_5_1() { return cGroup_2_3_5_1; }
		
		//','
		public Keyword getCommaKeyword_2_3_5_1_0() { return cCommaKeyword_2_3_5_1_0; }
		
		//members+=XtendEnumLiteral
		public Assignment getMembersAssignment_2_3_5_1_1() { return cMembersAssignment_2_3_5_1_1; }
		
		//XtendEnumLiteral
		public RuleCall getMembersXtendEnumLiteralParserRuleCall_2_3_5_1_1_0() { return cMembersXtendEnumLiteralParserRuleCall_2_3_5_1_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_2_3_6() { return cSemicolonKeyword_2_3_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3_7() { return cRightCurlyBracketKeyword_2_3_7; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current}
		//modifiers+=CommonModifier*
		//'annotation' name=ValidID
		//'{' members+=AnnotationField* '}'
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//// AnnotationType
		//{SarlAnnotationType.annotationInfo = current}
		public Action getSarlAnnotationTypeAnnotationInfoAction_2_4_0() { return cSarlAnnotationTypeAnnotationInfoAction_2_4_0; }
		
		//modifiers+=CommonModifier*
		public Assignment getModifiersAssignment_2_4_1() { return cModifiersAssignment_2_4_1; }
		
		//CommonModifier
		public RuleCall getModifiersCommonModifierParserRuleCall_2_4_1_0() { return cModifiersCommonModifierParserRuleCall_2_4_1_0; }
		
		//'annotation'
		public Keyword getAnnotationKeyword_2_4_2() { return cAnnotationKeyword_2_4_2; }
		
		//name=ValidID
		public Assignment getNameAssignment_2_4_3() { return cNameAssignment_2_4_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_4_3_0() { return cNameValidIDParserRuleCall_2_4_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_4_4() { return cLeftCurlyBracketKeyword_2_4_4; }
		
		//members+=AnnotationField*
		public Assignment getMembersAssignment_2_4_5() { return cMembersAssignment_2_4_5; }
		
		//AnnotationField
		public RuleCall getMembersAnnotationFieldParserRuleCall_2_4_5_0() { return cMembersAnnotationFieldParserRuleCall_2_4_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4_6() { return cRightCurlyBracketKeyword_2_4_6; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlFormalParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cExtensionAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_2_0_0 = (Keyword)cExtensionAssignment_2_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_2_1_0 = (RuleCall)cAnnotationsAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cParameterTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_5_0 = (RuleCall)cParameterTypeAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cVarArgAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final Keyword cVarArgAsteriskKeyword_6_0_0 = (Keyword)cVarArgAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cDefaultValueAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cDefaultValueXExpressionParserRuleCall_6_1_1_0 = (RuleCall)cDefaultValueAssignment_6_1_1.eContents().get(0);
		
		//@Override
		//Parameter returns xtend::XtendParameter:
		//    {SarlFormalParameter} annotations+=XAnnotation*
		//    (extension?='extension' annotations+=XAnnotation*)?
		//    name=ValidID ':' parameterType=JvmTypeReference
		//    (   (varArg?='*')
		//      | ('=' defaultValue=XExpression))?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlFormalParameter} annotations+=XAnnotation*
		//(extension?='extension' annotations+=XAnnotation*)?
		//name=ValidID ':' parameterType=JvmTypeReference
		//(   (varArg?='*')
		//  | ('=' defaultValue=XExpression))?
		public Group getGroup() { return cGroup; }
		
		//{SarlFormalParameter}
		public Action getSarlFormalParameterAction_0() { return cSarlFormalParameterAction_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_1_0() { return cAnnotationsXAnnotationParserRuleCall_1_0; }
		
		//(extension?='extension' annotations+=XAnnotation*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//extension?='extension'
		public Assignment getExtensionAssignment_2_0() { return cExtensionAssignment_2_0; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_2_0_0() { return cExtensionExtensionKeyword_2_0_0; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_2_1() { return cAnnotationsAssignment_2_1; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_2_1_0() { return cAnnotationsXAnnotationParserRuleCall_2_1_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_5() { return cParameterTypeAssignment_5; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_5_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_5_0; }
		
		//(   (varArg?='*')
		//  | ('=' defaultValue=XExpression))?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//(varArg?='*')
		public Assignment getVarArgAssignment_6_0() { return cVarArgAssignment_6_0; }
		
		//'*'
		public Keyword getVarArgAsteriskKeyword_6_0_0() { return cVarArgAsteriskKeyword_6_0_0; }
		
		//('=' defaultValue=XExpression)
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1_0() { return cEqualsSignKeyword_6_1_0; }
		
		//defaultValue=XExpression
		public Assignment getDefaultValueAssignment_6_1_1() { return cDefaultValueAssignment_6_1_1; }
		
		//XExpression
		public RuleCall getDefaultValueXExpressionParserRuleCall_6_1_1_0() { return cDefaultValueXExpressionParserRuleCall_6_1_1_0; }
	}
	public class XtendEnumLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XtendEnumLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlEnumLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//@Override
		//XtendEnumLiteral returns xtend::XtendEnumLiteral:
		//    {SarlEnumLiteral}
		//    name=ValidID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlEnumLiteral}
		//name=ValidID
		public Group getGroup() { return cGroup; }
		
		//{SarlEnumLiteral}
		public Action getSarlEnumLiteralAction_0() { return cSarlEnumLiteralAction_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }
	}
	public class BreakExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.BreakExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlBreakExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBreakKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//BreakExpression returns xbase::XExpression :
		//    {SarlBreakExpression}
		//    'break'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlBreakExpression}
		//'break'
		public Group getGroup() { return cGroup; }
		
		//{SarlBreakExpression}
		public Action getSarlBreakExpressionAction_0() { return cSarlBreakExpressionAction_0; }
		
		//'break'
		public Keyword getBreakKeyword_1() { return cBreakKeyword_1; }
	}
	public class ContinueExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.ContinueExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlContinueExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContinueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ContinueExpression returns xbase::XExpression :
		//    {SarlContinueExpression}
		//    'continue'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlContinueExpression}
		//'continue'
		public Group getGroup() { return cGroup; }
		
		//{SarlContinueExpression}
		public Action getSarlContinueExpressionAction_0() { return cSarlContinueExpressionAction_0; }
		
		//'continue'
		public Keyword getContinueKeyword_1() { return cContinueKeyword_1; }
	}
	public class AssertExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.AssertExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlAssertExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAssertKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionXExpressionParserRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMessageAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cMessageAssignment_3_1.eContents().get(0);
		
		//AssertExpression returns xbase::XExpression :
		//    {SarlAssertExpression}
		//    'assert' (->condition=XExpression) (->',' message=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlAssertExpression}
		//'assert' (->condition=XExpression) (->',' message=STRING)?
		public Group getGroup() { return cGroup; }
		
		//{SarlAssertExpression}
		public Action getSarlAssertExpressionAction_0() { return cSarlAssertExpressionAction_0; }
		
		//'assert'
		public Keyword getAssertKeyword_1() { return cAssertKeyword_1; }
		
		//(->condition=XExpression)
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }
		
		//XExpression
		public RuleCall getConditionXExpressionParserRuleCall_2_0() { return cConditionXExpressionParserRuleCall_2_0; }
		
		//(->',' message=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//->','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//message=STRING
		public Assignment getMessageAssignment_3_1() { return cMessageAssignment_3_1; }
		
		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_1_0() { return cMessageSTRINGTerminalRuleCall_3_1_0; }
	}
	public class AssumeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.AssumeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlAssertExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsStaticAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsStaticAssumeKeyword_1_0 = (Keyword)cIsStaticAssignment_1.eContents().get(0);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionXExpressionParserRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMessageAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cMessageAssignment_3_1.eContents().get(0);
		
		//AssumeExpression returns xbase::XExpression :
		//    {SarlAssertExpression}
		//    isStatic?='assume' (->condition=XExpression) (->',' message=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlAssertExpression}
		//isStatic?='assume' (->condition=XExpression) (->',' message=STRING)?
		public Group getGroup() { return cGroup; }
		
		//{SarlAssertExpression}
		public Action getSarlAssertExpressionAction_0() { return cSarlAssertExpressionAction_0; }
		
		//isStatic?='assume'
		public Assignment getIsStaticAssignment_1() { return cIsStaticAssignment_1; }
		
		//'assume'
		public Keyword getIsStaticAssumeKeyword_1_0() { return cIsStaticAssumeKeyword_1_0; }
		
		//(->condition=XExpression)
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }
		
		//XExpression
		public RuleCall getConditionXExpressionParserRuleCall_2_0() { return cConditionXExpressionParserRuleCall_2_0; }
		
		//(->',' message=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//->','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//message=STRING
		public Assignment getMessageAssignment_3_1() { return cMessageAssignment_3_1; }
		
		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_1_0() { return cMessageSTRINGTerminalRuleCall_3_1_0; }
	}
	public class SarlCastedExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.SarlCastedExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSarlCastedExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFeatureJvmIdentifiableElementCrossReference_1_0 = (CrossReference)cFeatureAssignment_1.eContents().get(0);
		private final RuleCall cFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_1_0_1 = (RuleCall)cFeatureJvmIdentifiableElementCrossReference_1_0.eContents().get(1);
		
		//SarlCastedExpression returns xbase::XCastedExpression:
		//    {SarlCastedExpression} feature = [jvm::JvmIdentifiableElement|IdOrSuper]?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SarlCastedExpression} feature = [jvm::JvmIdentifiableElement|IdOrSuper]?
		public Group getGroup() { return cGroup; }
		
		//{SarlCastedExpression}
		public Action getSarlCastedExpressionAction_0() { return cSarlCastedExpressionAction_0; }
		
		//feature = [jvm::JvmIdentifiableElement|IdOrSuper]?
		public Assignment getFeatureAssignment_1() { return cFeatureAssignment_1; }
		
		//[jvm::JvmIdentifiableElement|IdOrSuper]
		public CrossReference getFeatureJvmIdentifiableElementCrossReference_1_0() { return cFeatureJvmIdentifiableElementCrossReference_1_0; }
		
		//IdOrSuper
		public RuleCall getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_1_0_1() { return cFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_1_0_1; }
	}
	public class XCastedExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XCastedExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXExponentExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cSarlCastedExpressionTargetAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Keyword cAsKeyword_1_0_0_1 = (Keyword)cGroup_1_0_0.eContents().get(1);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_1_0 = (RuleCall)cTypeAssignment_1_1.eContents().get(0);
		
		//@Override
		//XCastedExpression returns xbase::XExpression:
		//    // The inheritance and fields of SarlCastedExpression is manually defined into the Ecore model.
		//    XExponentExpression (=>({SarlCastedExpression.target=current} 'as') type=JvmTypeReference)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// The inheritance and fields of SarlCastedExpression is manually defined into the Ecore model.
		//XExponentExpression (=>({SarlCastedExpression.target=current} 'as') type=JvmTypeReference)*
		public Group getGroup() { return cGroup; }
		
		//// The inheritance and fields of SarlCastedExpression is manually defined into the Ecore model.
		//XExponentExpression
		public RuleCall getXExponentExpressionParserRuleCall_0() { return cXExponentExpressionParserRuleCall_0; }
		
		//(=>({SarlCastedExpression.target=current} 'as') type=JvmTypeReference)*
		public Group getGroup_1() { return cGroup_1; }
		
		//=>({SarlCastedExpression.target=current} 'as')
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{SarlCastedExpression.target=current} 'as'
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//{SarlCastedExpression.target=current}
		public Action getSarlCastedExpressionTargetAction_1_0_0_0() { return cSarlCastedExpressionTargetAction_1_0_0_0; }
		
		//'as'
		public Keyword getAsKeyword_1_0_0_1() { return cAsKeyword_1_0_0_1; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_1_0() { return cTypeJvmTypeReferenceParserRuleCall_1_1_0; }
	}
	public class XPrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XPrimaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBreakExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContinueExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAssertExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAssumeExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cXConstructorCallParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cXBlockExpressionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cXSwitchExpressionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cXSynchronizedExpressionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cXFeatureCallParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cXLiteralParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cXIfExpressionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cXForLoopExpressionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cXBasicForLoopExpressionParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cXWhileExpressionParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cXDoWhileExpressionParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cXThrowExpressionParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cXReturnExpressionParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cXTryCatchFinallyExpressionParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cXParenthesizedExpressionParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		
		////-----------------------------------------------
		//// BELOW THIS POINT, THE RULES FROM XTEXT ARE OVERLOADED
		//// Variable declaration according to the SARL syntax (not the Xtext/Xtend)
		//@Override
		//XPrimaryExpression returns xbase::XExpression:
		//    // Below the SARL specific expressions
		//    BreakExpression |
		//    ContinueExpression |
		//    AssertExpression |
		//    AssumeExpression |
		//    // Below the expressions inherited from Xtext/Xtend
		//    XConstructorCall |
		//    XBlockExpression |
		//    XSwitchExpression |
		//    XSynchronizedExpression |
		//    XFeatureCall |
		//    XLiteral |
		//    XIfExpression |
		//    XForLoopExpression |
		//    XBasicForLoopExpression |
		//    XWhileExpression |
		//    XDoWhileExpression |
		//    XThrowExpression |
		//    XReturnExpression |
		//    XTryCatchFinallyExpression |
		//    XParenthesizedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// Below the SARL specific expressions
		//BreakExpression |
		//ContinueExpression |
		//AssertExpression |
		//AssumeExpression |
		//// Below the expressions inherited from Xtext/Xtend
		//XConstructorCall |
		//XBlockExpression |
		//XSwitchExpression |
		//XSynchronizedExpression |
		//XFeatureCall |
		//XLiteral |
		//XIfExpression |
		//XForLoopExpression |
		//XBasicForLoopExpression |
		//XWhileExpression |
		//XDoWhileExpression |
		//XThrowExpression |
		//XReturnExpression |
		//XTryCatchFinallyExpression |
		//XParenthesizedExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//// Below the SARL specific expressions
		//BreakExpression
		public RuleCall getBreakExpressionParserRuleCall_0() { return cBreakExpressionParserRuleCall_0; }
		
		//ContinueExpression
		public RuleCall getContinueExpressionParserRuleCall_1() { return cContinueExpressionParserRuleCall_1; }
		
		//AssertExpression
		public RuleCall getAssertExpressionParserRuleCall_2() { return cAssertExpressionParserRuleCall_2; }
		
		//AssumeExpression
		public RuleCall getAssumeExpressionParserRuleCall_3() { return cAssumeExpressionParserRuleCall_3; }
		
		//// Below the expressions inherited from Xtext/Xtend
		//XConstructorCall
		public RuleCall getXConstructorCallParserRuleCall_4() { return cXConstructorCallParserRuleCall_4; }
		
		//XBlockExpression
		public RuleCall getXBlockExpressionParserRuleCall_5() { return cXBlockExpressionParserRuleCall_5; }
		
		//XSwitchExpression
		public RuleCall getXSwitchExpressionParserRuleCall_6() { return cXSwitchExpressionParserRuleCall_6; }
		
		//XSynchronizedExpression
		public RuleCall getXSynchronizedExpressionParserRuleCall_7() { return cXSynchronizedExpressionParserRuleCall_7; }
		
		//XFeatureCall
		public RuleCall getXFeatureCallParserRuleCall_8() { return cXFeatureCallParserRuleCall_8; }
		
		//XLiteral
		public RuleCall getXLiteralParserRuleCall_9() { return cXLiteralParserRuleCall_9; }
		
		//XIfExpression
		public RuleCall getXIfExpressionParserRuleCall_10() { return cXIfExpressionParserRuleCall_10; }
		
		//XForLoopExpression
		public RuleCall getXForLoopExpressionParserRuleCall_11() { return cXForLoopExpressionParserRuleCall_11; }
		
		//XBasicForLoopExpression
		public RuleCall getXBasicForLoopExpressionParserRuleCall_12() { return cXBasicForLoopExpressionParserRuleCall_12; }
		
		//XWhileExpression
		public RuleCall getXWhileExpressionParserRuleCall_13() { return cXWhileExpressionParserRuleCall_13; }
		
		//XDoWhileExpression
		public RuleCall getXDoWhileExpressionParserRuleCall_14() { return cXDoWhileExpressionParserRuleCall_14; }
		
		//XThrowExpression
		public RuleCall getXThrowExpressionParserRuleCall_15() { return cXThrowExpressionParserRuleCall_15; }
		
		//XReturnExpression
		public RuleCall getXReturnExpressionParserRuleCall_16() { return cXReturnExpressionParserRuleCall_16; }
		
		//XTryCatchFinallyExpression
		public RuleCall getXTryCatchFinallyExpressionParserRuleCall_17() { return cXTryCatchFinallyExpressionParserRuleCall_17; }
		
		//XParenthesizedExpression
		public RuleCall getXParenthesizedExpressionParserRuleCall_18() { return cXParenthesizedExpressionParserRuleCall_18; }
	}
	public class XVariableDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XVariableDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Action cXtendVariableDeclarationAction_0_0_0 = (Action)cGroup_0_0.eContents().get(0);
		private final Alternatives cAlternatives_0_0_1 = (Alternatives)cGroup_0_0.eContents().get(1);
		private final Group cGroup_0_0_1_0 = (Group)cAlternatives_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_0_1_0_0 = (Alternatives)cGroup_0_0_1_0.eContents().get(0);
		private final Assignment cWriteableAssignment_0_0_1_0_0_0 = (Assignment)cAlternatives_0_0_1_0_0.eContents().get(0);
		private final Keyword cWriteableVarKeyword_0_0_1_0_0_0_0 = (Keyword)cWriteableAssignment_0_0_1_0_0_0.eContents().get(0);
		private final Keyword cValKeyword_0_0_1_0_0_1 = (Keyword)cAlternatives_0_0_1_0_0.eContents().get(1);
		private final Assignment cExtensionAssignment_0_0_1_0_1 = (Assignment)cGroup_0_0_1_0.eContents().get(1);
		private final Keyword cExtensionExtensionKeyword_0_0_1_0_1_0 = (Keyword)cExtensionAssignment_0_0_1_0_1.eContents().get(0);
		private final Group cGroup_0_0_1_1 = (Group)cAlternatives_0_0_1.eContents().get(1);
		private final Assignment cExtensionAssignment_0_0_1_1_0 = (Assignment)cGroup_0_0_1_1.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_0_0_1_1_0_0 = (Keyword)cExtensionAssignment_0_0_1_1_0.eContents().get(0);
		private final Alternatives cAlternatives_0_0_1_1_1 = (Alternatives)cGroup_0_0_1_1.eContents().get(1);
		private final Assignment cWriteableAssignment_0_0_1_1_1_0 = (Assignment)cAlternatives_0_0_1_1_1.eContents().get(0);
		private final Keyword cWriteableVarKeyword_0_0_1_1_1_0_0 = (Keyword)cWriteableAssignment_0_0_1_1_1_0.eContents().get(0);
		private final Keyword cValKeyword_0_0_1_1_1_1 = (Keyword)cAlternatives_0_0_1_1_1.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRightAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRightXExpressionParserRuleCall_3_1_0 = (RuleCall)cRightAssignment_3_1.eContents().get(0);
		
		//@Override
		//XVariableDeclaration returns xbase::XExpression:
		//    =>({xtend::XtendVariableDeclaration}
		//    (
		//        (
		//            (writeable?='var'|'val')
		//            extension?='extension'?
		//        )
		//    |
		//        (extension?='extension' (writeable?='var'|'val'))
		//    ))
		//    name=ValidID
		//    (':' type=JvmTypeReference)?
		//    ('=' right=XExpression)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//=>({xtend::XtendVariableDeclaration}
		//(
		//    (
		//        (writeable?='var'|'val')
		//        extension?='extension'?
		//    )
		//|
		//    (extension?='extension' (writeable?='var'|'val'))
		//))
		//name=ValidID
		//(':' type=JvmTypeReference)?
		//('=' right=XExpression)?
		public Group getGroup() { return cGroup; }
		
		//=>({xtend::XtendVariableDeclaration}
		//(
		//    (
		//        (writeable?='var'|'val')
		//        extension?='extension'?
		//    )
		//|
		//    (extension?='extension' (writeable?='var'|'val'))
		//))
		public Group getGroup_0() { return cGroup_0; }
		
		//{xtend::XtendVariableDeclaration}
		//    (
		//        (
		//            (writeable?='var'|'val')
		//            extension?='extension'?
		//        )
		//    |
		//        (extension?='extension' (writeable?='var'|'val'))
		//    )
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//{xtend::XtendVariableDeclaration}
		public Action getXtendVariableDeclarationAction_0_0_0() { return cXtendVariableDeclarationAction_0_0_0; }
		
		//(
		//    (
		//        (writeable?='var'|'val')
		//        extension?='extension'?
		//    )
		//|
		//    (extension?='extension' (writeable?='var'|'val'))
		//)
		public Alternatives getAlternatives_0_0_1() { return cAlternatives_0_0_1; }
		
		//(
		//    (writeable?='var'|'val')
		//    extension?='extension'?
		//)
		public Group getGroup_0_0_1_0() { return cGroup_0_0_1_0; }
		
		//(writeable?='var'|'val')
		public Alternatives getAlternatives_0_0_1_0_0() { return cAlternatives_0_0_1_0_0; }
		
		//writeable?='var'
		public Assignment getWriteableAssignment_0_0_1_0_0_0() { return cWriteableAssignment_0_0_1_0_0_0; }
		
		//'var'
		public Keyword getWriteableVarKeyword_0_0_1_0_0_0_0() { return cWriteableVarKeyword_0_0_1_0_0_0_0; }
		
		//'val'
		public Keyword getValKeyword_0_0_1_0_0_1() { return cValKeyword_0_0_1_0_0_1; }
		
		//extension?='extension'?
		public Assignment getExtensionAssignment_0_0_1_0_1() { return cExtensionAssignment_0_0_1_0_1; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_0_0_1_0_1_0() { return cExtensionExtensionKeyword_0_0_1_0_1_0; }
		
		//(extension?='extension' (writeable?='var'|'val'))
		public Group getGroup_0_0_1_1() { return cGroup_0_0_1_1; }
		
		//extension?='extension'
		public Assignment getExtensionAssignment_0_0_1_1_0() { return cExtensionAssignment_0_0_1_1_0; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_0_0_1_1_0_0() { return cExtensionExtensionKeyword_0_0_1_1_0_0; }
		
		//(writeable?='var'|'val')
		public Alternatives getAlternatives_0_0_1_1_1() { return cAlternatives_0_0_1_1_1; }
		
		//writeable?='var'
		public Assignment getWriteableAssignment_0_0_1_1_1_0() { return cWriteableAssignment_0_0_1_1_1_0; }
		
		//'var'
		public Keyword getWriteableVarKeyword_0_0_1_1_1_0_0() { return cWriteableVarKeyword_0_0_1_1_1_0_0; }
		
		//'val'
		public Keyword getValKeyword_0_0_1_1_1_1() { return cValKeyword_0_0_1_1_1_1; }
		
		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }
		
		//(':' type=JvmTypeReference)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_1_0; }
		
		//('=' right=XExpression)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }
		
		//right=XExpression
		public Assignment getRightAssignment_3_1() { return cRightAssignment_3_1; }
		
		//XExpression
		public RuleCall getRightXExpressionParserRuleCall_3_1_0() { return cRightXExpressionParserRuleCall_3_1_0; }
	}
	public class JvmFormalParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.JvmFormalParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExtensionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_0_0 = (Keyword)cExtensionAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParameterTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_2_1_0 = (RuleCall)cParameterTypeAssignment_2_1.eContents().get(0);
		
		//// Formal parameter declaration according to the SARL syntax (not the Xtext/Xtend)
		//@Override
		//JvmFormalParameter returns xtend::XtendFormalParameter:
		//    extension?='extension'? name=ValidID (=> ':' (parameterType=JvmTypeReference))?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//extension?='extension'? name=ValidID (=> ':' (parameterType=JvmTypeReference))?
		public Group getGroup() { return cGroup; }
		
		//extension?='extension'?
		public Assignment getExtensionAssignment_0() { return cExtensionAssignment_0; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_0_0() { return cExtensionExtensionKeyword_0_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }
		
		//(=> ':' (parameterType=JvmTypeReference))?
		public Group getGroup_2() { return cGroup_2; }
		
		//=> ':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//(parameterType=JvmTypeReference)
		public Assignment getParameterTypeAssignment_2_1() { return cParameterTypeAssignment_2_1; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_2_1_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_2_1_0; }
	}
	public class FullJvmFormalParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.FullJvmFormalParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExtensionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_0_0 = (Keyword)cExtensionAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParameterTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParameterTypeMultiTypeReferenceParserRuleCall_3_0 = (RuleCall)cParameterTypeAssignment_3.eContents().get(0);
		
		//// Formal parameter declaration according to the SARL syntax (not the Xtext/Xtend)
		//@Override
		//FullJvmFormalParameter returns xtend::XtendFormalParameter:
		//    extension?='extension'? name=ValidID ':' parameterType=MultiTypeReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//extension?='extension'? name=ValidID ':' parameterType=MultiTypeReference
		public Group getGroup() { return cGroup; }
		
		//extension?='extension'?
		public Assignment getExtensionAssignment_0() { return cExtensionAssignment_0; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_0_0() { return cExtensionExtensionKeyword_0_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//parameterType=MultiTypeReference
		public Assignment getParameterTypeAssignment_3() { return cParameterTypeAssignment_3; }
		
		//MultiTypeReference
		public RuleCall getParameterTypeMultiTypeReferenceParserRuleCall_3_0() { return cParameterTypeMultiTypeReferenceParserRuleCall_3_0; }
	}
	public class XForLoopExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XForLoopExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Action cXForLoopExpressionAction_0_0_0 = (Action)cGroup_0_0.eContents().get(0);
		private final Keyword cForKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cDeclaredParamAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cDeclaredParamSarlXLoopFormalParameterParserRuleCall_0_0_3_0 = (RuleCall)cDeclaredParamAssignment_0_0_3.eContents().get(0);
		private final Keyword cColonKeyword_0_0_4 = (Keyword)cGroup_0_0.eContents().get(4);
		private final Assignment cForExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cForExpressionXExpressionParserRuleCall_1_0 = (RuleCall)cForExpressionAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cEachExpressionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cEachExpressionXExpressionParserRuleCall_3_0_0 = (RuleCall)cEachExpressionAssignment_3_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//// The type of the for-loop's variable is following the SARL syntax (not the Xtext/Xtend)
		//@Override
		//XForLoopExpression returns xbase::XExpression:
		//    =>({xbase::XForLoopExpression}
		//    'for' '(' declaredParam=SarlXLoopFormalParameter ':') forExpression=XExpression ')'
		//    ( eachExpression=XExpression | ';' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//=>({xbase::XForLoopExpression}
		//'for' '(' declaredParam=SarlXLoopFormalParameter ':') forExpression=XExpression ')'
		//( eachExpression=XExpression | ';' )
		public Group getGroup() { return cGroup; }
		
		//=>({xbase::XForLoopExpression}
		//'for' '(' declaredParam=SarlXLoopFormalParameter ':')
		public Group getGroup_0() { return cGroup_0; }
		
		//{xbase::XForLoopExpression}
		//    'for' '(' declaredParam=SarlXLoopFormalParameter ':'
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//{xbase::XForLoopExpression}
		public Action getXForLoopExpressionAction_0_0_0() { return cXForLoopExpressionAction_0_0_0; }
		
		//'for'
		public Keyword getForKeyword_0_0_1() { return cForKeyword_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_0_2() { return cLeftParenthesisKeyword_0_0_2; }
		
		//declaredParam=SarlXLoopFormalParameter
		public Assignment getDeclaredParamAssignment_0_0_3() { return cDeclaredParamAssignment_0_0_3; }
		
		//SarlXLoopFormalParameter
		public RuleCall getDeclaredParamSarlXLoopFormalParameterParserRuleCall_0_0_3_0() { return cDeclaredParamSarlXLoopFormalParameterParserRuleCall_0_0_3_0; }
		
		//':'
		public Keyword getColonKeyword_0_0_4() { return cColonKeyword_0_0_4; }
		
		//forExpression=XExpression
		public Assignment getForExpressionAssignment_1() { return cForExpressionAssignment_1; }
		
		//XExpression
		public RuleCall getForExpressionXExpressionParserRuleCall_1_0() { return cForExpressionXExpressionParserRuleCall_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
		
		//( eachExpression=XExpression | ';' )
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//eachExpression=XExpression
		public Assignment getEachExpressionAssignment_3_0() { return cEachExpressionAssignment_3_0; }
		
		//XExpression
		public RuleCall getEachExpressionXExpressionParserRuleCall_3_0_0() { return cEachExpressionXExpressionParserRuleCall_3_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}
	public class SarlXLoopFormalParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.SarlXLoopFormalParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXtendFormalParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExtensionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cExtensionExtensionKeyword_1_0 = (Keyword)cExtensionAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParameterTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_3_1_0 = (RuleCall)cParameterTypeAssignment_3_1.eContents().get(0);
		
		//// The following rule is not provided by Xbase, but we use it
		//// in the overloaded version of XForLoopExpression
		//SarlXLoopFormalParameter returns xtend::XtendFormalParameter:
		//    {xtend::XtendFormalParameter}
		//    (extension?='extension'?) name=ValidID
		//    ( 'as' parameterType=JvmTypeReference )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xtend::XtendFormalParameter}
		//(extension?='extension'?) name=ValidID
		//( 'as' parameterType=JvmTypeReference )?
		public Group getGroup() { return cGroup; }
		
		//{xtend::XtendFormalParameter}
		public Action getXtendFormalParameterAction_0() { return cXtendFormalParameterAction_0; }
		
		//(extension?='extension'?)
		public Assignment getExtensionAssignment_1() { return cExtensionAssignment_1; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_1_0() { return cExtensionExtensionKeyword_1_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }
		
		//( 'as' parameterType=JvmTypeReference )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'as'
		public Keyword getAsKeyword_3_0() { return cAsKeyword_3_0; }
		
		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_3_1() { return cParameterTypeAssignment_3_1; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_3_1_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_3_1_0; }
	}
	public class XSwitchExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XSwitchExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXSwitchExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSwitchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_0_0 = (Group)cGroup_2_0.eContents().get(0);
		private final Group cGroup_2_0_0_0 = (Group)cGroup_2_0_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_0_0_0_0 = (Keyword)cGroup_2_0_0_0.eContents().get(0);
		private final Assignment cDeclaredParamAssignment_2_0_0_0_1 = (Assignment)cGroup_2_0_0_0.eContents().get(1);
		private final RuleCall cDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0 = (RuleCall)cDeclaredParamAssignment_2_0_0_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_0_0_2 = (Keyword)cGroup_2_0_0_0.eContents().get(2);
		private final Assignment cSwitchAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cSwitchXExpressionParserRuleCall_2_0_1_0 = (RuleCall)cSwitchAssignment_2_0_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cGroup_2_1.eContents().get(0);
		private final Group cGroup_2_1_0_0 = (Group)cGroup_2_1_0.eContents().get(0);
		private final Assignment cDeclaredParamAssignment_2_1_0_0_0 = (Assignment)cGroup_2_1_0_0.eContents().get(0);
		private final RuleCall cDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0 = (RuleCall)cDeclaredParamAssignment_2_1_0_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_0_0_1 = (Keyword)cGroup_2_1_0_0.eContents().get(1);
		private final Assignment cSwitchAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSwitchXExpressionParserRuleCall_2_1_1_0 = (RuleCall)cSwitchAssignment_2_1_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCasesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCasesXCasePartParserRuleCall_4_0 = (RuleCall)cCasesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDefaultKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDefaultAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDefaultXExpressionParserRuleCall_5_2_0 = (RuleCall)cDefaultAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// The type of the switch's variable is following the SARL syntax (not the Xtext/Xtend)
		//@Override
		//XSwitchExpression returns xbase::XExpression:
		//    {xbase::XSwitchExpression}
		//    'switch' (=>('(' declaredParam=JvmFormalParameter '=') switch=XExpression ')'
		//        | =>(declaredParam=JvmFormalParameter '=')? switch=XExpression) '{'
		//    (cases+=XCasePart)*
		//    ('default' ':' default=XExpression )?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xbase::XSwitchExpression}
		//'switch' (=>('(' declaredParam=JvmFormalParameter '=') switch=XExpression ')'
		//    | =>(declaredParam=JvmFormalParameter '=')? switch=XExpression) '{'
		//(cases+=XCasePart)*
		//('default' ':' default=XExpression )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{xbase::XSwitchExpression}
		public Action getXSwitchExpressionAction_0() { return cXSwitchExpressionAction_0; }
		
		//'switch'
		public Keyword getSwitchKeyword_1() { return cSwitchKeyword_1; }
		
		//(=>('(' declaredParam=JvmFormalParameter '=') switch=XExpression ')'
		//       | =>(declaredParam=JvmFormalParameter '=')? switch=XExpression)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//=>('(' declaredParam=JvmFormalParameter '=') switch=XExpression ')'
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//=>('(' declaredParam=JvmFormalParameter '=')
		public Group getGroup_2_0_0() { return cGroup_2_0_0; }
		
		//'(' declaredParam=JvmFormalParameter '='
		public Group getGroup_2_0_0_0() { return cGroup_2_0_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0_0_0_0() { return cLeftParenthesisKeyword_2_0_0_0_0; }
		
		//declaredParam=JvmFormalParameter
		public Assignment getDeclaredParamAssignment_2_0_0_0_1() { return cDeclaredParamAssignment_2_0_0_0_1; }
		
		//JvmFormalParameter
		public RuleCall getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0() { return cDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_0_0_2() { return cEqualsSignKeyword_2_0_0_0_2; }
		
		//switch=XExpression
		public Assignment getSwitchAssignment_2_0_1() { return cSwitchAssignment_2_0_1; }
		
		//XExpression
		public RuleCall getSwitchXExpressionParserRuleCall_2_0_1_0() { return cSwitchXExpressionParserRuleCall_2_0_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_0_2() { return cRightParenthesisKeyword_2_0_2; }
		
		//=>(declaredParam=JvmFormalParameter '=')? switch=XExpression
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//=>(declaredParam=JvmFormalParameter '=')?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }
		
		//declaredParam=JvmFormalParameter '='
		public Group getGroup_2_1_0_0() { return cGroup_2_1_0_0; }
		
		//declaredParam=JvmFormalParameter
		public Assignment getDeclaredParamAssignment_2_1_0_0_0() { return cDeclaredParamAssignment_2_1_0_0_0; }
		
		//JvmFormalParameter
		public RuleCall getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0() { return cDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_0_0_1() { return cEqualsSignKeyword_2_1_0_0_1; }
		
		//switch=XExpression
		public Assignment getSwitchAssignment_2_1_1() { return cSwitchAssignment_2_1_1; }
		
		//XExpression
		public RuleCall getSwitchXExpressionParserRuleCall_2_1_1_0() { return cSwitchXExpressionParserRuleCall_2_1_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(cases+=XCasePart)*
		public Assignment getCasesAssignment_4() { return cCasesAssignment_4; }
		
		//XCasePart
		public RuleCall getCasesXCasePartParserRuleCall_4_0() { return cCasesXCasePartParserRuleCall_4_0; }
		
		//('default' ':' default=XExpression )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'default'
		public Keyword getDefaultKeyword_5_0() { return cDefaultKeyword_5_0; }
		
		//':'
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }
		
		//default=XExpression
		public Assignment getDefaultAssignment_5_2() { return cDefaultAssignment_5_2; }
		
		//XExpression
		public RuleCall getDefaultXExpressionParserRuleCall_5_2_0() { return cDefaultXExpressionParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class XMultiplicativeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XMultiplicativeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXCastedExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cXBinaryOperationLeftOperandAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cFeatureAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0 = (CrossReference)cFeatureAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1 = (RuleCall)cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0.eContents().get(1);
		private final Assignment cRightOperandAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightOperandXCastedExpressionParserRuleCall_1_1_0 = (RuleCall)cRightOperandAssignment_1_1.eContents().get(0);
		
		////-----------------------------------------------
		//// BELOW THIS POINT, See Issue #793 and #846
		//// FIXME Remove When issue 68 is fixed within Xbase, https://github.com/eclipse/xtext-lib/issues/68
		//// FIXME Remove when issue 67 is fixed within Xbase, https://github.com/eclipse/xtext-lib/issues/67
		//// CAUTION: The rule XCastedExpression is redefined above for the support of the SARL cast operator.
		//@Override
		//XMultiplicativeExpression returns xbase::XExpression:
		//    XCastedExpression (=>({xbase::XBinaryOperation.leftOperand=current}
		//        feature=[jvm::JvmIdentifiableElement|OpMulti]
		//    ) rightOperand=XCastedExpression)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//XCastedExpression (=>({xbase::XBinaryOperation.leftOperand=current}
		//    feature=[jvm::JvmIdentifiableElement|OpMulti]
		//) rightOperand=XCastedExpression)*
		public Group getGroup() { return cGroup; }
		
		//XCastedExpression
		public RuleCall getXCastedExpressionParserRuleCall_0() { return cXCastedExpressionParserRuleCall_0; }
		
		//(=>({xbase::XBinaryOperation.leftOperand=current}
		//       feature=[jvm::JvmIdentifiableElement|OpMulti]
		//   ) rightOperand=XCastedExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//=>({xbase::XBinaryOperation.leftOperand=current}
		//        feature=[jvm::JvmIdentifiableElement|OpMulti]
		//    )
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{xbase::XBinaryOperation.leftOperand=current}
		//        feature=[jvm::JvmIdentifiableElement|OpMulti]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//{xbase::XBinaryOperation.leftOperand=current}
		public Action getXBinaryOperationLeftOperandAction_1_0_0_0() { return cXBinaryOperationLeftOperandAction_1_0_0_0; }
		
		//feature=[jvm::JvmIdentifiableElement|OpMulti]
		public Assignment getFeatureAssignment_1_0_0_1() { return cFeatureAssignment_1_0_0_1; }
		
		//[jvm::JvmIdentifiableElement|OpMulti]
		public CrossReference getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0() { return cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0; }
		
		//OpMulti
		public RuleCall getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1() { return cFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1; }
		
		//rightOperand=XCastedExpression
		public Assignment getRightOperandAssignment_1_1() { return cRightOperandAssignment_1_1; }
		
		//XCastedExpression
		public RuleCall getRightOperandXCastedExpressionParserRuleCall_1_1_0() { return cRightOperandXCastedExpressionParserRuleCall_1_1_0; }
	}
	public class OpMultiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.OpMulti");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cPercentSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//@Override
		//OpMulti:
		//    '*' | '/' | '%'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | '/' | '%'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//'%'
		public Keyword getPercentSignKeyword_2() { return cPercentSignKeyword_2; }
	}
	public class XExponentExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XExponentExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXUnaryOperationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cXBinaryOperationLeftOperandAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cFeatureAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0 = (CrossReference)cFeatureAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cFeatureJvmIdentifiableElementOpExponentParserRuleCall_1_0_0_1_0_1 = (RuleCall)cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0.eContents().get(1);
		private final Assignment cRightOperandAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightOperandXUnaryOperationParserRuleCall_1_1_0 = (RuleCall)cRightOperandAssignment_1_1.eContents().get(0);
		
		//XExponentExpression returns xbase::XExpression:
		//    XUnaryOperation
		//     (=>({xbase::XBinaryOperation.leftOperand=current} feature=[jvm::JvmIdentifiableElement|OpExponent])
		//        rightOperand=XUnaryOperation
		//    )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//XUnaryOperation
		// (=>({xbase::XBinaryOperation.leftOperand=current} feature=[jvm::JvmIdentifiableElement|OpExponent])
		//    rightOperand=XUnaryOperation
		//)*
		public Group getGroup() { return cGroup; }
		
		//XUnaryOperation
		public RuleCall getXUnaryOperationParserRuleCall_0() { return cXUnaryOperationParserRuleCall_0; }
		
		// (=>({xbase::XBinaryOperation.leftOperand=current} feature=[jvm::JvmIdentifiableElement|OpExponent])
		//    rightOperand=XUnaryOperation
		//)*
		public Group getGroup_1() { return cGroup_1; }
		
		//=>({xbase::XBinaryOperation.leftOperand=current} feature=[jvm::JvmIdentifiableElement|OpExponent])
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{xbase::XBinaryOperation.leftOperand=current} feature=[jvm::JvmIdentifiableElement|OpExponent]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//{xbase::XBinaryOperation.leftOperand=current}
		public Action getXBinaryOperationLeftOperandAction_1_0_0_0() { return cXBinaryOperationLeftOperandAction_1_0_0_0; }
		
		//feature=[jvm::JvmIdentifiableElement|OpExponent]
		public Assignment getFeatureAssignment_1_0_0_1() { return cFeatureAssignment_1_0_0_1; }
		
		//[jvm::JvmIdentifiableElement|OpExponent]
		public CrossReference getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0() { return cFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0; }
		
		//OpExponent
		public RuleCall getFeatureJvmIdentifiableElementOpExponentParserRuleCall_1_0_0_1_0_1() { return cFeatureJvmIdentifiableElementOpExponentParserRuleCall_1_0_0_1_0_1; }
		
		//rightOperand=XUnaryOperation
		public Assignment getRightOperandAssignment_1_1() { return cRightOperandAssignment_1_1; }
		
		//XUnaryOperation
		public RuleCall getRightOperandXUnaryOperationParserRuleCall_1_1_0() { return cRightOperandXUnaryOperationParserRuleCall_1_1_0; }
	}
	public class OpExponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.OpExponent");
		private final Keyword cAsteriskAsteriskKeyword = (Keyword)rule.eContents().get(1);
		
		//OpExponent:
		//    "**"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"**"
		public Keyword getAsteriskAsteriskKeyword() { return cAsteriskAsteriskKeyword; }
	}
	public class XUnaryOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.XUnaryOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cXUnaryOperationAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cFeatureAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cFeatureJvmIdentifiableElementCrossReference_0_1_0 = (CrossReference)cFeatureAssignment_0_1.eContents().get(0);
		private final RuleCall cFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1 = (RuleCall)cFeatureJvmIdentifiableElementCrossReference_0_1_0.eContents().get(1);
		private final Assignment cOperandAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOperandXUnaryOperationParserRuleCall_0_2_0 = (RuleCall)cOperandAssignment_0_2.eContents().get(0);
		private final RuleCall cXPostfixOperationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//@Override
		//XUnaryOperation returns xbase::XExpression:
		//    {xbase::XUnaryOperation} feature=[jvm::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation
		//    | XPostfixOperation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{xbase::XUnaryOperation} feature=[jvm::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation
		//| XPostfixOperation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{xbase::XUnaryOperation} feature=[jvm::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation
		public Group getGroup_0() { return cGroup_0; }
		
		//{xbase::XUnaryOperation}
		public Action getXUnaryOperationAction_0_0() { return cXUnaryOperationAction_0_0; }
		
		//feature=[jvm::JvmIdentifiableElement|OpUnary]
		public Assignment getFeatureAssignment_0_1() { return cFeatureAssignment_0_1; }
		
		//[jvm::JvmIdentifiableElement|OpUnary]
		public CrossReference getFeatureJvmIdentifiableElementCrossReference_0_1_0() { return cFeatureJvmIdentifiableElementCrossReference_0_1_0; }
		
		//OpUnary
		public RuleCall getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1() { return cFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1; }
		
		//operand=XUnaryOperation
		public Assignment getOperandAssignment_0_2() { return cOperandAssignment_0_2; }
		
		//XUnaryOperation
		public RuleCall getOperandXUnaryOperationParserRuleCall_0_2_0() { return cOperandXUnaryOperationParserRuleCall_0_2_0; }
		
		//XPostfixOperation
		public RuleCall getXPostfixOperationParserRuleCall_1() { return cXPostfixOperationParserRuleCall_1; }
	}
	public class OpUnaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.sarl.lang.SARL.OpUnary");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cPlusSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//@Override
		//OpUnary:
		//    "!" | "-" | "+"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"!" | "-" | "+"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"!"
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }
		
		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//"+"
		public Keyword getPlusSignKeyword_2() { return cPlusSignKeyword_2; }
	}
	
	
	private final SarlScriptElements pSarlScript;
	private final TypeElements pType;
	private final EventMemberElements pEventMember;
	private final CapacityMemberElements pCapacityMember;
	private final AOPMemberElements pAOPMember;
	private final MemberElements pMember;
	private final AnnotationFieldElements pAnnotationField;
	private final ParameterElements pParameter;
	private final XtendEnumLiteralElements pXtendEnumLiteral;
	private final BreakExpressionElements pBreakExpression;
	private final ContinueExpressionElements pContinueExpression;
	private final AssertExpressionElements pAssertExpression;
	private final AssumeExpressionElements pAssumeExpression;
	private final SarlCastedExpressionElements pSarlCastedExpression;
	private final XCastedExpressionElements pXCastedExpression;
	private final XPrimaryExpressionElements pXPrimaryExpression;
	private final XVariableDeclarationElements pXVariableDeclaration;
	private final JvmFormalParameterElements pJvmFormalParameter;
	private final FullJvmFormalParameterElements pFullJvmFormalParameter;
	private final XForLoopExpressionElements pXForLoopExpression;
	private final SarlXLoopFormalParameterElements pSarlXLoopFormalParameter;
	private final XSwitchExpressionElements pXSwitchExpression;
	private final XMultiplicativeExpressionElements pXMultiplicativeExpression;
	private final OpMultiElements pOpMulti;
	private final XExponentExpressionElements pXExponentExpression;
	private final OpExponentElements pOpExponent;
	private final XUnaryOperationElements pXUnaryOperation;
	private final OpUnaryElements pOpUnary;
	
	private final Grammar grammar;
	
	private final XtendGrammarAccess gaXtend;
	
	private final XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations;
	
	private final XbaseGrammarAccess gaXbase;
	
	private final XtypeGrammarAccess gaXtype;

	@Inject
	public SARLGrammarAccess(GrammarProvider grammarProvider,
			XtendGrammarAccess gaXtend,
			XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations,
			XbaseGrammarAccess gaXbase,
			XtypeGrammarAccess gaXtype) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXtend = gaXtend;
		this.gaXbaseWithAnnotations = gaXbaseWithAnnotations;
		this.gaXbase = gaXbase;
		this.gaXtype = gaXtype;
		this.pSarlScript = new SarlScriptElements();
		this.pType = new TypeElements();
		this.pEventMember = new EventMemberElements();
		this.pCapacityMember = new CapacityMemberElements();
		this.pAOPMember = new AOPMemberElements();
		this.pMember = new MemberElements();
		this.pAnnotationField = new AnnotationFieldElements();
		this.pParameter = new ParameterElements();
		this.pXtendEnumLiteral = new XtendEnumLiteralElements();
		this.pBreakExpression = new BreakExpressionElements();
		this.pContinueExpression = new ContinueExpressionElements();
		this.pAssertExpression = new AssertExpressionElements();
		this.pAssumeExpression = new AssumeExpressionElements();
		this.pSarlCastedExpression = new SarlCastedExpressionElements();
		this.pXCastedExpression = new XCastedExpressionElements();
		this.pXPrimaryExpression = new XPrimaryExpressionElements();
		this.pXVariableDeclaration = new XVariableDeclarationElements();
		this.pJvmFormalParameter = new JvmFormalParameterElements();
		this.pFullJvmFormalParameter = new FullJvmFormalParameterElements();
		this.pXForLoopExpression = new XForLoopExpressionElements();
		this.pSarlXLoopFormalParameter = new SarlXLoopFormalParameterElements();
		this.pXSwitchExpression = new XSwitchExpressionElements();
		this.pXMultiplicativeExpression = new XMultiplicativeExpressionElements();
		this.pOpMulti = new OpMultiElements();
		this.pXExponentExpression = new XExponentExpressionElements();
		this.pOpExponent = new OpExponentElements();
		this.pXUnaryOperation = new XUnaryOperationElements();
		this.pOpUnary = new OpUnaryElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("io.sarl.lang.SARL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public XtendGrammarAccess getXtendGrammarAccess() {
		return gaXtend;
	}
	
	public XbaseWithAnnotationsGrammarAccess getXbaseWithAnnotationsGrammarAccess() {
		return gaXbaseWithAnnotations;
	}
	
	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}
	
	public XtypeGrammarAccess getXtypeGrammarAccess() {
		return gaXtype;
	}

	
	//SarlScript returns xtend::XtendFile:
	//    {SarlScript}
	//    ('package' package=QualifiedName ';'?)?
	//    importSection=XImportSection?
	//    xtendTypes+=Type*
	//;
	public SarlScriptElements getSarlScriptAccess() {
		return pSarlScript;
	}
	
	public ParserRule getSarlScriptRule() {
		return getSarlScriptAccess().getRule();
	}
	
	//@Override
	//Type returns xtend::XtendTypeDeclaration:
	//    {xtend::XtendTypeDeclaration} annotations+=XAnnotation*
	//    (    // Event
	//        {SarlEvent.annotationInfo = current}
	//        modifiers += CommonModifier*
	//        'event' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?  ('extends' extends=JvmParameterizedTypeReference)?
	//        ('{' members+=EventMember* '}')?
	//    |
	//        // Capacity
	//        {SarlCapacity.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'capacity' name=ValidID
	//        ('extends' extends+=JvmParameterizedTypeReference
	//        ( ',' extends+=JvmParameterizedTypeReference )* )?
	//        '{' members+=CapacityMember* '}'
	//    |
	//        // Agent
	//        {SarlAgent.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'agent' name=ValidID
	//        ('extends' extends=JvmParameterizedTypeReference)?
	//        '{' members+=AOPMember* '}'
	//    |
	//        // Behavior
	//        {SarlBehavior.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'behavior' name=ValidID ('extends' extends=JvmParameterizedTypeReference)?
	//        '{' members+=AOPMember* '}'
	//    |
	//        // Skill
	//        {SarlSkill.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'skill' name=ValidID
	//        (    ('extends' extends=JvmParameterizedTypeReference)?
	//            &
	//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
	//        )
	//        '{' members+=AOPMember* '}'
	//    |
	//        // Space
	//        {SarlSpace.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'space' name=ValidID '{' '}'
	//    |
	//        // Artifact
	//        {SarlArtifact.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'artifact' name=ValidID '{' '}'
	//    |
	//        // Class
	//        {SarlClass.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        (    ('extends' extends=JvmParameterizedTypeReference)?
	//            &
	//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
	//        )
	//        '{' members+=Member* '}'
	//    |
	//        // Interface
	//        {SarlInterface.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
	//        '{' (members+=Member)* '}'
	//    |
	//        // Enum
	//        {SarlEnumeration.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'enum' name=ValidID '{'
	//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
	//        '}'
	//    |
	//        // AnnotationType
	//        {SarlAnnotationType.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'annotation' name=ValidID
	//        '{' members+=AnnotationField* '}'
	//    )
	//;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//EventMember returns xtend::XtendMember:
	//    {xtend::XtendMember} annotations+=XAnnotation*
	//    (
	//        // Field
	//        {SarlField.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        (
	//            modifiers += 'extension'
	//            (modifiers+=FieldModifier | modifiers+=CommonModifier)*
	//            name=ValidID ':' type=JvmTypeReference
	//        |
	//            modifiers+=FieldModifier
	//            modifiers+=CommonModifier*
	//            (
	//                modifiers += 'extension'
	//                name=ValidID ':' type=JvmTypeReference
	//            |
	//                name=ValidID (':' type=JvmTypeReference)?
	//            )
	//        )
	//        ('=' initialValue=XExpression)? ';'?
	//    |
	//        // Constructor
	//        {SarlConstructor.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'new'
	//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('(' (parameters+=Parameter (',' parameters+=Parameter)*)? ')')?
	//        ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
	//          &
	//          ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
	//        )
	//        expression=XBlockExpression
	//    )
	//;
	public EventMemberElements getEventMemberAccess() {
		return pEventMember;
	}
	
	public ParserRule getEventMemberRule() {
		return getEventMemberAccess().getRule();
	}
	
	//CapacityMember returns xtend::XtendMember:
	//    {xtend::XtendMember} annotations+=XAnnotation*
	//    {SarlAction.annotationInfo = current}
	//    modifiers+=CommonModifier*
	//    modifiers+=MethodModifier
	//    modifiers+=CommonModifier*
	//    ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//    name=FunctionID
	//    ( '(' (parameters+=Parameter (',' parameters+=Parameter)* )? ')' )?
	//    ( ':'
	//      (    (returnType=TypeReferenceWithTypeArgs)
	//          | (returnType=TypeReferenceNoTypeArgs) )
	//    )?
	//    (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
	//        &
	//        ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
	//        &
	//        ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
	//    )
	//    (expression=XBlockExpression | ';')?
	//;
	public CapacityMemberElements getCapacityMemberAccess() {
		return pCapacityMember;
	}
	
	public ParserRule getCapacityMemberRule() {
		return getCapacityMemberAccess().getRule();
	}
	
	//// Members for agent-oriented types
	//AOPMember returns xtend::XtendMember:
	//    {xtend::XtendMember} annotations+=XAnnotation*
	//    (
	//        // Behavior Unit
	//        {SarlBehaviorUnit.annotationInfo = current}
	//        'on' name=JvmParameterizedTypeReference ('[' guard=XExpression ']')?
	//        expression=XBlockExpression
	//    |
	//        // Capacity Uses
	//        {SarlCapacityUses.annotationInfo = current}
	//        'uses' capacities+=JvmParameterizedTypeReference
	//        (',' capacities+=JvmParameterizedTypeReference)* ';'?
	//    |
	//        // Required capacities
	//        {SarlRequiredCapacity.annotationInfo = current}
	//        'requires' capacities+=JvmParameterizedTypeReference
	//        (',' capacities+=JvmParameterizedTypeReference)* ';'?
	//    |
	//        // Field
	//        {SarlField.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        (
	//            modifiers += 'extension'
	//            (modifiers+=FieldModifier | modifiers+=CommonModifier)*
	//            name=ValidID ':' type=JvmTypeReference
	//        |
	//            modifiers+=FieldModifier
	//            modifiers+=CommonModifier*
	//            (
	//                modifiers += 'extension'
	//                name=ValidID ':' type=JvmTypeReference
	//            |
	//                name=ValidID (':' type=JvmTypeReference)?
	//            )
	//        )
	//        ('=' initialValue=XExpression)? ';'?
	//    |
	//        // Constructor
	//        {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
	//        'new'
	//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
	//          ')'
	//        )?
	//        ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
	//          &
	//          ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
	//        )
	//        expression=XBlockExpression
	//    |
	//        // Action
	//        {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
	//        modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
	//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        name=FunctionID
	//        (
	//            '('
	//            (    parameters+=Parameter
	//                (',' parameters+=Parameter)*
	//            )?
	//            ')'
	//        )?
	//        ( ':'
	//          (    (returnType=TypeReferenceWithTypeArgs)
	//              | (returnType=TypeReferenceNoTypeArgs) )
	//        )?
	//        (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
	//            &
	//            ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
	//            &
	//            ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
	//        )
	//        (expression=XBlockExpression | ';')?
	//    |
	//        // Class
	//        {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
	//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        (    ('extends' extends=JvmParameterizedTypeReference)?
	//            &
	//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
	//        )
	//        '{' members+=Member* '}'
	//    |
	//        // Interface
	//        {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
	//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
	//        '{' members+=Member* '}'
	//    |
	//        // Enum
	//        {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
	//        'enum' name=ValidID '{'
	//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
	//        '}'
	//    |
	//        // AnnotationType
	//        {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
	//        'annotation' name=ValidID
	//        '{' members+=AnnotationField* '}'
	//    )
	//;
	public AOPMemberElements getAOPMemberAccess() {
		return pAOPMember;
	}
	
	public ParserRule getAOPMemberRule() {
		return getAOPMemberAccess().getRule();
	}
	
	//// Members for the object-oriented types
	//@Override
	//Member returns xtend::XtendMember:
	//    {xtend::XtendMember} annotations+=XAnnotation*
	//    (
	//        // Field
	//        {SarlField.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        (
	//            modifiers += 'extension'
	//            (modifiers+=FieldModifier | modifiers+=CommonModifier)*
	//            name=ValidID ':' type=JvmTypeReference
	//        |
	//            modifiers+=FieldModifier
	//            modifiers+=CommonModifier*
	//            (
	//                modifiers += 'extension'
	//                name=ValidID ':' type=JvmTypeReference
	//            |
	//                name=ValidID (':' type=JvmTypeReference)?
	//            )
	//        )
	//        ('=' initialValue=XExpression)? ';'?
	//    |
	//        // Constructor
	//        {SarlConstructor.annotationInfo = current} modifiers+=CommonModifier*
	//        'new'
	//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('(' (parameters+=Parameter (',' parameters+=Parameter)*)?
	//          ')'
	//        )?
	//        ( ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
	//          &
	//          ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
	//        )
	//        expression=XBlockExpression
	//    |
	//        // Action
	//        {SarlAction.annotationInfo = current} modifiers+=CommonModifier*
	//        modifiers+=MethodModifier (modifiers+=CommonModifier | modifiers+=MethodModifier)*
	//        ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        name=FunctionID
	//        (
	//            '('
	//            (    parameters+=Parameter
	//                (',' parameters+=Parameter)*
	//            )?
	//            ')'
	//        )?
	//        ( ':'
	//          (    (returnType=TypeReferenceWithTypeArgs)
	//              | (returnType=TypeReferenceNoTypeArgs) )
	//        )?
	//        (    ('throws' exceptions+=JvmTypeReference (',' exceptions+=JvmTypeReference)*)?
	//            &
	//            ('fires' firedEvents+=JvmTypeReference (',' firedEvents+=JvmTypeReference)*)?
	//            &
	//            ('with' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)*)?
	//        )
	//        (expression=XBlockExpression | ';')?
	//    |
	//        // Class
	//        {SarlClass.annotationInfo = current} modifiers+=CommonModifier*
	//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        (    ('extends' extends=JvmParameterizedTypeReference)?
	//            &
	//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
	//        )
	//        '{' members+=Member* '}'
	//    |
	//        // Interface
	//        {SarlInterface.annotationInfo = current} modifiers+=CommonModifier*
	//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
	//        '{' members+=Member* '}'
	//    |
	//        // Enum
	//        {SarlEnumeration.annotationInfo = current} modifiers+=CommonModifier*
	//        'enum' name=ValidID '{'
	//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
	//        '}'
	//    |
	//        // AnnotationType
	//        {SarlAnnotationType.annotationInfo = current} modifiers+=CommonModifier*
	//        'annotation' name=ValidID
	//        '{' members+=AnnotationField* '}'
	//    )
	//;
	public MemberElements getMemberAccess() {
		return pMember;
	}
	
	public ParserRule getMemberRule() {
		return getMemberAccess().getRule();
	}
	
	//@Override
	//AnnotationField returns xtend::XtendMember:
	//    {xtend::XtendMember} annotations+=XAnnotation*
	//    (
	//        // Annotation Field
	//        {SarlField.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        modifiers+=FieldModifier
	//        modifiers+=CommonModifier*
	//        name=ValidID
	//        (':' type=JvmTypeReference)?
	//        ('=' initialValue=XAnnotationElementValue)? ';'?
	//    |
	//        // Class
	//        {SarlClass.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'class' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        (    ('extends' extends=JvmParameterizedTypeReference)?
	//            &
	//            ('implements' implements+=JvmParameterizedTypeReference (',' implements+=JvmParameterizedTypeReference)*)?
	//        )
	//        '{' members+=Member* '}'
	//    |
	//        // Interface
	//        {SarlInterface.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'interface' name=ValidID ('<' typeParameters+=JvmTypeParameter (',' typeParameters+=JvmTypeParameter)* '>')?
	//        ('extends' extends+=JvmParameterizedTypeReference (',' extends+=JvmParameterizedTypeReference)*)?
	//        '{' members+=Member* '}'
	//    |
	//        // Enum
	//        {SarlEnumeration.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'enum' name=ValidID '{'
	//           (members+=XtendEnumLiteral (',' members+=XtendEnumLiteral)*)? ';'?
	//        '}'
	//    |
	//        // AnnotationType
	//        {SarlAnnotationType.annotationInfo = current}
	//        modifiers+=CommonModifier*
	//        'annotation' name=ValidID
	//        '{' members+=AnnotationField* '}'
	//    )
	//;
	public AnnotationFieldElements getAnnotationFieldAccess() {
		return pAnnotationField;
	}
	
	public ParserRule getAnnotationFieldRule() {
		return getAnnotationFieldAccess().getRule();
	}
	
	//@Override
	//Parameter returns xtend::XtendParameter:
	//    {SarlFormalParameter} annotations+=XAnnotation*
	//    (extension?='extension' annotations+=XAnnotation*)?
	//    name=ValidID ':' parameterType=JvmTypeReference
	//    (   (varArg?='*')
	//      | ('=' defaultValue=XExpression))?
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//@Override
	//XtendEnumLiteral returns xtend::XtendEnumLiteral:
	//    {SarlEnumLiteral}
	//    name=ValidID
	//;
	public XtendEnumLiteralElements getXtendEnumLiteralAccess() {
		return pXtendEnumLiteral;
	}
	
	public ParserRule getXtendEnumLiteralRule() {
		return getXtendEnumLiteralAccess().getRule();
	}
	
	//BreakExpression returns xbase::XExpression :
	//    {SarlBreakExpression}
	//    'break'
	//;
	public BreakExpressionElements getBreakExpressionAccess() {
		return pBreakExpression;
	}
	
	public ParserRule getBreakExpressionRule() {
		return getBreakExpressionAccess().getRule();
	}
	
	//ContinueExpression returns xbase::XExpression :
	//    {SarlContinueExpression}
	//    'continue'
	//;
	public ContinueExpressionElements getContinueExpressionAccess() {
		return pContinueExpression;
	}
	
	public ParserRule getContinueExpressionRule() {
		return getContinueExpressionAccess().getRule();
	}
	
	//AssertExpression returns xbase::XExpression :
	//    {SarlAssertExpression}
	//    'assert' (->condition=XExpression) (->',' message=STRING)?
	//;
	public AssertExpressionElements getAssertExpressionAccess() {
		return pAssertExpression;
	}
	
	public ParserRule getAssertExpressionRule() {
		return getAssertExpressionAccess().getRule();
	}
	
	//AssumeExpression returns xbase::XExpression :
	//    {SarlAssertExpression}
	//    isStatic?='assume' (->condition=XExpression) (->',' message=STRING)?
	//;
	public AssumeExpressionElements getAssumeExpressionAccess() {
		return pAssumeExpression;
	}
	
	public ParserRule getAssumeExpressionRule() {
		return getAssumeExpressionAccess().getRule();
	}
	
	//SarlCastedExpression returns xbase::XCastedExpression:
	//    {SarlCastedExpression} feature = [jvm::JvmIdentifiableElement|IdOrSuper]?
	//;
	public SarlCastedExpressionElements getSarlCastedExpressionAccess() {
		return pSarlCastedExpression;
	}
	
	public ParserRule getSarlCastedExpressionRule() {
		return getSarlCastedExpressionAccess().getRule();
	}
	
	//@Override
	//XCastedExpression returns xbase::XExpression:
	//    // The inheritance and fields of SarlCastedExpression is manually defined into the Ecore model.
	//    XExponentExpression (=>({SarlCastedExpression.target=current} 'as') type=JvmTypeReference)*
	//;
	public XCastedExpressionElements getXCastedExpressionAccess() {
		return pXCastedExpression;
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}
	
	////-----------------------------------------------
	//// BELOW THIS POINT, THE RULES FROM XTEXT ARE OVERLOADED
	//// Variable declaration according to the SARL syntax (not the Xtext/Xtend)
	//@Override
	//XPrimaryExpression returns xbase::XExpression:
	//    // Below the SARL specific expressions
	//    BreakExpression |
	//    ContinueExpression |
	//    AssertExpression |
	//    AssumeExpression |
	//    // Below the expressions inherited from Xtext/Xtend
	//    XConstructorCall |
	//    XBlockExpression |
	//    XSwitchExpression |
	//    XSynchronizedExpression |
	//    XFeatureCall |
	//    XLiteral |
	//    XIfExpression |
	//    XForLoopExpression |
	//    XBasicForLoopExpression |
	//    XWhileExpression |
	//    XDoWhileExpression |
	//    XThrowExpression |
	//    XReturnExpression |
	//    XTryCatchFinallyExpression |
	//    XParenthesizedExpression
	//;
	public XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return pXPrimaryExpression;
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}
	
	//@Override
	//XVariableDeclaration returns xbase::XExpression:
	//    =>({xtend::XtendVariableDeclaration}
	//    (
	//        (
	//            (writeable?='var'|'val')
	//            extension?='extension'?
	//        )
	//    |
	//        (extension?='extension' (writeable?='var'|'val'))
	//    ))
	//    name=ValidID
	//    (':' type=JvmTypeReference)?
	//    ('=' right=XExpression)?
	//;
	public XVariableDeclarationElements getXVariableDeclarationAccess() {
		return pXVariableDeclaration;
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}
	
	//// Formal parameter declaration according to the SARL syntax (not the Xtext/Xtend)
	//@Override
	//JvmFormalParameter returns xtend::XtendFormalParameter:
	//    extension?='extension'? name=ValidID (=> ':' (parameterType=JvmTypeReference))?
	//;
	public JvmFormalParameterElements getJvmFormalParameterAccess() {
		return pJvmFormalParameter;
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}
	
	//// Formal parameter declaration according to the SARL syntax (not the Xtext/Xtend)
	//@Override
	//FullJvmFormalParameter returns xtend::XtendFormalParameter:
	//    extension?='extension'? name=ValidID ':' parameterType=MultiTypeReference
	//;
	public FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return pFullJvmFormalParameter;
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}
	
	//// The type of the for-loop's variable is following the SARL syntax (not the Xtext/Xtend)
	//@Override
	//XForLoopExpression returns xbase::XExpression:
	//    =>({xbase::XForLoopExpression}
	//    'for' '(' declaredParam=SarlXLoopFormalParameter ':') forExpression=XExpression ')'
	//    ( eachExpression=XExpression | ';' )
	//;
	public XForLoopExpressionElements getXForLoopExpressionAccess() {
		return pXForLoopExpression;
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}
	
	//// The following rule is not provided by Xbase, but we use it
	//// in the overloaded version of XForLoopExpression
	//SarlXLoopFormalParameter returns xtend::XtendFormalParameter:
	//    {xtend::XtendFormalParameter}
	//    (extension?='extension'?) name=ValidID
	//    ( 'as' parameterType=JvmTypeReference )?
	//;
	public SarlXLoopFormalParameterElements getSarlXLoopFormalParameterAccess() {
		return pSarlXLoopFormalParameter;
	}
	
	public ParserRule getSarlXLoopFormalParameterRule() {
		return getSarlXLoopFormalParameterAccess().getRule();
	}
	
	//// The type of the switch's variable is following the SARL syntax (not the Xtext/Xtend)
	//@Override
	//XSwitchExpression returns xbase::XExpression:
	//    {xbase::XSwitchExpression}
	//    'switch' (=>('(' declaredParam=JvmFormalParameter '=') switch=XExpression ')'
	//        | =>(declaredParam=JvmFormalParameter '=')? switch=XExpression) '{'
	//    (cases+=XCasePart)*
	//    ('default' ':' default=XExpression )?
	//    '}'
	//;
	public XSwitchExpressionElements getXSwitchExpressionAccess() {
		return pXSwitchExpression;
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}
	
	////-----------------------------------------------
	//// BELOW THIS POINT, See Issue #793 and #846
	//// FIXME Remove When issue 68 is fixed within Xbase, https://github.com/eclipse/xtext-lib/issues/68
	//// FIXME Remove when issue 67 is fixed within Xbase, https://github.com/eclipse/xtext-lib/issues/67
	//// CAUTION: The rule XCastedExpression is redefined above for the support of the SARL cast operator.
	//@Override
	//XMultiplicativeExpression returns xbase::XExpression:
	//    XCastedExpression (=>({xbase::XBinaryOperation.leftOperand=current}
	//        feature=[jvm::JvmIdentifiableElement|OpMulti]
	//    ) rightOperand=XCastedExpression)*
	//;
	public XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return pXMultiplicativeExpression;
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}
	
	//@Override
	//OpMulti:
	//    '*' | '/' | '%'
	//;
	public OpMultiElements getOpMultiAccess() {
		return pOpMulti;
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}
	
	//XExponentExpression returns xbase::XExpression:
	//    XUnaryOperation
	//     (=>({xbase::XBinaryOperation.leftOperand=current} feature=[jvm::JvmIdentifiableElement|OpExponent])
	//        rightOperand=XUnaryOperation
	//    )*
	//;
	public XExponentExpressionElements getXExponentExpressionAccess() {
		return pXExponentExpression;
	}
	
	public ParserRule getXExponentExpressionRule() {
		return getXExponentExpressionAccess().getRule();
	}
	
	//OpExponent:
	//    "**"
	//;
	public OpExponentElements getOpExponentAccess() {
		return pOpExponent;
	}
	
	public ParserRule getOpExponentRule() {
		return getOpExponentAccess().getRule();
	}
	
	//@Override
	//XUnaryOperation returns xbase::XExpression:
	//    {xbase::XUnaryOperation} feature=[jvm::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation
	//    | XPostfixOperation
	//;
	public XUnaryOperationElements getXUnaryOperationAccess() {
		return pXUnaryOperation;
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}
	
	//@Override
	//OpUnary:
	//    "!" | "-" | "+"
	//;
	public OpUnaryElements getOpUnaryAccess() {
		return pOpUnary;
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}
	
	//File returns XtendFile :
	//    ('package' package=QualifiedName ';'?)?
	//    importSection=XImportSection?
	//    (xtendTypes+=Type)*
	//;
	public XtendGrammarAccess.FileElements getFileAccess() {
		return gaXtend.getFileAccess();
	}
	
	public ParserRule getFileRule() {
		return getFileAccess().getRule();
	}
	
	//JvmSuperTypeReference returns types::JvmTypeReference:
	//    JvmParameterizedTypeReference | XFunctionSuperTypeRef
	//;
	public XtendGrammarAccess.JvmSuperTypeReferenceElements getJvmSuperTypeReferenceAccess() {
		return gaXtend.getJvmSuperTypeReferenceAccess();
	}
	
	public ParserRule getJvmSuperTypeReferenceRule() {
		return getJvmSuperTypeReferenceAccess().getRule();
	}
	
	//XFunctionSuperTypeRef returns xtype::XFunctionTypeRef:
	//    (instanceContext?='(' (paramTypes+=JvmTypeReference (',' paramTypes+=JvmTypeReference)*)? ')')? '=>' returnType=JvmTypeReference;
	public XtendGrammarAccess.XFunctionSuperTypeRefElements getXFunctionSuperTypeRefAccess() {
		return gaXtend.getXFunctionSuperTypeRefAccess();
	}
	
	public ParserRule getXFunctionSuperTypeRefRule() {
		return getXFunctionSuperTypeRefAccess().getRule();
	}
	
	//TypeReferenceNoTypeArgs returns types::JvmParameterizedTypeReference:
	//    type=[types::JvmType|QualifiedName]
	//;
	public XtendGrammarAccess.TypeReferenceNoTypeArgsElements getTypeReferenceNoTypeArgsAccess() {
		return gaXtend.getTypeReferenceNoTypeArgsAccess();
	}
	
	public ParserRule getTypeReferenceNoTypeArgsRule() {
		return getTypeReferenceNoTypeArgsAccess().getRule();
	}
	
	///*** The following two rules are a workaround for a limitation in serialization logic
	// *
	// * Apparently we choose the shortest possible path to create the sequence of unassigned
	// * tokens between two assigned values. This doesn't work well with Antlr predicates which
	// * may have lead to another decision path - not necessarily the shortest one in the sense
	// * of the serializer. That's why we make the type arguments mandatory here so that we
	// * do no longer have two equally short path's from method identifier to block expression
	// **************************************************************************************/
	//TypeReferenceWithTypeArgs returns types::JvmTypeReference:
	//    ParameterizedTypeReferenceWithTypeArgs =>({types::JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)*
	//  | TypeReferenceNoTypeArgs =>({types::JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)+
	//  | XFunctionTypeRef
	//;
	public XtendGrammarAccess.TypeReferenceWithTypeArgsElements getTypeReferenceWithTypeArgsAccess() {
		return gaXtend.getTypeReferenceWithTypeArgsAccess();
	}
	
	public ParserRule getTypeReferenceWithTypeArgsRule() {
		return getTypeReferenceWithTypeArgsAccess().getRule();
	}
	
	//ParameterizedTypeReferenceWithTypeArgs returns types::JvmParameterizedTypeReference:
	//    type=[types::JvmType|QualifiedName] (
	//        '<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>'
	//        (=>({types::JvmInnerTypeReference.outer=current} '.') type=[types::JvmType|ValidID] (=>'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>')?)*
	//    )
	//;
	public XtendGrammarAccess.ParameterizedTypeReferenceWithTypeArgsElements getParameterizedTypeReferenceWithTypeArgsAccess() {
		return gaXtend.getParameterizedTypeReferenceWithTypeArgsAccess();
	}
	
	public ParserRule getParameterizedTypeReferenceWithTypeArgsRule() {
		return getParameterizedTypeReferenceWithTypeArgsAccess().getRule();
	}
	
	///*** The following two rules are a workaround for a limitation in serialiation logic */
	//FunctionID:
	//    ValidID | Operators
	//;
	public XtendGrammarAccess.FunctionIDElements getFunctionIDAccess() {
		return gaXtend.getFunctionIDAccess();
	}
	
	public ParserRule getFunctionIDRule() {
		return getFunctionIDAccess().getRule();
	}
	
	//Operators:
	//      OpMultiAssign
	//    | OpOr
	//    | OpAnd
	//    | OpEquality
	//    | OpCompare
	//    | OpOther
	////    | OpAdd completely contained in OpUnary
	//    | OpMulti
	//    | OpUnary
	//    | OpPostfix
	//;
	public XtendGrammarAccess.OperatorsElements getOperatorsAccess() {
		return gaXtend.getOperatorsAccess();
	}
	
	public ParserRule getOperatorsRule() {
		return getOperatorsAccess().getRule();
	}
	
	//CommonModifier:
	//        'public' | 'private' | 'protected' | 'package' | 'abstract' | 'static' | 'dispatch' | 'final'
	//        | 'strictfp' | 'native' |'volatile' | 'synchronized' | 'transient'
	//;
	public XtendGrammarAccess.CommonModifierElements getCommonModifierAccess() {
		return gaXtend.getCommonModifierAccess();
	}
	
	public ParserRule getCommonModifierRule() {
		return getCommonModifierAccess().getRule();
	}
	
	//FieldModifier:
	//        'val' | 'var'
	//;
	public XtendGrammarAccess.FieldModifierElements getFieldModifierAccess() {
		return gaXtend.getFieldModifierAccess();
	}
	
	public ParserRule getFieldModifierRule() {
		return getFieldModifierAccess().getRule();
	}
	
	//MethodModifier:
	//        'def' | 'override'
	//;
	public XtendGrammarAccess.MethodModifierElements getMethodModifierAccess() {
		return gaXtend.getMethodModifierAccess();
	}
	
	public ParserRule getMethodModifierRule() {
		return getMethodModifierAccess().getRule();
	}
	
	//CreateExtensionInfo:
	//    'create' (name=ValidID ':')? createExpression=XExpression
	//;
	public XtendGrammarAccess.CreateExtensionInfoElements getCreateExtensionInfoAccess() {
		return gaXtend.getCreateExtensionInfoAccess();
	}
	
	public ParserRule getCreateExtensionInfoRule() {
		return getCreateExtensionInfoAccess().getRule();
	}
	
	//@Override
	//ValidID:
	//    ID | 'create' | 'annotation' | 'AFTER' | 'BEFORE' | 'SEPARATOR'
	//;
	public XtendGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXtend.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}
	
	//// For feature calls we add 'extension' since there are method such as 'isExtension' or 'getExtension' out there.
	//@Override
	//FeatureCallID:
	//    InnerVarID | 'extension'
	//;
	public XtendGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXtend.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}
	
	//InnerVarID:
	//    ID | 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends'
	//       | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private'
	//       | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient'
	//       | 'AFTER' | 'BEFORE' | 'SEPARATOR'
	//;
	public XtendGrammarAccess.InnerVarIDElements getInnerVarIDAccess() {
		return gaXtend.getInnerVarIDAccess();
	}
	
	public ParserRule getInnerVarIDRule() {
		return getInnerVarIDAccess().getRule();
	}
	
	//@Override
	//XAssignment returns xbase::XExpression :
	//    {xbase::XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment |
	//    XConditionalExpression (
	//        =>({xbase::XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign]) rightOperand=XAssignment
	//    )?;
	public XtendGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXtend.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}
	
	//XConditionalExpression returns xbase::XExpression :
	//    XOrExpression (
	//        // The java grammar does only allow other XConditionalExpression after the colon, but we can be more relaxed
	//        ->({xbase::XIfExpression.if=current} conditionalExpression?='?') then=XExpression (->':' else=XExpression)?
	//    )?
	//;
	public XtendGrammarAccess.XConditionalExpressionElements getXConditionalExpressionAccess() {
		return gaXtend.getXConditionalExpressionAccess();
	}
	
	public ParserRule getXConditionalExpressionRule() {
		return getXConditionalExpressionAccess().getRule();
	}
	
	//@Override
	//XTryCatchFinallyExpression returns xbase::XExpression:
	//    {xbase::XTryCatchFinallyExpression}
	//    'try' (
	//        '(' resources+=InitializedVariableDeclaration (';' resources+=InitializedVariableDeclaration)* ';'? ')'
	//        expression=XExpression
	//        ->(
	//            catchClauses+=XCatchClause+
	//            (=>'finally' finallyExpression=XExpression)?
	//        |    'finally' finallyExpression=XExpression
	//        )?
	//    |
	//        expression=XExpression
	//        (
	//            catchClauses+=XCatchClause+
	//            (=>'finally' finallyExpression=XExpression)?
	//        |    'finally' finallyExpression=XExpression
	//        )
	//    )
	//;
	public XtendGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXtend.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}
	
	//InitializedVariableDeclaration returns XtendVariableDeclaration:
	//    {XtendVariableDeclaration}
	//    VariableModifier
	//    (=>(type=JvmTypeReference name=InnerVarID) | name=InnerVarID) '=' right=XExpression
	//;
	public XtendGrammarAccess.InitializedVariableDeclarationElements getInitializedVariableDeclarationAccess() {
		return gaXtend.getInitializedVariableDeclarationAccess();
	}
	
	public ParserRule getInitializedVariableDeclarationRule() {
		return getInitializedVariableDeclarationAccess().getRule();
	}
	
	//fragment VariableModifier *:
	//      (writeable?='var'|'val') extension?='extension'?
	//    | extension?='extension' (writeable?='var'|'val')
	//;
	public XtendGrammarAccess.VariableModifierElements getVariableModifierAccess() {
		return gaXtend.getVariableModifierAccess();
	}
	
	public ParserRule getVariableModifierRule() {
		return getVariableModifierAccess().getRule();
	}
	
	//@Override
	//XConstructorCall returns xbase::XExpression:
	//    XbaseConstructorCall (=>({AnonymousClass.constructorCall=current} '{') members+=Member* '}')?
	//;
	public XtendGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXtend.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}
	
	//XbaseConstructorCall returns xbase::XConstructorCall:
	//    {xbase::XConstructorCall}
	//    'new' constructor=[types::JvmConstructor|QualifiedName]
	//    (=>'<' typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//    (=>explicitConstructorCall?='('
	//        (
	//            arguments+=XShortClosure
	//          | arguments+=XExpression (',' arguments+=XExpression)*
	//        )?
	//    ')')?
	//    (arguments+=XClosure)?
	//;
	public XtendGrammarAccess.XbaseConstructorCallElements getXbaseConstructorCallAccess() {
		return gaXtend.getXbaseConstructorCallAccess();
	}
	
	public ParserRule getXbaseConstructorCallRule() {
		return getXbaseConstructorCallAccess().getRule();
	}
	
	//MultiTypeReference returns types::JvmTypeReference:
	//    JvmTypeReference ({types::JvmSynonymTypeReference.references+=current} ('|' references+=JvmTypeReference)+)?
	//;
	public XtendGrammarAccess.MultiTypeReferenceElements getMultiTypeReferenceAccess() {
		return gaXtend.getMultiTypeReferenceAccess();
	}
	
	public ParserRule getMultiTypeReferenceRule() {
		return getMultiTypeReferenceAccess().getRule();
	}
	
	//@Override
	//XStringLiteral returns xbase::XExpression:
	//    SimpleStringLiteral | RichString
	//;
	public XtendGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXtend.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}
	
	//@Override
	//XCasePart returns xbase::XCasePart:
	//    {xbase::XCasePart}
	//    typeGuard=MultiTypeReference? ('case' case=XExpression)?
	//        (':' then=XExpression | fallThrough?=',')
	//;
	public XtendGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXtend.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}
	
	//XExpressionOrSimpleConstructorCall returns xbase::XExpression:
	//    ->XbaseConstructorCall | XExpression
	//;
	public XtendGrammarAccess.XExpressionOrSimpleConstructorCallElements getXExpressionOrSimpleConstructorCallAccess() {
		return gaXtend.getXExpressionOrSimpleConstructorCallAccess();
	}
	
	public ParserRule getXExpressionOrSimpleConstructorCallRule() {
		return getXExpressionOrSimpleConstructorCallAccess().getRule();
	}
	
	//SimpleStringLiteral returns xbase::XExpression:
	//    {xbase::XStringLiteral} value=STRING
	//;
	public XtendGrammarAccess.SimpleStringLiteralElements getSimpleStringLiteralAccess() {
		return gaXtend.getSimpleStringLiteralAccess();
	}
	
	public ParserRule getSimpleStringLiteralRule() {
		return getSimpleStringLiteralAccess().getRule();
	}
	
	//RichString returns xbase::XExpression:
	//    {RichString} (
	//        expressions+=RichStringLiteral |
	//        expressions+=RichStringLiteralStart expressions+=RichStringPart?
	//        (expressions+=RichStringLiteralInbetween expressions+=RichStringPart?)*
	//        expressions+=RichStringLiteralEnd
	//    )
	//;
	public XtendGrammarAccess.RichStringElements getRichStringAccess() {
		return gaXtend.getRichStringAccess();
	}
	
	public ParserRule getRichStringRule() {
		return getRichStringAccess().getRule();
	}
	
	//RichStringLiteral returns xbase::XExpression :
	//    {RichStringLiteral} value=RICH_TEXT
	//;
	public XtendGrammarAccess.RichStringLiteralElements getRichStringLiteralAccess() {
		return gaXtend.getRichStringLiteralAccess();
	}
	
	public ParserRule getRichStringLiteralRule() {
		return getRichStringLiteralAccess().getRule();
	}
	
	//RichStringLiteralStart returns xbase::XExpression :
	//    {RichStringLiteral} value=RICH_TEXT_START
	//;
	public XtendGrammarAccess.RichStringLiteralStartElements getRichStringLiteralStartAccess() {
		return gaXtend.getRichStringLiteralStartAccess();
	}
	
	public ParserRule getRichStringLiteralStartRule() {
		return getRichStringLiteralStartAccess().getRule();
	}
	
	//RichStringLiteralInbetween returns xbase::XExpression :
	//    {RichStringLiteral}
	//    ( value=RICH_TEXT_INBETWEEN | value=COMMENT_RICH_TEXT_INBETWEEN )
	//;
	public XtendGrammarAccess.RichStringLiteralInbetweenElements getRichStringLiteralInbetweenAccess() {
		return gaXtend.getRichStringLiteralInbetweenAccess();
	}
	
	public ParserRule getRichStringLiteralInbetweenRule() {
		return getRichStringLiteralInbetweenAccess().getRule();
	}
	
	//RichStringLiteralEnd returns xbase::XExpression :
	//    {RichStringLiteral}
	//    ( value=RICH_TEXT_END | value=COMMENT_RICH_TEXT_END )
	//;
	public XtendGrammarAccess.RichStringLiteralEndElements getRichStringLiteralEndAccess() {
		return gaXtend.getRichStringLiteralEndAccess();
	}
	
	public ParserRule getRichStringLiteralEndRule() {
		return getRichStringLiteralEndAccess().getRule();
	}
	
	//InternalRichString returns xbase::XExpression:
	//    {RichString} (
	//        expressions+=RichStringLiteralInbetween (expressions+=RichStringPart? expressions+=RichStringLiteralInbetween)*
	//    )
	//;
	public XtendGrammarAccess.InternalRichStringElements getInternalRichStringAccess() {
		return gaXtend.getInternalRichStringAccess();
	}
	
	public ParserRule getInternalRichStringRule() {
		return getInternalRichStringAccess().getRule();
	}
	
	//RichStringPart returns xbase::XExpression:
	//    XExpressionOrVarDeclaration |
	//    RichStringForLoop |
	//    RichStringIf
	//;
	public XtendGrammarAccess.RichStringPartElements getRichStringPartAccess() {
		return gaXtend.getRichStringPartAccess();
	}
	
	public ParserRule getRichStringPartRule() {
		return getRichStringPartAccess().getRule();
	}
	
	//RichStringForLoop returns xbase::XExpression:
	//    {RichStringForLoop}
	//    "FOR" declaredParam=JvmFormalParameter ':' forExpression=XExpression
	//        ("BEFORE" before=XExpression)?
	//        ("SEPARATOR" separator=XExpression)?
	//        ("AFTER" after=XExpression)?
	//        eachExpression=InternalRichString
	//    "ENDFOR"
	//;
	public XtendGrammarAccess.RichStringForLoopElements getRichStringForLoopAccess() {
		return gaXtend.getRichStringForLoopAccess();
	}
	
	public ParserRule getRichStringForLoopRule() {
		return getRichStringForLoopAccess().getRule();
	}
	
	//RichStringIf returns xbase::XExpression :
	//    {RichStringIf}
	//    "IF" if=XExpression
	//        then=InternalRichString
	//        elseIfs+=RichStringElseIf*
	//    ("ELSE"
	//        else=InternalRichString)?
	//    "ENDIF"
	//;
	public XtendGrammarAccess.RichStringIfElements getRichStringIfAccess() {
		return gaXtend.getRichStringIfAccess();
	}
	
	public ParserRule getRichStringIfRule() {
		return getRichStringIfAccess().getRule();
	}
	
	//RichStringElseIf returns RichStringElseIf:
	//    "ELSEIF" if=XExpression then=InternalRichString
	//;
	public XtendGrammarAccess.RichStringElseIfElements getRichStringElseIfAccess() {
		return gaXtend.getRichStringElseIfAccess();
	}
	
	public ParserRule getRichStringElseIfRule() {
		return getRichStringElseIfAccess().getRule();
	}
	
	//@Override
	//terminal ID:
	//    '^'? (IDENTIFIER_START | UNICODE_ESCAPE) (IDENTIFIER_PART | UNICODE_ESCAPE)*
	//;
	public TerminalRule getIDRule() {
		return gaXtend.getIDRule();
	}
	
	//terminal fragment HEX_DIGIT:
	//    '0'..'9' | 'a'..'f' | 'A'..'F'
	//;
	public TerminalRule getHEX_DIGITRule() {
		return gaXtend.getHEX_DIGITRule();
	}
	
	//terminal fragment UNICODE_ESCAPE:
	//    '\\' 'u' ( HEX_DIGIT ( HEX_DIGIT ( HEX_DIGIT HEX_DIGIT? )? )? )?
	//;
	public TerminalRule getUNICODE_ESCAPERule() {
		return gaXtend.getUNICODE_ESCAPERule();
	}
	
	//terminal RICH_TEXT : "'''" IN_RICH_STRING* ("'''"| ("'" "'"?)? EOF);
	public TerminalRule getRICH_TEXTRule() {
		return gaXtend.getRICH_TEXTRule();
	}
	
	//terminal RICH_TEXT_START : "'''" IN_RICH_STRING* ("'" "'"?)? '�';
	public TerminalRule getRICH_TEXT_STARTRule() {
		return gaXtend.getRICH_TEXT_STARTRule();
	}
	
	//terminal RICH_TEXT_END : '�' IN_RICH_STRING* ("'''"| ("'" "'"?)? EOF) ;
	public TerminalRule getRICH_TEXT_ENDRule() {
		return gaXtend.getRICH_TEXT_ENDRule();
	}
	
	//terminal RICH_TEXT_INBETWEEN : '�' IN_RICH_STRING* ("'" "'"?)? '�';
	public TerminalRule getRICH_TEXT_INBETWEENRule() {
		return gaXtend.getRICH_TEXT_INBETWEENRule();
	}
	
	//terminal COMMENT_RICH_TEXT_INBETWEEN: "��" !('\n'|'\r')* ('\r'? '\n' IN_RICH_STRING* ("'" "'"?)? '�')?;
	public TerminalRule getCOMMENT_RICH_TEXT_INBETWEENRule() {
		return gaXtend.getCOMMENT_RICH_TEXT_INBETWEENRule();
	}
	
	//terminal COMMENT_RICH_TEXT_END: "��" !('\n'|'\r')* (('\r'? '\n' IN_RICH_STRING* ("'''"| ("'" "'"?)? EOF)) | EOF);
	public TerminalRule getCOMMENT_RICH_TEXT_ENDRule() {
		return gaXtend.getCOMMENT_RICH_TEXT_ENDRule();
	}
	
	//terminal fragment IN_RICH_STRING :
	//      "''" !('�'|"'")
	//    | "'" !('�'|"'")
	//    | !('�'|"'");
	public TerminalRule getIN_RICH_STRINGRule() {
		return gaXtend.getIN_RICH_STRINGRule();
	}
	
	//terminal fragment IDENTIFIER_START:
	//      '\u0024'
	//    | '\u0041'..'\u005A'
	//    | '\u005F'
	//    | '\u0061'..'\u007A'
	//    | '\u00A2'..'\u00A5'
	//    | '\u00AA'
	//    | '\u00B5'
	//    | '\u00BA'
	//    | '\u00C0'..'\u00D6'
	//    | '\u00D8'..'\u00F6'
	//    | '\u00F8'..'\u0236'
	//    | '\u0250'..'\u02C1'
	//    | '\u02C6'..'\u02D1'
	//    | '\u02E0'..'\u02E4'
	//    | '\u02EE'
	//    | '\u037A'
	//    | '\u0386'
	//    | '\u0388'..'\u038A'
	//    | '\u038C'
	//    | '\u038E'..'\u03A1'
	//    | '\u03A3'..'\u03CE'
	//    | '\u03D0'..'\u03F5'
	//    | '\u03F7'..'\u03FB'
	//    | '\u0400'..'\u0481'
	//    | '\u048A'..'\u04CE'
	//    | '\u04D0'..'\u04F5'
	//    | '\u04F8'..'\u04F9'
	//    | '\u0500'..'\u050F'
	//    | '\u0531'..'\u0556'
	//    | '\u0559'
	//    | '\u0561'..'\u0587'
	//    | '\u05D0'..'\u05EA'
	//    | '\u05F0'..'\u05F2'
	//    | '\u0621'..'\u063A'
	//    | '\u0640'..'\u064A'
	//    | '\u066E'..'\u066F'
	//    | '\u0671'..'\u06D3'
	//    | '\u06D5'
	//    | '\u06E5'..'\u06E6'
	//    | '\u06EE'..'\u06EF'
	//    | '\u06FA'..'\u06FC'
	//    | '\u06FF'
	//    | '\u0710'
	//    | '\u0712'..'\u072F'
	//    | '\u074D'..'\u074F'
	//    | '\u0780'..'\u07A5'
	//    | '\u07B1'
	//    | '\u0904'..'\u0939'
	//    | '\u093D'
	//    | '\u0950'
	//    | '\u0958'..'\u0961'
	//    | '\u0985'..'\u098C'
	//    | '\u098F'..'\u0990'
	//    | '\u0993'..'\u09A8'
	//    | '\u09AA'..'\u09B0'
	//    | '\u09B2'
	//    | '\u09B6'..'\u09B9'
	//    | '\u09BD'
	//    | '\u09DC'..'\u09DD'
	//    | '\u09DF'..'\u09E1'
	//    | '\u09F0'..'\u09F3'
	//    | '\u0A05'..'\u0A0A'
	//    | '\u0A0F'..'\u0A10'
	//    | '\u0A13'..'\u0A28'
	//    | '\u0A2A'..'\u0A30'
	//    | '\u0A32'..'\u0A33'
	//    | '\u0A35'..'\u0A36'
	//    | '\u0A38'..'\u0A39'
	//    | '\u0A59'..'\u0A5C'
	//    | '\u0A5E'
	//    | '\u0A72'..'\u0A74'
	//    | '\u0A85'..'\u0A8D'
	//    | '\u0A8F'..'\u0A91'
	//    | '\u0A93'..'\u0AA8'
	//    | '\u0AAA'..'\u0AB0'
	//    | '\u0AB2'..'\u0AB3'
	//    | '\u0AB5'..'\u0AB9'
	//    | '\u0ABD'
	//    | '\u0AD0'
	//    | '\u0AE0'..'\u0AE1'
	//    | '\u0AF1'
	//    | '\u0B05'..'\u0B0C'
	//    | '\u0B0F'..'\u0B10'
	//    | '\u0B13'..'\u0B28'
	//    | '\u0B2A'..'\u0B30'
	//    | '\u0B32'..'\u0B33'
	//    | '\u0B35'..'\u0B39'
	//    | '\u0B3D'
	//    | '\u0B5C'..'\u0B5D'
	//    | '\u0B5F'..'\u0B61'
	//    | '\u0B71'
	//    | '\u0B83'
	//    | '\u0B85'..'\u0B8A'
	//    | '\u0B8E'..'\u0B90'
	//    | '\u0B92'..'\u0B95'
	//    | '\u0B99'..'\u0B9A'
	//    | '\u0B9C'
	//    | '\u0B9E'..'\u0B9F'
	//    | '\u0BA3'..'\u0BA4'
	//    | '\u0BA8'..'\u0BAA'
	//    | '\u0BAE'..'\u0BB5'
	//    | '\u0BB7'..'\u0BB9'
	//    | '\u0BF9'
	//    | '\u0C05'..'\u0C0C'
	//    | '\u0C0E'..'\u0C10'
	//    | '\u0C12'..'\u0C28'
	//    | '\u0C2A'..'\u0C33'
	//    | '\u0C35'..'\u0C39'
	//    | '\u0C60'..'\u0C61'
	//    | '\u0C85'..'\u0C8C'
	//    | '\u0C8E'..'\u0C90'
	//    | '\u0C92'..'\u0CA8'
	//    | '\u0CAA'..'\u0CB3'
	//    | '\u0CB5'..'\u0CB9'
	//    | '\u0CBD'
	//    | '\u0CDE'
	//    | '\u0CE0'..'\u0CE1'
	//    | '\u0D05'..'\u0D0C'
	//    | '\u0D0E'..'\u0D10'
	//    | '\u0D12'..'\u0D28'
	//    | '\u0D2A'..'\u0D39'
	//    | '\u0D60'..'\u0D61'
	//    | '\u0D85'..'\u0D96'
	//    | '\u0D9A'..'\u0DB1'
	//    | '\u0DB3'..'\u0DBB'
	//    | '\u0DBD'
	//    | '\u0DC0'..'\u0DC6'
	//    | '\u0E01'..'\u0E30'
	//    | '\u0E32'..'\u0E33'
	//    | '\u0E3F'..'\u0E46'
	//    | '\u0E81'..'\u0E82'
	//    | '\u0E84'
	//    | '\u0E87'..'\u0E88'
	//    | '\u0E8A'
	//    | '\u0E8D'
	//    | '\u0E94'..'\u0E97'
	//    | '\u0E99'..'\u0E9F'
	//    | '\u0EA1'..'\u0EA3'
	//    | '\u0EA5'
	//    | '\u0EA7'
	//    | '\u0EAA'..'\u0EAB'
	//    | '\u0EAD'..'\u0EB0'
	//    | '\u0EB2'..'\u0EB3'
	//    | '\u0EBD'
	//    | '\u0EC0'..'\u0EC4'
	//    | '\u0EC6'
	//    | '\u0EDC'..'\u0EDD'
	//    | '\u0F00'
	//    | '\u0F40'..'\u0F47'
	//    | '\u0F49'..'\u0F6A'
	//    | '\u0F88'..'\u0F8B'
	//    | '\u1000'..'\u1021'
	//    | '\u1023'..'\u1027'
	//    | '\u1029'..'\u102A'
	//    | '\u1050'..'\u1055'
	//    | '\u10A0'..'\u10C5'
	//    | '\u10D0'..'\u10F8'
	//    | '\u1100'..'\u1159'
	//    | '\u115F'..'\u11A2'
	//    | '\u11A8'..'\u11F9'
	//    | '\u1200'..'\u1206'
	//    | '\u1208'..'\u1246'
	//    | '\u1248'
	//    | '\u124A'..'\u124D'
	//    | '\u1250'..'\u1256'
	//    | '\u1258'
	//    | '\u125A'..'\u125D'
	//    | '\u1260'..'\u1286'
	//    | '\u1288'
	//    | '\u128A'..'\u128D'
	//    | '\u1290'..'\u12AE'
	//    | '\u12B0'
	//    | '\u12B2'..'\u12B5'
	//    | '\u12B8'..'\u12BE'
	//    | '\u12C0'
	//    | '\u12C2'..'\u12C5'
	//    | '\u12C8'..'\u12CE'
	//    | '\u12D0'..'\u12D6'
	//    | '\u12D8'..'\u12EE'
	//    | '\u12F0'..'\u130E'
	//    | '\u1310'
	//    | '\u1312'..'\u1315'
	//    | '\u1318'..'\u131E'
	//    | '\u1320'..'\u1346'
	//    | '\u1348'..'\u135A'
	//    | '\u13A0'..'\u13F4'
	//    | '\u1401'..'\u166C'
	//    | '\u166F'..'\u1676'
	//    | '\u1681'..'\u169A'
	//    | '\u16A0'..'\u16EA'
	//    | '\u16EE'..'\u16F0'
	//    | '\u1700'..'\u170C'
	//    | '\u170E'..'\u1711'
	//    | '\u1720'..'\u1731'
	//    | '\u1740'..'\u1751'
	//    | '\u1760'..'\u176C'
	//    | '\u176E'..'\u1770'
	//    | '\u1780'..'\u17B3'
	//    | '\u17D7'
	//    | '\u17DB'..'\u17DC'
	//    | '\u1820'..'\u1877'
	//    | '\u1880'..'\u18A8'
	//    | '\u1900'..'\u191C'
	//    | '\u1950'..'\u196D'
	//    | '\u1970'..'\u1974'
	//    | '\u1D00'..'\u1D6B'
	//    | '\u1E00'..'\u1E9B'
	//    | '\u1EA0'..'\u1EF9'
	//    | '\u1F00'..'\u1F15'
	//    | '\u1F18'..'\u1F1D'
	//    | '\u1F20'..'\u1F45'
	//    | '\u1F48'..'\u1F4D'
	//    | '\u1F50'..'\u1F57'
	//    | '\u1F59'
	//    | '\u1F5B'
	//    | '\u1F5D'
	//    | '\u1F5F'..'\u1F7D'
	//    | '\u1F80'..'\u1FB4'
	//    | '\u1FB6'..'\u1FBC'
	//    | '\u1FBE'
	//    | '\u1FC2'..'\u1FC4'
	//    | '\u1FC6'..'\u1FCC'
	//    | '\u1FD0'..'\u1FD3'
	//    | '\u1FD6'..'\u1FDB'
	//    | '\u1FE0'..'\u1FEC'
	//    | '\u1FF2'..'\u1FF4'
	//    | '\u1FF6'..'\u1FFC'
	//    | '\u203F'..'\u2040'
	//    | '\u2054'
	//    | '\u2071'
	//    | '\u207F'
	//    | '\u20A0'..'\u20B1'
	//    | '\u2102'
	//    | '\u2107'
	//    | '\u210A'..'\u2113'
	//    | '\u2115'
	//    | '\u2119'..'\u211D'
	//    | '\u2124'
	//    | '\u2126'
	//    | '\u2128'
	//    | '\u212A'..'\u212D'
	//    | '\u212F'..'\u2131'
	//    | '\u2133'..'\u2139'
	//    | '\u213D'..'\u213F'
	//    | '\u2145'..'\u2149'
	//    | '\u2160'..'\u2183'
	//    | '\u3005'..'\u3007'
	//    | '\u3021'..'\u3029'
	//    | '\u3031'..'\u3035'
	//    | '\u3038'..'\u303C'
	//    | '\u3041'..'\u3096'
	//    | '\u309D'..'\u309F'
	//    | '\u30A1'..'\u30FF'
	//    | '\u3105'..'\u312C'
	//    | '\u3131'..'\u318E'
	//    | '\u31A0'..'\u31B7'
	//    | '\u31F0'..'\u31FF'
	//    | '\u3400'..'\u4DB5'
	//    | '\u4E00'..'\u9FA5'
	//    | '\uA000'..'\uA48C'
	//    | '\uAC00'..'\uD7A3'
	//    | '\uF900'..'\uFA2D'
	//    | '\uFA30'..'\uFA6A'
	//    | '\uFB00'..'\uFB06'
	//    | '\uFB13'..'\uFB17'
	//    | '\uFB1D'
	//    | '\uFB1F'..'\uFB28'
	//    | '\uFB2A'..'\uFB36'
	//    | '\uFB38'..'\uFB3C'
	//    | '\uFB3E'
	//    | '\uFB40'..'\uFB41'
	//    | '\uFB43'..'\uFB44'
	//    | '\uFB46'..'\uFBB1'
	//    | '\uFBD3'..'\uFD3D'
	//    | '\uFD50'..'\uFD8F'
	//    | '\uFD92'..'\uFDC7'
	//    | '\uFDF0'..'\uFDFC'
	//    | '\uFE33'..'\uFE34'
	//    | '\uFE4D'..'\uFE4F'
	//    | '\uFE69'
	//    | '\uFE70'..'\uFE74'
	//    | '\uFE76'..'\uFEFC'
	//    | '\uFF04'
	//    | '\uFF21'..'\uFF3A'
	//    | '\uFF3F'
	//    | '\uFF41'..'\uFF5A'
	//    | '\uFF65'..'\uFFBE'
	//    | '\uFFC2'..'\uFFC7'
	//    | '\uFFCA'..'\uFFCF'
	//    | '\uFFD2'..'\uFFD7'
	//    | '\uFFDA'..'\uFFDC'
	//    | '\uFFE0'..'\uFFE1'
	//    | '\uFFE5'..'\uFFE6'
	//;
	public TerminalRule getIDENTIFIER_STARTRule() {
		return gaXtend.getIDENTIFIER_STARTRule();
	}
	
	//terminal fragment IDENTIFIER_PART:
	//    IDENTIFIER_START | IDENTIFIER_PART_IMPL
	//;
	public TerminalRule getIDENTIFIER_PARTRule() {
		return gaXtend.getIDENTIFIER_PARTRule();
	}
	
	//terminal fragment IDENTIFIER_PART_IMPL:
	//      '\u0000'..'\u0008'
	//    | '\u000E'..'\u001B'
	//    | '\u0030'..'\u0039'
	//    | '\u007F'..'\u009F'
	//    | '\u00AD'
	//    | '\u0300'..'\u0357'
	//    | '\u035D'..'\u036F'
	//    | '\u0483'..'\u0486'
	//    | '\u0591'..'\u05A1'
	//    | '\u05A3'..'\u05B9'
	//    | '\u05BB'..'\u05BD'
	//    | '\u05BF'
	//    | '\u05C1'..'\u05C2'
	//    | '\u05C4'
	//    | '\u0600'..'\u0603'
	//    | '\u0610'..'\u0615'
	//    | '\u064B'..'\u0658'
	//    | '\u0660'..'\u0669'
	//    | '\u0670'
	//    | '\u06D6'..'\u06DD'
	//    | '\u06DF'..'\u06E4'
	//    | '\u06E7'..'\u06E8'
	//    | '\u06EA'..'\u06ED'
	//    | '\u06F0'..'\u06F9'
	//    | '\u070F'
	//    | '\u0711'
	//    | '\u0730'..'\u074A'
	//    | '\u07A6'..'\u07B0'
	//    | '\u0901'..'\u0903'
	//    | '\u093C'
	//    | '\u093E'..'\u094D'
	//    | '\u0951'..'\u0954'
	//    | '\u0962'..'\u0963'
	//    | '\u0966'..'\u096F'
	//    | '\u0981'..'\u0983'
	//    | '\u09BC'
	//    | '\u09BE'..'\u09C4'
	//    | '\u09C7'..'\u09C8'
	//    | '\u09CB'..'\u09CD'
	//    | '\u09D7'
	//    | '\u09E2'..'\u09E3'
	//    | '\u09E6'..'\u09EF'
	//    | '\u0A01'..'\u0A03'
	//    | '\u0A3C'
	//    | '\u0A3E'..'\u0A42'
	//    | '\u0A47'..'\u0A48'
	//    | '\u0A4B'..'\u0A4D'
	//    | '\u0A66'..'\u0A71'
	//    | '\u0A81'..'\u0A83'
	//    | '\u0ABC'
	//    | '\u0ABE'..'\u0AC5'
	//    | '\u0AC7'..'\u0AC9'
	//    | '\u0ACB'..'\u0ACD'
	//    | '\u0AE2'..'\u0AE3'
	//    | '\u0AE6'..'\u0AEF'
	//    | '\u0B01'..'\u0B03'
	//    | '\u0B3C'
	//    | '\u0B3E'..'\u0B43'
	//    | '\u0B47'..'\u0B48'
	//    | '\u0B4B'..'\u0B4D'
	//    | '\u0B56'..'\u0B57'
	//    | '\u0B66'..'\u0B6F'
	//    | '\u0B82'
	//    | '\u0BBE'..'\u0BC2'
	//    | '\u0BC6'..'\u0BC8'
	//    | '\u0BCA'..'\u0BCD'
	//    | '\u0BD7'
	//    | '\u0BE7'..'\u0BEF'
	//    | '\u0C01'..'\u0C03'
	//    | '\u0C3E'..'\u0C44'
	//    | '\u0C46'..'\u0C48'
	//    | '\u0C4A'..'\u0C4D'
	//    | '\u0C55'..'\u0C56'
	//    | '\u0C66'..'\u0C6F'
	//    | '\u0C82'..'\u0C83'
	//    | '\u0CBC'
	//    | '\u0CBE'..'\u0CC4'
	//    | '\u0CC6'..'\u0CC8'
	//    | '\u0CCA'..'\u0CCD'
	//    | '\u0CD5'..'\u0CD6'
	//    | '\u0CE6'..'\u0CEF'
	//    | '\u0D02'..'\u0D03'
	//    | '\u0D3E'..'\u0D43'
	//    | '\u0D46'..'\u0D48'
	//    | '\u0D4A'..'\u0D4D'
	//    | '\u0D57'
	//    | '\u0D66'..'\u0D6F'
	//    | '\u0D82'..'\u0D83'
	//    | '\u0DCA'
	//    | '\u0DCF'..'\u0DD4'
	//    | '\u0DD6'
	//    | '\u0DD8'..'\u0DDF'
	//    | '\u0DF2'..'\u0DF3'
	//    | '\u0E31'
	//    | '\u0E34'..'\u0E3A'
	//    | '\u0E47'..'\u0E4E'
	//    | '\u0E50'..'\u0E59'
	//    | '\u0EB1'
	//    | '\u0EB4'..'\u0EB9'
	//    | '\u0EBB'..'\u0EBC'
	//    | '\u0EC8'..'\u0ECD'
	//    | '\u0ED0'..'\u0ED9'
	//    | '\u0F18'..'\u0F19'
	//    | '\u0F20'..'\u0F29'
	//    | '\u0F35'
	//    | '\u0F37'
	//    | '\u0F39'
	//    | '\u0F3E'..'\u0F3F'
	//    | '\u0F71'..'\u0F84'
	//    | '\u0F86'..'\u0F87'
	//    | '\u0F90'..'\u0F97'
	//    | '\u0F99'..'\u0FBC'
	//    | '\u0FC6'
	//    | '\u102C'..'\u1032'
	//    | '\u1036'..'\u1039'
	//    | '\u1040'..'\u1049'
	//    | '\u1056'..'\u1059'
	//    | '\u1369'..'\u1371'
	//    | '\u1712'..'\u1714'
	//    | '\u1732'..'\u1734'
	//    | '\u1752'..'\u1753'
	//    | '\u1772'..'\u1773'
	//    | '\u17B4'..'\u17D3'
	//    | '\u17DD'
	//    | '\u17E0'..'\u17E9'
	//    | '\u180B'..'\u180D'
	//    | '\u1810'..'\u1819'
	//    | '\u18A9'
	//    | '\u1920'..'\u192B'
	//    | '\u1930'..'\u193B'
	//    | '\u1946'..'\u194F'
	//    | '\u200C'..'\u200F'
	//    | '\u202A'..'\u202E'
	//    | '\u2060'..'\u2063'
	//    | '\u206A'..'\u206F'
	//    | '\u20D0'..'\u20DC'
	//    | '\u20E1'
	//    | '\u20E5'..'\u20EA'
	//    | '\u302A'..'\u302F'
	//    | '\u3099'..'\u309A'
	//    | '\uFB1E'
	//    | '\uFE00'..'\uFE0F'
	//    | '\uFE20'..'\uFE23'
	//    | '\uFEFF'
	//    | '\uFF10'..'\uFF19'
	//    | '\uFFF9'..'\uFFFB'
	//;
	public TerminalRule getIDENTIFIER_PART_IMPLRule() {
		return gaXtend.getIDENTIFIER_PART_IMPLRule();
	}
	
	//XAnnotation :
	//    {XAnnotation}
	//    '@' annotationType=[types::JvmAnnotationType | QualifiedName] (=>'('
	//        (
	//            elementValuePairs+=XAnnotationElementValuePair (',' elementValuePairs+=XAnnotationElementValuePair)*
	//        |    value=XAnnotationElementValueOrCommaList
	//        )?
	//    ')')?
	//;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElements getXAnnotationAccess() {
		return gaXbaseWithAnnotations.getXAnnotationAccess();
	}
	
	public ParserRule getXAnnotationRule() {
		return getXAnnotationAccess().getRule();
	}
	
	//XAnnotationElementValuePair :
	//    =>(element=[types::JvmOperation|ValidID] '=') value=XAnnotationElementValue
	//;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValuePairElements getXAnnotationElementValuePairAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValuePairAccess();
	}
	
	public ParserRule getXAnnotationElementValuePairRule() {
		return getXAnnotationElementValuePairAccess().getRule();
	}
	
	//XAnnotationElementValueOrCommaList returns xbase::XExpression:
	//      =>({xbase::XListLiteral} '#' '[') (elements+=XAnnotationOrExpression (',' elements+=XAnnotationOrExpression )*)? ']'
	//    | XAnnotationOrExpression ({xbase::XListLiteral.elements+=current} (',' elements+=XAnnotationOrExpression )+)?
	//;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueOrCommaListElements getXAnnotationElementValueOrCommaListAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueOrCommaListAccess();
	}
	
	public ParserRule getXAnnotationElementValueOrCommaListRule() {
		return getXAnnotationElementValueOrCommaListAccess().getRule();
	}
	
	//XAnnotationElementValue returns xbase::XExpression :
	//      =>({xbase::XListLiteral} '#' '[') (elements+=XAnnotationOrExpression (',' elements+=XAnnotationOrExpression )*)? ']'
	//    | XAnnotationOrExpression
	//;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueElements getXAnnotationElementValueAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueAccess();
	}
	
	public ParserRule getXAnnotationElementValueRule() {
		return getXAnnotationElementValueAccess().getRule();
	}
	
	//XAnnotationOrExpression returns xbase::XExpression:
	//    XAnnotation |
	//    XExpression
	//;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationOrExpressionElements getXAnnotationOrExpressionAccess() {
		return gaXbaseWithAnnotations.getXAnnotationOrExpressionAccess();
	}
	
	public ParserRule getXAnnotationOrExpressionRule() {
		return getXAnnotationOrExpressionAccess().getRule();
	}
	
	//XExpression returns XExpression :
	//    XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}
	
	//OpSingleAssign:
	//    '='
	//;
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}
	
	//OpMultiAssign:
	//    '+=' | '-=' | '*=' | '/=' | '%=' |
	//    '<' '<' '=' |
	//    '>' '>'? '>=';
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}
	
	//XOrExpression returns XExpression:
	//    XAndExpression (=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr]) rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}
	
	//OpOr:
	//    '||';
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}
	
	//XAndExpression returns XExpression:
	//    XEqualityExpression (=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd]) rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}
	
	//OpAnd:
	//    '&&';
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}
	
	//XEqualityExpression returns XExpression:
	//    XRelationalExpression (=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//    rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}
	
	//OpEquality:
	//    '==' | '!=' | '===' | '!==';
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}
	
	//XRelationalExpression returns XExpression:
	//    XOtherOperatorExpression
	//    (=>({XInstanceOfExpression.expression=current} 'instanceof') type=JvmTypeReference |
	//     =>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare]) rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}
	
	//OpCompare:
	//    '>=' | '<' '=' | '>' | '<' ;
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}
	
	//XOtherOperatorExpression returns XExpression:
	//    XAdditiveExpression (=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//    rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}
	
	//OpOther:
	//      '->'
	//    | '..<'
	//    | '>' '..'
	//    | '..'
	//    | '=>'
	//    | '>' (=>('>' '>') | '>')
	//    | '<' (=>('<' '<') | '<' | '=>')
	//    | '<>'
	//    | '?:';
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}
	
	//XAdditiveExpression returns XExpression:
	//    XMultiplicativeExpression (=>({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//    rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}
	
	//OpAdd:
	//    '+' | '-';
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}
	
	//XPostfixOperation returns XExpression:
	//    XMemberFeatureCall =>({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?
	//;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}
	
	//OpPostfix:
	//    "++" | "--"
	//;
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}
	
	//XMemberFeatureCall returns XExpression:
	//    XPrimaryExpression
	//    (=>({XAssignment.assignable=current} ('.'|explicitStatic?="::") feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment
	//    |=>({XMemberFeatureCall.memberCallTarget=current} ("."|nullSafe?="?."|explicitStatic?="::"))
	//        ('<' typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//        feature=[types::JvmIdentifiableElement|IdOrSuper] (
	//            =>explicitOperationCall?='('
	//                (
	//                    memberCallArguments+=XShortClosure
	//                  | memberCallArguments+=XExpression (',' memberCallArguments+=XExpression)*
	//                )?
	//            ')')?
	//            memberCallArguments+=XClosure?
	//        )*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}
	
	//XLiteral returns XExpression:
	//    XCollectionLiteral |
	//    XClosure |
	//    XBooleanLiteral |
	//    XNumberLiteral |
	//    XNullLiteral |
	//    XStringLiteral |
	//    XTypeLiteral
	//;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}
	
	//XCollectionLiteral:
	//    XSetLiteral | XListLiteral
	//;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}
	
	//XSetLiteral:
	//    {XSetLiteral} '#' '{' (elements+=XExpression (',' elements+=XExpression )*)? '}'
	//;
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}
	
	//XListLiteral:
	//    {XListLiteral} '#' '[' (elements+=XExpression (',' elements+=XExpression )*)? ']'
	//;
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}
	
	//XClosure returns XExpression:
	//    =>({XClosure}
	//    '[')
	//        =>((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?='|')?
	//        expression=XExpressionInClosure
	//    ']';
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}
	
	//XExpressionInClosure returns XExpression:
	//    {XBlockExpression}
	//    (expressions+=XExpressionOrVarDeclaration ';'?)*
	//;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}
	
	//XShortClosure returns XExpression:
	//    =>({XClosure} (declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?='|') expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}
	
	//XParenthesizedExpression returns XExpression:
	//    '(' XExpression ')';
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}
	
	//XIfExpression returns XExpression:
	//    {XIfExpression}
	//    'if' '(' if=XExpression ')'
	//    then=XExpression
	//    (=>'else' else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}
	
	//XBasicForLoopExpression returns XExpression:
	//    {XBasicForLoopExpression}
	//    'for' '('(initExpressions+=XExpressionOrVarDeclaration (',' initExpressions+=XExpressionOrVarDeclaration)*)? ';'
	//        expression=XExpression? ';'
	//        (updateExpressions+=XExpression (',' updateExpressions+=XExpression)*)? ')'
	//        eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}
	
	//XWhileExpression returns XExpression:
	//    {XWhileExpression}
	//    'while' '(' predicate=XExpression ')'
	//        body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}
	
	//XDoWhileExpression returns XExpression:
	//    {XDoWhileExpression}
	//    'do'
	//        body=XExpression
	//    'while' '(' predicate=XExpression ')';
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}
	
	//XBlockExpression returns XExpression:
	//    {XBlockExpression}
	//    '{'
	//        (expressions+=XExpressionOrVarDeclaration ';'?)*
	//    '}';
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}
	
	//XExpressionOrVarDeclaration returns XExpression:
	//    XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}
	
	//XFeatureCall returns XExpression:
	//    {XFeatureCall}
	//    ('<' typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//    feature=[types::JvmIdentifiableElement|IdOrSuper]
	//    (=>explicitOperationCall?='('
	//        (
	//            featureCallArguments+=XShortClosure
	//          | featureCallArguments+=XExpression (',' featureCallArguments+=XExpression)*
	//        )?
	//    ')')?
	//    featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}
	
	//IdOrSuper :
	//    FeatureCallID | 'super'
	//;
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}
	
	//XBooleanLiteral returns XExpression :
	//    {XBooleanLiteral} ('false' | isTrue?='true');
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}
	
	//XNullLiteral returns XExpression :
	//    {XNullLiteral} 'null';
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}
	
	//XNumberLiteral returns XExpression :
	//    {XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}
	
	//XTypeLiteral returns XExpression :
	//    {XTypeLiteral} 'typeof' '(' type=[types::JvmType|QualifiedName] (arrayDimensions+=ArrayBrackets)* ')'
	//;
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}
	
	//XThrowExpression returns XExpression :
	//    {XThrowExpression} 'throw' expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}
	
	//XReturnExpression returns XExpression :
	//    {XReturnExpression} 'return' (->expression=XExpression)?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}
	
	//XSynchronizedExpression returns XExpression:
	//    =>({XSynchronizedExpression}
	//    'synchronized' '(') param=XExpression ')' expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}
	
	//XCatchClause :
	//    =>'catch' '(' declaredParam=FullJvmFormalParameter ')' expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}
	
	//@Override
	//QualifiedName:
	//    ValidID (=>'.' ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//Number hidden():
	//    HEX | (INT | DECIMAL) ('.' (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	///**
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes,
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// */
	//StaticQualifier:
	//    (ValidID '::')+
	//;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}
	
	//terminal HEX:
	//    ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+
	//    ('#' (('b'|'B')('i'|'I') | ('l'|'L')))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	}
	
	//terminal INT returns ecore::EInt:
	//    '0'..'9' ('0'..'9'|'_')*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	}
	
	//terminal DECIMAL:
	//    INT
	//    (('e'|'E') ('+'|'-')? INT)?
	//    (('b'|'B')('i'|'I'|'d'|'D') | ('l'|'L'|'d'|'D'|'f'|'F'))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	}
	
	//JvmTypeReference:
	//    JvmParameterizedTypeReference =>({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)*
	//    | XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXtype.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}
	
	//ArrayBrackets :
	//    '[' ']'
	//;
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXtype.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}
	
	//XFunctionTypeRef:
	//    ('(' (paramTypes+=JvmTypeReference (',' paramTypes+=JvmTypeReference)*)? ')')? '=>' returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXtype.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}
	
	//JvmParameterizedTypeReference:
	//    type=[JvmType|QualifiedName] (
	//        =>'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>'
	//        (=>({JvmInnerTypeReference.outer=current} '.') type=[JvmType|ValidID] (=>'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>')?)*
	//    )?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXtype.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}
	
	//JvmArgumentTypeReference returns JvmTypeReference:
	//    JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXtype.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}
	
	//JvmWildcardTypeReference:
	//    {JvmWildcardTypeReference} '?' (
	//      constraints+=JvmUpperBound (constraints+=JvmUpperBoundAnded)*
	//    | constraints+=JvmLowerBound (constraints+=JvmLowerBoundAnded)*
	//    )?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXtype.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}
	
	//JvmUpperBound :
	//    'extends' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXtype.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}
	
	//JvmUpperBoundAnded returns JvmUpperBound:
	//    '&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXtype.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}
	
	//JvmLowerBound :
	//    'super' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXtype.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}
	
	//JvmLowerBoundAnded returns JvmLowerBound:
	//    '&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundAndedElements getJvmLowerBoundAndedAccess() {
		return gaXtype.getJvmLowerBoundAndedAccess();
	}
	
	public ParserRule getJvmLowerBoundAndedRule() {
		return getJvmLowerBoundAndedAccess().getRule();
	}
	
	//JvmTypeParameter :
	//    name=ValidID
	//    (constraints+=JvmUpperBound (constraints+=JvmUpperBoundAnded)*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXtype.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}
	
	//QualifiedNameWithWildcard :
	//    QualifiedName  '.' '*';
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXtype.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//XImportSection:
	//    importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXtype.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}
	
	//XImportDeclaration:
	//    'import' (
	//        (static?='static' extension?='extension'? importedType=[JvmDeclaredType|QualifiedNameInStaticImport] (wildcard?='*' | memberName=ValidID))
	//        | importedType=[JvmDeclaredType|QualifiedName]
	//        | importedNamespace=QualifiedNameWithWildcard) ';'?
	//;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXtype.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}
	
	//QualifiedNameInStaticImport:
	//    (ValidID '.')+
	//;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXtype.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') */ | !('\\'|'"') )* '"'? |
	//            "'" ( '\\' . /* ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') */ | !('\\'|"'") )* "'"?;
	public TerminalRule getSTRINGRule() {
		return gaXtype.getSTRINGRule();
	}
	
	//terminal ML_COMMENT: '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaXtype.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT: '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXtype.getSL_COMMENTRule();
	}
	
	//terminal WS: (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaXtype.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaXtype.getANY_OTHERRule();
	}
}
