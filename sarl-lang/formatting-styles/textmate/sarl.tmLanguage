<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<!--

	  $Id$

	  File is automatically generated by the Xtext language generator.
	  Do not change it.

	  SARL is an general-purpose agent programming language.
	  More details on http://www.sarl.io

	  Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.

	  Licensed under the Apache License, Version 2.0 (the "License");
	  you may not use this file except in compliance with the License.
	  You may obtain a copy of the License at

	       http://www.apache.org/licenses/LICENSE-2.0

	  Unless required by applicable law or agreed to in writing, software
	  distributed under the License is distributed on an "AS IS" BASIS,
	  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	  See the License for the specific language governing permissions and
	  limitations under the License.

-->
<plist version="1.0">
<dict>
	<key>foldingStartMarker</key>
	<string>\{\s*(//.*)?$</string>
	<key>__sarlVersion</key>
	<string>0.15</string>
	<key>scopeName</key>
	<string>source.sarl</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.sarl</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>^\s*(\*)(?!/)</string>
					<key>name</key>
					<string>punctuation.definition.comment.sarl</string>
				</dict>
			</array>
			<key>name</key>
			<string>comment.block.sarl</string>
			<key>end</key>
			<string>(\*/)</string>
			<key>comment</key>
			<string>Multiline comments</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.sarl</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>(/\*+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.line.double-slash.sarl</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>comment.line.sarl</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(//)(.*)$</string>
			<key>comment</key>
			<string>Single-line comment</string>
		</dict>
		<dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.sarl</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.sarl</string>
				</dict>
			</array>
			<key>name</key>
			<string>string.quoted.double.sarl</string>
			<key>end</key>
			<string>"</string>
			<key>comment</key>
			<string>Double quoted strings of characters</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sarl</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>"</string>
		</dict>
		<dict>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.sarl</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.sarl</string>
				</dict>
			</array>
			<key>name</key>
			<string>string.quoted.single.sarl</string>
			<key>end</key>
			<string>'</string>
			<key>comment</key>
			<string>Single quoted strings of characters</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sarl</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>'</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?:[0-9][0-9]*\.[0-9]+([eE][0-9]+)?[fFdD]?)|(?:0[xX][0-9a-fA-F]+)|(?:[0-9]+[lL]?)</string>
			<key>name</key>
			<string>constant.numeric.sarl</string>
			<key>comment</key>
			<string>Numbers</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\@[_a-zA-Z$][_0-9a-zA-Z$]*</string>
			<key>name</key>
			<string>support.type.sarl</string>
			<key>comment</key>
			<string>Annotations</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(?:false)|(?:it)|(?:null)|(?:occurrence)|(?:this)|(?:true)|(?:void))\b</string>
			<key>name</key>
			<string>constant.language.sarl</string>
			<key>comment</key>
			<string>SARL Literals and Constants</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(?:boolean)|(?:byte)|(?:char)|(?:double)|(?:float)|(?:int)|(?:long)|(?:short)|(?:void))\b(?:\s*\[\s*\])*</string>
			<key>name</key>
			<string>storage.type.primitive.sarl</string>
			<key>comment</key>
			<string>Primitive types</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(?:import)|(?:package))\b</string>
			<key>name</key>
			<string>keyword.other.special.sarl</string>
			<key>comment</key>
			<string>Special Keywords</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(?:abstract)|(?:def)|(?:dispatch)|(?:extension)|(?:final)|(?:native)|(?:override)|(?:private)|(?:protected)|(?:public)|(?:static)|(?:strictfp)|(?:synchronized)|(?:transient)|(?:val)|(?:var)|(?:volatile))\b</string>
			<key>name</key>
			<string>storage.modifier.sarl</string>
			<key>comment</key>
			<string>Modifiers</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(?:agent)|(?:annotation)|(?:artifact)|(?:behavior)|(?:capacity)|(?:class)|(?:enum)|(?:event)|(?:interface)|(?:skill)|(?:space))\b</string>
			<key>name</key>
			<string>keyword.other.declaration.sarl</string>
			<key>comment</key>
			<string>Type Declarations</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?:(?:as)|(?:assert)|(?:assume)|(?:break)|(?:case)|(?:catch)|(?:continue)|(?:default)|(?:do)|(?:else)|(?:extends)|(?:finally)|(?:fires)|(?:for)|(?:if)|(?:implements)|(?:instanceof)|(?:new)|(?:on)|(?:requires)|(?:return)|(?:super)|(?:switch)|(?:throw)|(?:throws)|(?:try)|(?:typeof)|(?:uses)|(?:while)|(?:with))\b</string>
			<key>name</key>
			<string>keyword.control.sarl</string>
			<key>comment</key>
			<string>Standard Keywords</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?:\!)|(?:\!\=)|(?:\!\=\=)|(?:#)|(?:%)|(?:%\=)|(?:&amp;)|(?:&amp;&amp;)|(?:\()|(?:\))|(?:\*)|(?:\*\*)|(?:\*/)|(?:\*\=)|(?:\+)|(?:\+\+)|(?:\+\=)|(?:,)|(?:\-)|(?:\-\-)|(?:\-\=)|(?:\-\&gt;)|(?:\.)|(?:\.\.)|(?:\.\.\.)|(?:\.\.\&lt;)|(?:/)|(?:/\*)|(?://)|(?:/\=)|(?:\:)|(?:\:\:)|(?:;)|(?:\&lt;)|(?:\&lt;\&gt;)|(?:\=)|(?:\=\=)|(?:\=\=\=)|(?:\=\&gt;)|(?:\&gt;)|(?:\&gt;\=)|(?:\?)|(?:\?\.)|(?:\?\:)|(?:@)|(?:\[)|(?:\\)|(?:\])|(?:\^)|(?:\{)|(?:\|)|(?:\|\|)|(?:\})</string>
			<key>name</key>
			<string>keyword.operator.sarl</string>
			<key>comment</key>
			<string>Operators and Punctuations</string>
		</dict>
	</array>
	<key>name</key>
	<string>SARL</string>
	<key>firstLineMatch</key>
	<string>^//.*\bsarl\b.</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>version</key>
	<string>0.15</string>
	<key>uuid</key>
	<string>9FFC7A03-C195-3674-BA8C-0A7369460097</string>
	<key>fileTypes</key>
	<array>
		<string>sarl</string>
		<string>SARL</string>
		<string>Sarl</string>
	</array>
</dict>
</plist>
